<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[RocketMQ-Broker]]></title>
      <url>https://qiufanghua.github.io/2017/01/07/RocketMQ-Broker/</url>
      <content type="html"><![CDATA[<h2 id="Broker"><a href="#Broker" class="headerlink" title="Broker"></a>Broker</h2><p>&#x6D88;&#x606F;&#x7684;&#x4E2D;&#x8F6C;&#x8005;&#xFF0C;&#x8D1F;&#x8D23;&#x5B58;&#x50A8;&#x548C;&#x8F6C;&#x53D1;&#x6D88;&#x606F;&#x3002;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x6D88;&#x606F;&#x7684;&#x63A5;&#x6536;&#x3001;&#x5B58;&#x50A8;&#x3001;pull&#x670D;&#x52A1;&#x3002;&#x4E3A;&#x4FDD;&#x8BC1;Broker&#x9AD8;&#x53EF;&#x7528;&#xFF0C;Broker&#x5206;&#x4E3A;Master&#x4E0E;Slave&#xFF0C;&#x4E00;&#x4E2A;Master&#x53EF;&#x4EE5;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;Slaves&#xFF0C;Master&#x4E0E;Slave&#x6570;&#x636E;&#x540C;&#x6B65;&#x53EF;&#x4EE5;&#x662F;&#x540C;&#x6B65;&#x4E0E;&#x5F02;&#x6B65;&#x3002;</p>
<h2 id="Broker&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;"><a href="#Broker&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;" class="headerlink" title="Broker&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;"></a>Broker&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;</h2><h4 id="BrokerController"><a href="#BrokerController" class="headerlink" title="BrokerController"></a>BrokerController</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">BrokerController{</span><br><span class="line">    Properties{</span><br><span class="line">        BrokerConifg, NettyServerConfig, NettyClientConfig, MessageStoreConifg</span><br><span class="line">        ConsumerOffsetManager, ConsumerManager, ProducerManager</span><br><span class="line">        ClientHousekeepingService , PullMessageProcessor, PullRequestHoldService</span><br><span class="line">        MessageArrivingListener, Broker2Client, SubscriptionGroupManager</span><br><span class="line">        ConsumerIdsChanngeListener, RebalanceLockManager</span><br><span class="line">        SlaveSynchronize, MessageStore</span><br><span class="line">        BlockingQueue&lt;Runnable&gt; sendThreadPollQueue</span><br><span class="line">        FilterServerManager</span><br><span class="line">        TopicConfigManager</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    initialize(){</span><br><span class="line">        -&gt; topicConfigManager.load(); consumerOffsetManager.load(); subscriptionGroupManager.load();</span><br><span class="line">        -&gt; messageStore = <span class="keyword">new</span> DefaultMessageStore(messageStoreConfig,brokerStatsManager,messageArrivingListener,brokerConfig)</span><br><span class="line">        -&gt; messageStore.load()</span><br><span class="line">        -&gt; NettyRemotingServer remotingServer</span><br><span class="line">        -&gt; NettyRemotingServer fastRemotingServer</span><br><span class="line">        -&gt; sendMessageExecutor <span class="comment">// sendMessageThreadPoolNums = 16 + Runtime.getRuntime().availableProcessors() * 4</span></span><br><span class="line">        -&gt; pullMessageExecutor <span class="comment">// pullMessageThreadPoolNums = 16 + Runtime.getRuntime().availableProcessors() * 2</span></span><br><span class="line">        -&gt; adminBrokerExecutor <span class="comment">// adminBrokerThreadPoolNums = 16</span></span><br><span class="line">        -&gt; clientManageExecutor<span class="comment">// 16</span></span><br><span class="line">        -&gt; registerProcessor(){</span><br><span class="line">            -&gt; SendMessageProcessor, QueryMessageProcessor</span><br><span class="line">            -&gt; ClientManageProcessor, AdminBrokerProcessor</span><br><span class="line">        }</span><br><span class="line">        -&gt; schedule{</span><br><span class="line">            -&gt; consumerOffsetManager.persist()</span><br><span class="line">            -&gt; consumerOffsetManager.scanUnsubscribedTopic()</span><br><span class="line">        }</span><br><span class="line">        -&gt; namesrvAddr != <span class="keyword">null</span> brokerOuterAPI.updateNameServerAddressList(namesrvAddr){</span><br><span class="line">            -&gt; NettyRemotingClient.updateNameServerAddressList(lst){</span><br><span class="line">                -&gt; namesrvAddrList.set(addrs)</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> brokerOuterAPI.fetchNameServerAddr</span><br><span class="line">        -&gt; slave{</span><br><span class="line">            -&gt; messageStoreConfig.getHaMasterAddress()!=<span class="keyword">null</span></span><br><span class="line">                messageStore.updateHaMasterAdress(haMasterAddress)</span><br><span class="line">                <span class="keyword">this</span>.updateMasterHAServerAddrPeriodically = <span class="keyword">false</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                updateMasterHAServerAddrPeriodically = <span class="keyword">true</span></span><br><span class="line">            -&gt; schedule.slaveSynchronize.syncAll()</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            schedule.printMasterAndSlaveDiff()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    start(){</span><br><span class="line">        messageStore.start()</span><br><span class="line">        remotingServer.start()</span><br><span class="line">        brokerOuterAPI.start()</span><br><span class="line">        pullRequestHoldService.start</span><br><span class="line">        clientHousekeepingService.start()</span><br><span class="line">        filterServerManager.<span class="function">start</span><br><span class="line">        <span class="title">registerBrokerAll</span><span class="params">(<span class="keyword">true</span>,<span class="keyword">false</span>)</span></span><br><span class="line">        schedule.<span class="title">registerBrokerAll</span><span class="params">(<span class="keyword">true</span>,<span class="keyword">false</span>)</span></span><br><span class="line">        schedule.messageStore.cleanUnusedTopic</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">synchronized</span> <span class="title">registerBrokerAll</span><span class="params">(brokerClusterName,brokerAddr,brokerName,brokerId</span><br><span class="line">        haServerAddr,topicConfigWrapper,List&lt;String&gt; filterServerList,<span class="keyword">boolean</span> oneway)</span></span>{</span><br><span class="line">        TopicConfigSerializeWrapper topicConfigWrapper = <span class="keyword">this</span>.getTopicConfigManager().buildTopicConfigSerializeWrapper();</span><br><span class="line">        brokerOuterAPI,registerBrokerAll(){</span><br><span class="line">            -&gt; List&lt;String&gt; nameServerAddressList = remotingClient.getNameServerAddressList()</span><br><span class="line">            -&gt; forEach(nameServerAddressList){</span><br><span class="line">                -&gt; reisterBroker(namesrvAddr,clusterName,brokerAddr,brokerName,</span><br><span class="line">                    brokerId,hasServerAddr,topicConfigWrapper,filterServerList,oneway){</span><br><span class="line">                        -&gt; RegisterBrokerRequestHeader</span><br><span class="line">                        -&gt; RemotingCommand RequestCode.register_broker</span><br><span class="line">                        -&gt; request.body topic,filterServerList</span><br><span class="line">                    }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        -&gt; <span class="keyword">if</span>(updateMasterHAServerAddrPeriodically &amp;&amp; registerBrokerResult.getHaServerAddr != <span class="keyword">null</span>){</span><br><span class="line">            -&gt; messageStore.updateHaMasterAddress(haServerAddr)</span><br><span class="line">        }</span><br><span class="line">        -&gt; slaveSynchronize.setMasterAddr(masterAddr)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">namesrv.DefaultRequestProcessor{</span><br><span class="line">    registerBrokerWithFilerServer(ChannelHandlerContext ctx, request){</span><br><span class="line">        -&gt; namesrvController.getRouteInoManager().registerBroker(clusterName,brokerAddr,</span><br><span class="line">            brokerName,brokerId,haServerAddr,topicConfigSerializeWrapper,</span><br><span class="line">            filterServerList</span><br><span class="line">        )</span><br><span class="line">        -&gt; &#x83B7;&#x53D6;&#x987A;&#x5E8F;&#x6D88;&#x606F;topic</span><br><span class="line">        -&gt; kvConfigManager().getKVListByNamespace(NaesrvUtil.namespace_order_topic_config)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">CosumerOffsetManager{</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//topic@group, ConcurrentHashMap&lt;Integer//queueId,Long&gt;&gt; offsetTable</span></span><br><span class="line">}</span><br><span class="line">SubscriptionGroupManager{</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//groupName,SubscriptionGroupConfig&gt; subscriptionGroupTable</span></span><br><span class="line">    init(){</span><br><span class="line">        -&gt; put.tools_consumer_group,filtersrv_consumer_group,self_test_consumer_group,ons_http_proxy_group(CID_ONS-HTTP-PROXY)</span><br><span class="line">            ...</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">SubscriptionGroupConfig{</span><br><span class="line">    String groupName</span><br><span class="line">    <span class="keyword">boolean</span> consumeEnable, consumeFromMinEnable, consumeBroadcastEnable</span><br><span class="line">    <span class="keyword">int</span> retryQueueNums, retryMaxTimes</span><br><span class="line">    <span class="keyword">long</span> brokerId = Master_id=<span class="number">0L</span></span><br><span class="line">    <span class="keyword">long</span> whichBrokerWhenConsumerSlowly = <span class="number">1</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">NotifyMessageArrivingListener impl MessageArrivingListener{</span><br><span class="line">    <span class="function">PullRequestHoldServcie pullRequestHoldService</span><br><span class="line">    <span class="title">arriving</span><span class="params">(String topic, <span class="keyword">int</span> queueId, <span class="keyword">long</span> logicOffset)</span></span>{</span><br><span class="line">        -&gt; pullRequestHoldService.notifyMessageArriving(...)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="TopicConfigManger"><a href="#TopicConfigManger" class="headerlink" title="TopicConfigManger"></a>TopicConfigManger</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">TopicConfigManger{</span><br><span class="line">    <span class="function">Lock lockTopicConfigTable</span><br><span class="line">    ConcurrentHashMap&lt;String,TopicConfig&gt; topicConfigTable</span><br><span class="line">    Set&lt;String&gt; systemTopicList</span><br><span class="line">    <span class="title">TopicConfigManger</span><span class="params">()</span></span>{</span><br><span class="line">        -&gt; initicate topicConifgTable.put, self_test_topic, default_topic(TBW102),BenchmarkTest(<span class="number">1024</span>,<span class="number">1024</span>)</span><br><span class="line">            <span class="function">put <span class="title">brokerClusterName</span><span class="params">(DefaultCluster)</span>, put brokerName</span><br><span class="line">            put <span class="title">offset_move_event</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// rootDir/config/topics.json</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">TopicConfig</span>{</span><br><span class="line">    topicName</span><br><span class="line">    <span class="keyword">int</span> readQueueNums, writeQueueNums <span class="number">16</span></span><br><span class="line">    <span class="keyword">boolean</span> order</span><br><span class="line">    <span class="keyword">int</span> topicSysFlag</span><br><span class="line">    ToicFilterType.SINGLE_TAG</span><br><span class="line">    <span class="keyword">int</span> perm = PermName.prem_read | PermName.prem_write</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h2 id="Broker&#x542F;&#x52A8;&#x6D41;&#x7A0B;"><a href="#Broker&#x542F;&#x52A8;&#x6D41;&#x7A0B;" class="headerlink" title="Broker&#x542F;&#x52A8;&#x6D41;&#x7A0B;"></a>Broker&#x542F;&#x52A8;&#x6D41;&#x7A0B;</h2><h4 id="&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;"><a href="#&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;" class="headerlink" title="&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;"></a>&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;</h4><p><img src="/2017/01/07/RocketMQ-Broker/Broker-start.png" alt=""></p>
<h4 id="&#x6D41;&#x7A0B;&#x5206;&#x6790;"><a href="#&#x6D41;&#x7A0B;&#x5206;&#x6790;" class="headerlink" title="&#x6D41;&#x7A0B;&#x5206;&#x6790;"></a>&#x6D41;&#x7A0B;&#x5206;&#x6790;</h4><p>&#x7565;</p>
<h4 id="Broker-Namserver&#x6D41;&#x7A0B;&#x56FE;"><a href="#Broker-Namserver&#x6D41;&#x7A0B;&#x56FE;" class="headerlink" title="Broker-Namserver&#x6D41;&#x7A0B;&#x56FE;"></a>Broker-Namserver&#x6D41;&#x7A0B;&#x56FE;</h4><p><img src="/2017/01/07/RocketMQ-Broker/Broker-Namersrv.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RocketMQ-Namersrv]]></title>
      <url>https://qiufanghua.github.io/2017/01/07/RocketMQ-Namersrv/</url>
      <content type="html"><![CDATA[<h2 id="NameServer"><a href="#NameServer" class="headerlink" title="NameServer"></a>NameServer</h2><p>Namesrv&#xFF0C;&#x540D;&#x79F0;&#x670D;&#x52A1;&#xFF0C;&#x65E0;&#x72B6;&#x6001;&#xFF0C;&#x65E0;&#x5355;&#x70B9;&#xFF0C;&#x53EF;&#x6A2A;&#x5411;&#x6269;&#x5C55;&#xFF0C;&#x53EF;&#x90E8;&#x7F72;&#x591A;&#x4E2A;&#xFF0C;&#x4E00;&#x822C;&#x90E8;&#x7F72;3&#x53F0;&#xFF0C;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x65E0;&#x4EFB;&#x4F55;&#x4FE1;&#x606F;&#x540C;&#x6B65;&#xFF0C;&#x4E3A;&#x5BF9;&#x7B49;&#x8282;&#x70B9;&#x3002;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x529F;&#x80FD;&#x3002;</p>
<ol>
<li>&#x63A5;&#x6536;Broker&#x8BF7;&#x6C42;&#xFF0C;&#x6CE8;&#x518C;Broker&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li>
<li>&#x63A5;&#x6536;Client&#xFF08;Producer&#xFF0C;Consumer&#xFF09;&#x8BF7;&#x6C42;&#xFF0C;&#x6839;&#x636E;Topic&#x83B7;&#x53D6;&#x5230;Brokers&#x7684;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li>
</ol>
<h2 id="NameServer&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;"><a href="#NameServer&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;" class="headerlink" title="NameServer&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;"></a>NameServer&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;</h2><h4 id="NamesrvStartup"><a href="#NamesrvStartup" class="headerlink" title="NamesrvStartup"></a>NamesrvStartup</h4><p>Namesrv&#x542F;&#x52A8;&#x7C7B;&#xFF0C;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x751F;&#x6210;NamesrvConfig&#x3001;NettyServerConfig&#xFF08;&#x9ED8;&#x8BA4;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#x53F7;9876&#xFF09;&#x3001;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x521B;&#x5EFA;NamesrvController&#x5E76;&#x542F;&#x52A8;controller&#x3002;</p>
<h4 id="NamesrvController"><a href="#NamesrvController" class="headerlink" title="NamesrvController"></a>NamesrvController</h4><p>&#x6709;&#x70B9;&#x7C7B;&#x4F3C;&#x4E8E;&#x6211;&#x4EEC;MVC&#x4E2D;&#x5E95;Controller&#xFF0C;&#x6240;&#x6709;&#x7684;&#x4F9D;&#x8D56;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x4ED6;&#x6765;&#x83B7;&#x53D6;&#xFF0C;NameServer&#x4E2D;&#x5176;&#x4ED6;&#x7684;&#x7EC4;&#x4EF6;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x4ED6;&#x6765;&#x83B7;&#x53D6;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">NamesvController{</span><br><span class="line">    Properties{</span><br><span class="line">        RouteInfoManager routeInfoManager</span><br><span class="line">        RemotingServer remotingServer</span><br><span class="line">        BrokerHousekeepingService brokerHousekeepingService</span><br><span class="line">    }</span><br><span class="line">    -&gt; initialize(){</span><br><span class="line">        -&gt; <span class="function">create <span class="title">NettyRemotingServer</span><span class="params">(brokerHousekeepingService)</span></span><br><span class="line">        -&gt; <span class="title">registerProcessor</span><span class="params">()</span></span>{</span><br><span class="line">            -&gt; remotingServer.registerDefaultProcessor(<span class="function">create <span class="title">DefaultRequestProcessor</span><span class="params">()</span>, remotingExecutor)</span><br><span class="line">            -&gt; scheduleAtFixRate routeInfoManager.scanNotActiveBroker</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    -&gt; <span class="title">start</span><span class="params">()</span></span>{</span><br><span class="line">        -&gt; remotingServer.start()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<ol>
<li>&#x6253;&#x5F00;NameServer&#xFF0C;&#x7ED1;&#x5B9A;&#x76D1;&#x542C;&#x7AEF;&#x53E3;&#xFF0C;&#x63A5;&#x53D7;Broker&#x4E0E;&#x5BA2;&#x670D;&#x7AEF;&#x670D;&#x52A1;</li>
<li>&#x521B;&#x5EFA;RoteInfoManger&#x5B9E;&#x4F8B;&#xFF0C;&#x63A5;&#x53D7;Broker&#x6CE8;&#x518C;&#x4FE1;&#x606F;&#xFF0C;&#x6784;&#x5EFA;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li>
</ol>
<h4 id="RouteInfoManager"><a href="#RouteInfoManager" class="headerlink" title="RouteInfoManager"></a>RouteInfoManager</h4><p>&#x7EF4;&#x62A4;&#x6240;&#x6709;&#x7684;Broker&#x8DEF;&#x7531;&#x4FE1;&#x606F;&#x3001;&#x96C6;&#x6210;&#x4FE1;&#x606F;&#x3001;Topic&#x4FE1;&#x606F;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x8DEF;&#x7531;&#x4FE1;&#x606F;&#xFF0C;&#x5185;&#x5B58;&#x6570;&#x636E;&#xFF0C;broker&#x5B9A;&#x671F;&#x63A8;&#x9001;&#x6570;&#x636E;</span></span><br><span class="line">RouteInfoManager{</span><br><span class="line">    ReadWriteLock lock</span><br><span class="line">    HashMap&lt;String<span class="comment">//topic,List&lt;QueueData&gt;&gt; topicQueueTable</span></span><br><span class="line">    HashMap&lt;String<span class="comment">//brokerName,BrokerData&gt; brokerAddrTable</span></span><br><span class="line">    HashMap&lt;String<span class="comment">//clusterName,Set&lt;String//brokerName&gt;&gt; culsterAddrTable</span></span><br><span class="line">    HashMap&lt;String<span class="comment">//brokerAddr,BrokerLiveInfo&gt; brokerLiveTable</span></span><br><span class="line">    HashMap&lt;String<span class="comment">//brokerAddr,List&lt;String&gt;//filter server&gt; filterServerTable</span></span><br><span class="line">    <span class="function">RegisterBrokerResult <span class="title">regsiterBroker</span><span class="params">()</span></span>{</span><br><span class="line">        -&gt; lock</span><br><span class="line">        -&gt; Set&lt;String&gt; brokerNames = clusterAddrTable.get(clusterName);brokerNames.add</span><br><span class="line">            <span class="comment">// &#x66F4;&#x65B0;&#x96C6;&#x6210;&#x4FE1;&#x606F;</span></span><br><span class="line">        -&gt; BrokerData brokerData = brokerAddrTable.get(brokerName)</span><br><span class="line">        -&gt; brokerData == <span class="keyword">null</span>{<span class="comment">//&#x66F4;&#x65B0;&#x4E3B;&#x5907;&#x4FE1;&#x606F;</span></span><br><span class="line">            -&gt; registerFirst = <span class="keyword">true</span>;</span><br><span class="line">            -&gt; brokerData = <span class="keyword">new</span> BrokerData()</span><br><span class="line">            -&gt; brokerData.setBrokerAddrs(HashMap&lt;Long<span class="comment">//brokerId,String//broker address&gt;)</span></span><br><span class="line">        }</span><br><span class="line">        String oldAddr = brokerData.getBrokerAddrs().put(brokerId,brokerAddr)</span><br><span class="line">        &#xFF0D;&gt; &#x66F4;&#x65B0;Topic&#x4FE1;&#x606F;</span><br><span class="line">        &#xFF0D;&gt; topicConfigWrapper != <span class="keyword">null</span> &amp;&amp; master_id == brokerId{</span><br><span class="line">            -&gt; isBrokerTopicConfigChanged(String brokerAddr, DataVersion dataVersion){</span><br><span class="line">                <span class="comment">// brokerLiveTable.get(brokerAddr) == null || !dataVersion</span></span><br><span class="line">                -&gt; ConcurrentHashMap&lt;String,TopicConfig&gt; tcTable=topicConfigWrapper.getTopicConfigTable()</span><br><span class="line">                -&gt; tcTable.forEach{</span><br><span class="line">                    -&gt; createAndUpdateQueueData(brokerName, TopicConfig){</span><br><span class="line">                        -&gt; QueueData queueData</span><br><span class="line">                        -&gt; queueData.setBrokerName(brokerName)</span><br><span class="line">                        -&gt; queueData.setWriteQueueNums,setReadQueueNums,setPerm,setTopicSynFlag</span><br><span class="line">                        -&gt; List&lt;QueueData&gt; queueDataList = topciQueueTable.get(topicName)</span><br><span class="line">                        -&gt; createOrUpdate queueDataList</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        -&gt; brokerLiveTable.put(brokerAddr,<span class="keyword">new</span> BrokerLiveInfo())</span><br><span class="line">        -&gt; filterServerTable</span><br><span class="line">        -&gt; brokerId != master_id then setHaServerAddr, setMasterAddr</span><br><span class="line">    }</span><br><span class="line">    routeInfoManager().pickupTopicRouteData(topic){</span><br><span class="line">        -&gt; TopciRouteData create</span><br><span class="line">        -&gt; lock</span><br><span class="line">        -&gt; List&lt;QueueData&gt; queueDataList = topicQueueTable.get(topic),brokerAddrTable,filterServerTable</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">QueueData{</span><br><span class="line">    String brokerName</span><br><span class="line">    <span class="keyword">int</span> readQueueNums</span><br><span class="line">    <span class="keyword">int</span> writeQueuNums</span><br><span class="line">    <span class="keyword">int</span> perm</span><br><span class="line">    <span class="keyword">int</span> topicSynFlag</span><br><span class="line">}</span><br><span class="line">BrokerData{</span><br><span class="line">    String brokerName</span><br><span class="line">    HashMap&lt;Long<span class="comment">//brokerId,String//broker address&gt; brokerAddrs</span></span><br><span class="line">}</span><br><span class="line">RouterInfoManager.BrokerLiveInfo{</span><br><span class="line">    <span class="keyword">long</span> lastUpdateTimestamp</span><br><span class="line">    DataVersion dataVersion</span><br><span class="line">    Channel channel</span><br><span class="line">    String haServerAddr</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h5 id="Broker&#x914D;&#x7F6E;&#x4FE1;&#x606F;"><a href="#Broker&#x914D;&#x7F6E;&#x4FE1;&#x606F;" class="headerlink" title="Broker&#x914D;&#x7F6E;&#x4FE1;&#x606F;"></a>Broker&#x914D;&#x7F6E;&#x4FE1;&#x606F;</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brokerClusterName=DefaultCluster</span><br><span class="line">brokerName=broker-a</span><br><span class="line">brokerId=0</span><br><span class="line">deleteWhen=04</span><br><span class="line">fileReservedTime=48</span><br><span class="line">brokerRole=ASYNC_MASTER</span><br><span class="line">flushDiskType=ASYNC_FLUSH</span><br></pre></td></tr></table></figure>
<h4 id="NettyRemotingServer-Client"><a href="#NettyRemotingServer-Client" class="headerlink" title="NettyRemotingServer/Client"></a>NettyRemotingServer/Client</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">NettyRemotingClient extends NettyRemotingAbstract{</span><br><span class="line">    <span class="keyword">long</span> LockTimeoutMills=<span class="number">3000</span></span><br><span class="line">    NettyClientConfig</span><br><span class="line">    Bootstrap</span><br><span class="line">    EventLoopGroup</span><br><span class="line">    DefaultEventExecutorGroup</span><br><span class="line">    Lock lockChannelTables</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//addr, ChannelWrapper&gt; channelTables</span></span><br><span class="line">    Timer<span class="comment">// clientHuseKeepingService</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//name server</span></span><br><span class="line">    AtomicReference&lt;List&lt;String&gt;&gt; namesrvAddrList</span><br><span class="line">    AtomicReference&lt;String&gt; namesrvAddrChoosed</span><br><span class="line">    AtomicInteger namesrvIndex</span><br><span class="line">    Lock lockNamesrvChannel</span><br><span class="line">    <span class="comment">// &#x5904;&#x7406;callback response</span></span><br><span class="line">    ExecutorService publicExecutor</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">NettyRemotingServer extends NettyRemotingAbstract{</span><br><span class="line">    Properties{</span><br><span class="line">        ServerBootstrap serverBootstrap</span><br><span class="line">        EventLoopGroup eventLoopGroupSelector, eventLoopGroupBoss</span><br><span class="line">        DefaultEventExecutorGroup defaultEventExecutorGroup</span><br><span class="line">        ExecutorService publicExecutor</span><br><span class="line">        ChannelEventListener channelEventListener</span><br><span class="line">    }</span><br><span class="line">    NettyRemotingServer(){</span><br><span class="line">        -&gt; eventLoopGroupSelector = EpollEventLoopGroup() <span class="keyword">for</span> linux</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    start(){</span><br><span class="line">        -&gt; defaultEventExecutorGroup = DefaultEventExecutorGroup()</span><br><span class="line">        -&gt; ServerBootstrap childHandler.childHander(NettyConnectManagerHandler, NettyServerHandler)</span><br><span class="line">        -&gt; serverBootstrap.bind()</span><br><span class="line">        -&gt; <span class="function">scheduleAtFixedRate <span class="title">scanResponseTable</span><span class="params">()</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    NettyConnectManageHandler</span>{</span><br><span class="line">        channelActive(ChannelHandlerContext ctx){</span><br><span class="line">            channelEventListener != <span class="keyword">null</span> {</span><br><span class="line">                nettyEventExecuter.putNettyEvent</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    NettyServerHandler&lt;RemotingCommand&gt;{</span><br><span class="line">        <span class="comment">// remoting command NettyDecoder decode</span></span><br><span class="line">        channelRead0(ChannelHandlerContext ctx, RemotingCommand msg){</span><br><span class="line">            -&gt; processMessageReceived(ctx, msg)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">NettyRemotingAbstract{</span><br><span class="line">    Properties{</span><br><span class="line">        NettyEventExecuter nettyEventExecuter</span><br><span class="line">        Semaphore semaphoreOnewary, semaphoreAysnc</span><br><span class="line">        ConcurrentHashMap&lt;Integer<span class="comment">// opaque, ResposeFuture&gt; responseTable</span></span><br><span class="line">        Pair&lt;NettyRequestProcessor, ExecutorService&gt; defaultRequestProcessor</span><br><span class="line">        HashMap&lt;Integer<span class="comment">// request code,Pair&lt;NettyRequestProcesor,ExecutorService&gt;&gt; processorTable</span></span><br><span class="line">    }</span><br><span class="line">    NettyEventExecuer{</span><br><span class="line">        Proerties{</span><br><span class="line">            LinkedBlockingQueue&lt;NettyEvent&gt; eventQueue</span><br><span class="line">            <span class="keyword">int</span> maxSize = <span class="number">10000</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    processMessageReceived(ChannelHandlerContext ctx, RemotingCommand msg){</span><br><span class="line">        -&gt; requestCmd procesRequestCommand</span><br><span class="line">        -&gt; responseCmd processResponseCommand</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    processRequestCommand(ChannelHandlerContext ctx, RemotingCommand msg) {</span><br><span class="line">        -&gt; Pair&lt;NettyRequestProcessor, ExecutorService&gt; pair = processorTable.get(cmd.getCode)</span><br><span class="line">        -&gt; RemotingCommand response = pair.getObject1().processRequest(ctx, cmd)</span><br><span class="line">        -&gt; !cmd.isOnewayRPC(){</span><br><span class="line">            -&gt; response.setOpaque(cmd.getOpaque);ctx.writeAndFlush</span><br><span class="line">        } <span class="keyword">else</span> {<span class="comment">// nothing}</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    processResponseCommand(ChannelHandlerContext ctx, RemotingCommand cmd){</span><br><span class="line">        -&gt; responseFuture = responsTable.get(cmd.getOpaque)</span><br><span class="line">        -&gt; responseFuture.setResponseCommand(cmd); responseFuture.release</span><br><span class="line">        -&gt; executor.submit  responseFuture.executeInvokeCallback</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    invokeOneway(Channel channel, RemotingCommand request, <span class="keyword">long</span> timeoutMillis) {</span><br><span class="line">        -&gt; request.markOnewayRPC();</span><br><span class="line">        -&gt; semaphoreOneway.tryAcquire(timeoutMillis)</span><br><span class="line">        -&gt; acquired{</span><br><span class="line">            -&gt; SemaphoreReleaseOnlyOnce once = <span class="keyword">new</span> SemaphoreRelease(semaphoreOneway)</span><br><span class="line">            -&gt; channel.writeAndFlush(request).addListener(){operationComplete(){once.release}}</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    invokeAsynImpl(Channel channel, RemotingCommand request, <span class="keyword">long</span> timeouMills, InvokeCallback callback){</span><br><span class="line">        -&gt; acquired = seamphoreAsync.tryAcquire()</span><br><span class="line">        -&gt; SeamphoreReleaseOnlyOnce once = SeamphoreReleaeOnlyOnce(seamphoreAsync);</span><br><span class="line">        -&gt; ResponseFuture(request.getOpaque, timeoutMills, invokeCallback, once) responseFuture</span><br><span class="line">        -&gt; responseTable.put(request.getOpaque, responseFuture)</span><br><span class="line">        -&gt; channel.writeAndFlush(request).addListener(ChannelFutureListener f){</span><br><span class="line">            -&gt; f.isSuccess responseFutrue.setSendRequestOk(<span class="keyword">true</span>)</span><br><span class="line">            -&gt; responsFuture.executeInvokeCallback()</span><br><span class="line">            -&gt; responsFuture.release()</span><br><span class="line">            -&gt; responseTable.remove()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    scanResponseTable(){</span><br><span class="line">        -&gt; forEntry.reponsTable{</span><br><span class="line">            -&gt; ResponseFuture rep</span><br><span class="line">            -&gt; rep.getBeginTimestamp() + rep.getTimoutMills() + <span class="number">1000</span> &lt;= currentTimeMillis {</span><br><span class="line">                -&gt; expired;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">ReponseFuture{</span><br><span class="line">    Properties{</span><br><span class="line">        <span class="keyword">volatile</span> RemotingCommand responseCommand;</span><br><span class="line">        <span class="keyword">volatile</span> <span class="keyword">boolean</span> sendRequestsOk = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> opaque</span><br><span class="line">        <span class="keyword">long</span> timeoutMills</span><br><span class="line">        CountDownLatch countDownLatch</span><br><span class="line">        SemaphoreReleaseOnlyOnce once</span><br><span class="line">        AtomicBoolean executeCallbackOnlyOnce;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    executeInvokeCallback(){</span><br><span class="line">        -&gt; executeCallbackOnlyOnce.campreAndSet(<span class="keyword">false</span>,<span class="keyword">true</span>) invokeCallback.operationComplete(<span class="keyword">this</span>)</span><br><span class="line">    }</span><br><span class="line">    <span class="function">RemotingCommand <span class="title">waitResponse</span><span class="params">(<span class="keyword">long</span> timeoutMills)</span></span>{</span><br><span class="line">        -&gt; countDownLatch.awit(timeoutMills)</span><br><span class="line">        -&gt; <span class="keyword">return</span> responseCommand</span><br><span class="line">    }</span><br><span class="line">    putResponse(RemotingCommand responseCommand){</span><br><span class="line">        -&gt; countDownLatch.countDown()</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">SemaphoreReleaseOnlyOnce{</span><br><span class="line">    <span class="function">atomicBoolean released</span><br><span class="line">    Semaphore semaphore</span><br><span class="line">    <span class="title">SemaphoreReleaseOnlyOnce</span><span class="params">(Semaphore semaphore)</span></span><br><span class="line">    <span class="title">release</span><span class="params">()</span></span>{</span><br><span class="line">        released.compareAndSet(<span class="keyword">false</span>, <span class="keyword">true</span>) semaphore.release()</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="BrokerHousekeepingService"><a href="#BrokerHousekeepingService" class="headerlink" title="BrokerHousekeepingService"></a>BrokerHousekeepingService</h4><p>&#x76D1;&#x542C;Broker&#x4E0E;NameServer&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5B9E;&#x65F6;&#x7684;&#x66F4;&#x65B0;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</p>
<h2 id="NameServer&#x542F;&#x52A8;&#x6D41;&#x7A0B;"><a href="#NameServer&#x542F;&#x52A8;&#x6D41;&#x7A0B;" class="headerlink" title="NameServer&#x542F;&#x52A8;&#x6D41;&#x7A0B;"></a>NameServer&#x542F;&#x52A8;&#x6D41;&#x7A0B;</h2><h4 id="&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;"><a href="#&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;" class="headerlink" title="&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;"></a>&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x56FE;</h4><p><img src="/2017/01/07/RocketMQ-Namersrv/Namesrv-start.png" alt=""></p>
<h4 id="&#x6D41;&#x7A0B;&#x5206;&#x6790;"><a href="#&#x6D41;&#x7A0B;&#x5206;&#x6790;" class="headerlink" title="&#x6D41;&#x7A0B;&#x5206;&#x6790;"></a>&#x6D41;&#x7A0B;&#x5206;&#x6790;</h4><p>&#x7565;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RocketMQ-Consumer-Message]]></title>
      <url>https://qiufanghua.github.io/2017/01/06/RocketMQ-Consumer-Message/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[RocketMQ-Producer-Message]]></title>
      <url>https://qiufanghua.github.io/2017/01/06/RocketMQ-Producer-Message/</url>
      <content type="html"><![CDATA[<h2 id="Producer-Message&#x4E3B;&#x8981;&#x7C7B;"><a href="#Producer-Message&#x4E3B;&#x8981;&#x7C7B;" class="headerlink" title="Producer Message&#x4E3B;&#x8981;&#x7C7B;"></a>Producer Message&#x4E3B;&#x8981;&#x7C7B;</h2><h4 id="&#x6D88;&#x606F;&#x5B58;&#x50A8;"><a href="#&#x6D88;&#x606F;&#x5B58;&#x50A8;" class="headerlink" title="&#x6D88;&#x606F;&#x5B58;&#x50A8;"></a>&#x6D88;&#x606F;&#x5B58;&#x50A8;</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line">DefaultMessageStore{</span><br><span class="line">    MessageFilter messageFilter</span><br><span class="line">    MessageStoreConfig</span><br><span class="line">    CommitLog commitLog</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//topic,ConcurrentHashMap&lt;Integer//queueId,ConsumeQueue&gt;&gt; consumerQueueTable</span></span><br><span class="line">    <span class="function">FlushConsumeQueueService</span><br><span class="line">    CleanCommitedLogService</span><br><span class="line">    CleanConsumeQueueService</span><br><span class="line">    IndexService</span><br><span class="line">    AllocateMapedFileService</span><br><span class="line">    ReputMessageService</span><br><span class="line">    HAService</span><br><span class="line">    ScheduleMessageService</span><br><span class="line">    StoreCheckpoint</span><br><span class="line">    ScheduledExcutorService</span><br><span class="line">    MessageArrviingListener</span><br><span class="line">    <span class="title">load</span><span class="params">()</span></span>{</span><br><span class="line">        -&gt; lastExitOk = !root/abort file exist</span><br><span class="line">        -&gt; commitLog.load</span><br><span class="line">        -&gt; load consumeQueue <span class="keyword">for</span> paths root/consumequeue<span class="comment">/*{</span><br><span class="line">            -&gt; File dirLogic = root/consumequque</span><br><span class="line">            -&gt; File[] fileTopicList// root/consumequeue/{topci}/{queueid}</span><br><span class="line">        }</span><br><span class="line">        -&gt; indexService.load(lastExitOk)</span><br><span class="line">        -&gt; recover(lastExitOk){</span><br><span class="line">            -&gt; reconverConsumerQueue(){</span><br><span class="line">                consumerQueueTable.forEach(){consumeQueue.reconver()}</span><br><span class="line">            }</span><br><span class="line">            -&gt; lastExitOk commitLog.recoverNormally(){</span><br><span class="line">            }else{commitLog.recoverAbnormally()}</span><br><span class="line">            -&gt; recoverTopicQueueTable(){</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    pubMessage(MessageExtBrokerInner msg){</span><br><span class="line">        -&gt; isOSPageCacheBusy(){</span><br><span class="line">            -&gt; long begin = commitLong().getBeginTimeInLock()</span><br><span class="line">            -&gt; diff = systemClock.now() - begin</span><br><span class="line">            -&gt; if(diff &lt; 10000000 &amp;&amp; diff &gt; messageStoreConfig.getOsPageCacheBusyTimeOutMills() //1000) true</span><br><span class="line">        }</span><br><span class="line">        -&gt; commitLog.putMessage(msg)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">CommitLog{</span><br><span class="line">    // store all meatdata downtime for recovery, data protection reliability</span><br><span class="line">    static int messageMagicCode= Message&apos;s MAGIC CODE daa320a7</span><br><span class="line">    static int BlankMagicCode= End of file empty MAGIC CODE cbd43194</span><br><span class="line">    MapedFileQueue mapedFileQueue</span><br><span class="line">    FlushCommitLogService</span><br><span class="line">    AppendMessageCallback</span><br><span class="line">    HashMap&lt;String//topic-queueid,Long//offset, mapedFileQueue.getMaxOffset()/CQStoreUnitSize&gt; topicQueueTable</span><br><span class="line">    CommitLog{</span><br><span class="line">        -&gt; mapedFileQueue(store/commiteLog, mapedFileSizeCommitLog// default is 1G, AllocateMapedFileService)</span><br><span class="line">        -&gt; flshCommitedLogService</span><br><span class="line">        -&gt; appendMessageCallback DefaultAppendMessageCallback</span><br><span class="line">    }</span><br><span class="line">    recoverNormally(){</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    DispatchRequest checkMessageAndReturnSize(byteBuffer, boolean checkCRC, boolean readBody){</span><br><span class="line">    }</span><br><span class="line">    final int msgLen = 4 // 1 TOTALSIZE</span><br><span class="line">                    + 4 // 2 MAGICCODE</span><br><span class="line">                    + 4 // 3 BODYCRC</span><br><span class="line">                    + 4 // 4 QUEUEID</span><br><span class="line">                    + 4 // 5 FLAG</span><br><span class="line">                    + 8 // 6 QUEUEOFFSET</span><br><span class="line">                    + 8 // 7 PHYSICALOFFSET</span><br><span class="line">                    + 4 // 8 SYSFLAG</span><br><span class="line">                    + 8 // 9 BORNTIMESTAMP</span><br><span class="line">                    + 8 // 10 BORNHOST</span><br><span class="line">                    + 8 // 11 STORETIMESTAMP</span><br><span class="line">                    + 8 // 12 STOREHOSTADDRESS</span><br><span class="line">                    + 4 // 13 RECONSUMETIMES</span><br><span class="line">                    + 8 // 14 Prepared Transaction Offset</span><br><span class="line">                    + 4 + (bodyLength &gt; 0 ? bodyLength : 0) // 14 BODY</span><br><span class="line">                    + 1 + topicLength // 15 TOPIC</span><br><span class="line">                    + 2 + (propertiesLength &gt; 0 ? propertiesLength : 0) // 16</span><br><span class="line">                                                                        // propertiesLength</span><br><span class="line">                    + 0;</span><br><span class="line">    putMessage(MessageExtBrokerInner msg){</span><br><span class="line">        -&gt; MapedFile mapedFile = mapedFileQueue.getLastMapedFileWithLock()</span><br><span class="line">        -&gt; synchronized(this){</span><br><span class="line">            -&gt; beginTimeInLock</span><br><span class="line">            -&gt; msg.setStoreTimestamp(beginTimeInLock)</span><br><span class="line">            -&gt; mapedFile == null then mapedFileQueue.getLastMapedFile()// if full create</span><br><span class="line">            -&gt; mapedFile.appendMessage(msg, appendMessageCallback)</span><br><span class="line">                appendMessageCallback.doAppend</span><br><span class="line">        }</span><br><span class="line">        -&gt; flush</span><br><span class="line">        -&gt; if synchronous write double</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">CommitLog.DefaultAppendMessageCallback{</span><br><span class="line">    doAppend(){</span><br><span class="line">        -&gt; long msgId = MessageDecoder.createMessageId(msgIdMemory, msgInner.getStoreHostBytes//storehost port,wroteOffset){</span><br><span class="line">            -&gt; msg_id_length = 8+8</span><br><span class="line">            -&gt; put(addr), putLong(offset)</span><br><span class="line">                // addr: put(storehost.getAddress.getAddress// the highest order byte), putInt(getPort)</span><br><span class="line">        }</span><br><span class="line">        -&gt; long wroteOffset = fileFromOffset + byteBuffer.position()</span><br><span class="line">        -&gt; queueOffset = CommitLog.this.topicQueueTable(topic + &quot;-&quot; queueID) default 0L</span><br><span class="line">        -&gt; transType=transactionPrepared,rollback queueOffset=0L</span><br><span class="line">            //prepared and rollback message is not consumed, will not enter the consumer queue</span><br><span class="line">        -&gt; AppendMessageResult(put_ok,wroteOffset,msgLen,msgId,msgInner.getStoreTimestamp</span><br><span class="line">            queueOffset,defaultMessageStore.now()-beginTimeMills)</span><br><span class="line">        -&gt; not transcation type topicQueueTable.put(key, ++queueOffset)</span><br><span class="line">            // the next update consumeQueue information</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">ConsumeQueue{</span><br><span class="line">    DefaultMessageStore defaultMessageStore</span><br><span class="line">    MapedFileQueue mapedFileQueue</span><br><span class="line">    String topic;</span><br><span class="line">    int queueId</span><br><span class="line">    ByteBuffer byteBufferIndex</span><br><span class="line">    int mapedFileSize</span><br><span class="line">    maxPhysicOffset = -1</span><br><span class="line">    volatile long minLogicOffset = 0</span><br><span class="line">    int CQStoreUnitSize = 20</span><br><span class="line"></span><br><span class="line">    ConsumeQueue(String topic, int queueId, String storePath, int mapedFileSize, DefaultMessageStore){</span><br><span class="line">        -&gt; String queueDir = storePath/topic/queueId</span><br><span class="line">        -&gt; mapedFileQueue = new MapedFileQueue(queueDir, mapedFileSize)//30W * ConsumerQueue.CQSotreUnitSize(20)</span><br><span class="line">        -&gt; byteBufferIndex = ByteBuffer.allocate(CQStoreUnitSize)</span><br><span class="line">    }</span><br><span class="line">    load(){</span><br><span class="line">        -&gt; mapedFileQueue.load()</span><br><span class="line">    }</span><br><span class="line">    recover(){</span><br><span class="line">        -&gt; List&lt;MapedFile&gt; mapedFiles = mapedFileQueue.getMapedFiles()</span><br><span class="line">        -&gt; last 3 mapedFiles</span><br><span class="line">        -&gt; long processOffset = mapedFile.getFileFromOffset()</span><br><span class="line">        -&gt; mapedFileOffset=0</span><br><span class="line">        -&gt; while{</span><br><span class="line">            -&gt; for (int i=0;i&lt;this.mapedFileSize;i++CQStoreUnitSize){</span><br><span class="line">                -&gt; long offset=byteBuffer.getLong</span><br><span class="line">                -&gt; int size=byteBuffer.getInt()</span><br><span class="line">                -&gt; long tagsCode=getLong</span><br><span class="line">                -&gt; if(offset&gt;=0&amp;&amp; size&gt;0){ // this file is valid</span><br><span class="line">                    -&gt; mapedFileOffset=i + CQStoreUnitSize</span><br><span class="line">                    -&gt; this.maxPhysicOffset = offset</span><br><span class="line">                } else {break} // is invalid</span><br><span class="line">            }</span><br><span class="line">            if(mapedFileOffset==this.mapedFileSize){// if this file is valid then get next</span><br><span class="line">                index++</span><br><span class="line">                if is the last one then break</span><br><span class="line">                else get the next file{</span><br><span class="line">                    -&gt; mapedFile=next</span><br><span class="line">                    -&gt; processOffset=mapedFile.getFileFromOffset</span><br><span class="line">                    -&gt; mapedFileOffset=0</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        -&gt; processOffset += mapedFileOffset</span><br><span class="line">        -&gt; mapedFileQueue.truncateDirtyFiles(processOffset)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">MapedFileQueue{</span><br><span class="line">    String storePath</span><br><span class="line">    int mapedFileSize</span><br><span class="line">    List&lt;MapedFile&gt; mapedFiles</span><br><span class="line">    ReadWriteLock readWriteLock</span><br><span class="line">    AllocateMapedfielService</span><br><span class="line">    long committedWhere</span><br><span class="line">    volatile long storeTimestamp</span><br><span class="line"></span><br><span class="line">    load(){</span><br><span class="line">        -&gt; File[] files = dir.listFiles();</span><br><span class="line">        -&gt; Arrays.sort(files); ascending order</span><br><span class="line">        -&gt; files.forEach{</span><br><span class="line">            -&gt; MapedFile mapedFile=new MapedFile(file.getPath, mapedFileSize)</span><br><span class="line">            -&gt; mapedFile.setWrotePostion(this.mapedFileSize)</span><br><span class="line">            -&gt; mapedFile.setCommittedPosition(this.mapedFileSize)</span><br><span class="line">                // MessageStoreConfig.mapedFileSizeConsumeQueue = 30W * ConsumerQueue.CQSotreUnitSize(20)</span><br><span class="line">            -&gt; add</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    truncateDirtyFiles(offset){</span><br><span class="line">        mapedFiles.forEach{</span><br><span class="line">            -&gt; long fileTailOffset = file.getFileFromOffset + this.mapedFileSize</span><br><span class="line">            -&gt; if (fileTailOffset &gt; offset){</span><br><span class="line">                // offset&#x4E4B;&#x540E;&#x7684;&#x6587;&#x4EF6;</span><br><span class="line">                if(offset&gt;=file.getFileFromOffset){</span><br><span class="line">                    // offset &#x5728;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x4E2D;&#x95F4;</span><br><span class="line">                    -&gt; file.setWrotePosition((int) (offset % this.mapedFilesSize))</span><br><span class="line">                    -&gt; file.setCommitedPosition...</span><br><span class="line">                } else {</span><br><span class="line">                    -&gt; file.destroy(1000)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">MapedFile{</span><br><span class="line">    static final AtomicLong totalMapedVitualMemory</span><br><span class="line">    static fianl AtomicInteger totalMapedFiles</span><br><span class="line">    String fileName</span><br><span class="line">    long fileFromOffset</span><br><span class="line">    int fileSize</span><br><span class="line">    MappedByteBuffer mappedByteBuffer</span><br><span class="line">    AtomicInteger wrotePosition, committedPosistion</span><br><span class="line">    FileChannel fileChannel</span><br><span class="line">    volatile long storeTimestamp</span><br><span class="line">    boolean firstCreateInQueue</span><br><span class="line">    MapedFile(){</span><br><span class="line">        -&gt; fileFromOffset = Long.parseLong(file.getName())</span><br><span class="line">        -&gt; fileChannel = new RandowAccessFile(file, &quot;rw&quot;).getChannel()</span><br><span class="line">        -&gt; mappedByteBuffer = fileChannel.map(MapMode.read_write,0,fileSize)</span><br><span class="line">    }</span><br><span class="line">    appendMessage(Object msg, AppendMessageCallback cb){</span><br><span class="line">        -&gt; currentPos = wrotePosition.get()</span><br><span class="line">        -&gt; ByteBuffer byteBuffer = mappedByteBuffer.slice()</span><br><span class="line">        -&gt; byteBuffer.position(currentPos)</span><br><span class="line">        -&gt; cb.doAppend(fileFromOffset,byteBuffer,fileSize - currentPos, msg)</span><br><span class="line">        -&gt; wrotePosition.addAndGet(result.getWroteBytes())</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">IndexService{</span><br><span class="line">    DefaultMessageStore</span><br><span class="line">    int hashSlotNum</span><br><span class="line">    int indexNum</span><br><span class="line">    String storePath</span><br><span class="line">    ArrayList&lt;IndexFile&gt; indexFileList</span><br><span class="line">    ReadWriteLock</span><br><span class="line">    IndexService(){</span><br><span class="line">        -&gt; hashSlotNum = defaultMessageStore.getMessageStoreConfig.getMaxHashSlotNum()// 5000000</span><br><span class="line">        -&gt; indexNum = //5000000 * 4</span><br><span class="line">        -&gt; storePath = root/index</span><br><span class="line">    }</span><br><span class="line">    load(boolean lastExitOk){</span><br><span class="line">        -&gt; dir.listFiles(); Arrays.sort(files);</span><br><span class="line">        -&gt; forEache{</span><br><span class="line">            -&gt; IndexFile f = new IndexFile(path, hashSlotNum, indexNum, 0, 0)</span><br><span class="line">            -&gt; f.load();</span><br><span class="line">            -&gt; if(!lastExitOk) {</span><br><span class="line">                -&gt; f.getEndTimestamp &gt; defaultMessageStore.getStoreCheckpoting().getIndexMsgTimestamp(){</span><br><span class="line">                    -&gt; f.destroy(0)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">IndexFile{</span><br><span class="line">    static int hash_slot_size = 4</span><br><span class="line">    static int idex_size = 20</span><br><span class="line">    static int invalid_index = 0</span><br><span class="line">    int hashSlotNum</span><br><span class="line">    int indexNum</span><br><span class="line">    MapedFile mapedFile</span><br><span class="line">    FileChannel fileChannel</span><br><span class="line">    MappedByteBuffer mapedByteBuffer</span><br><span class="line">    IndexHeader indexHeader</span><br><span class="line">    IndexFile(String fileName, int hashSlotNum, int indexNum,long endPhyOffset,endTimestamp){</span><br><span class="line">        -&gt; fileTotalSize = IndexHeader.index_headr_size + (hashSlotNum*hash_slot_size)+(indexNum*index_size)</span><br><span class="line">    }</span><br><span class="line">}</span></span><br></pre></td></tr></table></figure>
<h4 id="&#x6D88;&#x606F;&#x53D1;&#x9001;"><a href="#&#x6D88;&#x606F;&#x53D1;&#x9001;" class="headerlink" title="&#x6D88;&#x606F;&#x53D1;&#x9001;"></a>&#x6D88;&#x606F;&#x53D1;&#x9001;</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line">DefaultMQProducer{</span><br><span class="line">    String producerGroup</span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">int</span> defaultTopicQueueNums=<span class="number">4</span></span><br><span class="line">    <span class="keyword">int</span> sendMsgTimeout=<span class="number">3000</span></span><br><span class="line">    <span class="keyword">int</span> maxMessageSize=<span class="number">4</span><span class="function">M</span><br><span class="line">    <span class="title">start</span><span class="params">()</span></span>{</span><br><span class="line">        -&gt; defaultMqProduerImpl.start()</span><br><span class="line">    }</span><br><span class="line">    send(Message msg, <span class="keyword">long</span> timeout){</span><br><span class="line">        -&gt; defaultMqProduerImpl.send</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">DefaultMQProducerImpl{</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//topic,TopicPublishInfo&gt; topicPublishInfoTable</span></span><br><span class="line">    ArrayList&lt;SendMessageHook&gt; sendMessageHookList</span><br><span class="line">    BlockingQueue&lt;Runnable&gt; checkRequestQueue</span><br><span class="line">    MQClientInstance<span class="comment">// per client id clientId: ip@instanceName(if null pid)@unitName</span></span><br><span class="line">    <span class="function">MQFaultStrategy</span><br><span class="line">    <span class="title">start</span><span class="params">(<span class="keyword">boolean</span> startFactory)</span></span>{</span><br><span class="line">        <span class="comment">// &#x521B;&#x5EFA;producer&#x540E;&#x8C03;&#x7528;start&#xFF0C;&#x9996;&#x6B21;&#x540C;&#x6B65;&#x53D1;&#x9001;&#x5FC3;&#x8DF3;&#x4FE1;&#x606F;&#x81F3;&#x6240;&#x6709;broker</span></span><br><span class="line">        -&gt; serviceState: create_just-&gt;start_failed-&gt;running</span><br><span class="line">        -&gt; mQClientFactory = MQClientManager.getInstance().getAndCreateMqClientInstance(defaultMQProducer,rpcHook){</span><br><span class="line">            -&gt; <span class="comment">// concurrentHashMap&lt;Dtring//clientid,MQclientInstance&gt; factoryTable</span></span><br><span class="line">                <span class="comment">// clientId: ip@instanceName(if null pid)@unitName</span></span><br><span class="line">        }</span><br><span class="line">        -&gt; mQClientFactory.registerProduer(defaultMQProduer.getProduerGroup()<span class="comment">// producer group, this){</span></span><br><span class="line">            -&gt; MQProducerInner pre = producerTable.putIfAbsent(group, producer)</span><br><span class="line">            -&gt; <span class="keyword">return</span> pre != <span class="keyword">null</span></span><br><span class="line">        }</span><br><span class="line">        -&gt; startFactory mqClientFactory.start()</span><br><span class="line">        -&gt; mqClientFactory.sendHearbeatToAllBrokerWithLock(){</span><br><span class="line">            -&gt; HeartbeatData.clientid, consumerdata, producerdata</span><br><span class="line">                <span class="comment">// consumerTable, producerTable</span></span><br><span class="line">                <span class="comment">// consumer.groupname</span></span><br><span class="line">                <span class="comment">// consumertype: pull,push</span></span><br><span class="line">                <span class="comment">// messageModel:broadcasting,clustering</span></span><br><span class="line">                <span class="comment">// consumerFroWhere:consume_from_last_offset, from_first_offset, from_timestamp</span></span><br><span class="line">                <span class="comment">// subscriptions,unitMode</span></span><br><span class="line">                <span class="comment">// producerData.groupname</span></span><br><span class="line">            -&gt; sendHearbeat <span class="keyword">for</span> brokers</span><br><span class="line">                <span class="comment">// clientManagerProcessor hearBeat</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    send(Message msg, <span class="keyword">long</span> timeout){</span><br><span class="line">        -&gt; sendDefaultImpl(msg, CommunicationMode.sync, SendCallback ,timeout){</span><br><span class="line">            -&gt; invokerId = random.nextLong();<span class="keyword">long</span> beginTimestampFirst,beginTimestampPrev,endTimestamp</span><br><span class="line">            -&gt; TopicPublishInfo topciPublishInfo = tryToFindTopicPublishInfo(msg.getTopci, <span class="keyword">boolean</span> isDefault){</span><br><span class="line">                -&gt; topicPublishInfo = topicPublishInfoTable.get(topic)</span><br><span class="line">                -&gt; topicPublishInfo == <span class="keyword">null</span></span><br><span class="line">                    -&gt; <span class="keyword">this</span>.topicPublishInfoTable.putInfAbsent(topic, <span class="keyword">new</span> TopicPublishInfo)</span><br><span class="line">                        <span class="comment">// &#x6240;&#x4EE5;&#x4E0D;&#x7BA1;namesrv&#x662F;&#x5426;&#x5B58;&#x5728;topic&#x4FE1;&#x606F;&#xFF0C;&#x540E;&#x7EED;&#x90FD;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230;&#xFF0C;&#x53EA;&#x662F;&#x53EF;&#x80FD;&#x662F;&#x6CA1;&#x6709;topic route data</span></span><br><span class="line">                    -&gt; mqClientFactory.updateTopicRoutInfoFromNameServer(topic)</span><br><span class="line">                    -&gt; topicPublishInfo = topicPublishInfoTable.get(topic)</span><br><span class="line">            }</span><br><span class="line">            -&gt; MessageQueue mq</span><br><span class="line">            -&gt; <span class="keyword">int</span> timesTotal = communicationMode == CommunicationMode.SYNC ? <span class="number">1</span> + <span class="keyword">this</span>.defaultMQProducer.getRetryTimesWhenSendFailed() : <span class="number">1</span></span><br><span class="line">            -&gt; String[] brokersSent</span><br><span class="line">            -&gt; <span class="keyword">for</span> timesTotal{</span><br><span class="line">                -&gt; String lastBrokerName</span><br><span class="line">                -&gt; selectOneMessageQueue(topicPublishInfo, lastBrokerName)</span><br><span class="line">                    mqFaultStrategy.selectOneMessageQueue(tpInfo, lastBrokername)</span><br><span class="line">                -&gt; sendKernelImpl(msg,mq,communicationMode,sendCallback,topicPublishInfo,timeout)</span><br><span class="line">                -&gt; <span class="keyword">if</span> exception need <span class="keyword">continue</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// call from MQClientInstance updateTopicRoutInfoFromNameServer</span></span><br><span class="line">    updateTopicPublishInfo(topic, TopicPublishInfo){</span><br><span class="line">        topicPublishInfoTable</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">TopciPublishInfo{</span><br><span class="line">    <span class="keyword">boolean</span> orderTopic</span><br><span class="line">    <span class="keyword">boolean</span> haveTopicRouterInfo</span><br><span class="line">    List&lt;MessageQueue&gt; messageQueueList</span><br><span class="line">    TopicRouteData</span><br><span class="line">}</span><br><span class="line">MessageQueue{</span><br><span class="line">    String topic</span><br><span class="line">    String brokerName</span><br><span class="line">    <span class="keyword">int</span> queueId</span><br><span class="line">}</span><br><span class="line">TopicRouteData{</span><br><span class="line">    String orderTopicConf</span><br><span class="line">    List&lt;QueueData&gt; queueDatas</span><br><span class="line">    List&lt;BrokerData&gt; brokerDatae</span><br><span class="line">    HashMap&lt;String<span class="comment">//brokerAddr,List&lt;String//filter server&gt;&gt; filterServerTable</span></span><br><span class="line">}</span><br><span class="line">MQClientInstance{</span><br><span class="line">    <span class="keyword">int</span> instanceIndex</span><br><span class="line">    String clientId</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//group,MQProducerInner&gt; producerTable</span></span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//group, MQConumserInner&gt; consumerTable</span></span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//group,MQAdminExtInner&gt; adminExtTable</span></span><br><span class="line">    MQClientAPIImpl</span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//topic,TopicRouterData&gt; topicRouteTable</span></span><br><span class="line">    ConcurrentHashMap&lt;String<span class="comment">//broker name,HashMap&lt;Long//brokerId,String//address&gt;&gt; brokerAddrTable</span></span><br><span class="line"></span><br><span class="line">    <span class="function">PullMessageService</span><br><span class="line">    RebalanceService</span><br><span class="line">    DefaultMQProducer</span><br><span class="line">    <span class="title">MQClientInstance</span><span class="params">()</span></span>{</span><br><span class="line">        defaultMQProducer = <span class="keyword">new</span> DefaultMQProducer(client_inner_producer_group)</span><br><span class="line">    }</span><br><span class="line">    start(){</span><br><span class="line">        <span class="keyword">synchronized</span></span><br><span class="line">        -&gt; mqClientAPIImpl.start <span class="comment">// start request-response channel</span></span><br><span class="line">        -&gt; startScheduledTask</span><br><span class="line">        -&gt; pullMessageService.start()<span class="comment">//start pull service</span></span><br><span class="line">        -&gt; reblanceService.start</span><br><span class="line">        -&gt; defaultMQProducer.getDefaultMQProducerImpl.start</span><br><span class="line">    }</span><br><span class="line">    mqClientFactory.sendHearbeatToAllBrokerWithLock(){</span><br><span class="line">        -&gt; HeartbeatData.clientid, consumerdata, producerdata</span><br><span class="line">            <span class="comment">// consumerTable, producerTable</span></span><br><span class="line">            <span class="comment">// consumer.groupname</span></span><br><span class="line">            <span class="comment">// consumertype: pull,push</span></span><br><span class="line">            <span class="comment">// messageModel:broadcasting,clustering</span></span><br><span class="line">            <span class="comment">// consumerFroWhere:consume_from_last_offset, from_first_offset, from_timestamp</span></span><br><span class="line">            <span class="comment">// subscriptions,unitMode</span></span><br><span class="line">            <span class="comment">// producerData.groupname</span></span><br><span class="line">        -&gt; sendHearbeat <span class="keyword">for</span> brokers</span><br><span class="line">        -&gt; HEART_BEAT command</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    mqClientFactory.updateTopicRoutInfoFromNameServer(topic){</span><br><span class="line">        -&gt; lockNamesrv.tryLock</span><br><span class="line">        -&gt; TopicRouteData topicRouteData = mqClientAPIImpl.getTopicRouteInfoFromNameServer(topic, <span class="number">1000</span>*<span class="number">3</span>)</span><br><span class="line">            <span class="comment">// GET_ROUTEINTO_BY_TOPIC</span></span><br><span class="line">            <span class="comment">// response_code.topic_not_exist</span></span><br><span class="line">        -&gt; topicRouteData channed</span><br><span class="line">        -&gt; update brokerAddrTable,</span><br><span class="line">        -&gt; update pub info producerTable,</span><br><span class="line">            -&gt; topicRoutData2TopicPublishInfo(topic, topicRouteData){</span><br><span class="line">                -&gt; rote.queueDatas()</span><br><span class="line">                -&gt; rote.brokerDatas()</span><br><span class="line">                -&gt; brokerData.getBrokerAddrs().containsKey(master_id)</span><br><span class="line">                -&gt; messageQueueList</span><br><span class="line">            }</span><br><span class="line">            -&gt; forEach producerTable imp</span><br><span class="line">            -&gt; impl.updateTopicPublishInfo(topic, publishInfo)</span><br><span class="line">        -&gt; update sub info consumerTable</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">ClientManageProcessor{</span><br><span class="line">    heartBeat(ChannelHandlerContext ctx, RemotingCommand request){</span><br><span class="line">        -&gt; ConsumerData data : heartbeatData.getConsumerDataSet(){</span><br><span class="line">            -&gt; SubscriptionGroupConfig subscriptionGroupConfig = brokerController.getSubscriptionGroupManager.findSubscriptionGroupConfig(data.groupName){</span><br><span class="line">                -&gt; subscriptionGroupConfig == <span class="keyword">null</span>{</span><br><span class="line">                    -&gt; brokerConfig.isAutoCreateSubscriptionGroup then create</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            -&gt; String newTopic = %RETRY%+data.groupName</span><br><span class="line">            -&gt; createTopicInSendMessageBackMethod(newTopic,retryQueueNums)</span><br><span class="line">            -&gt; consumerManager.registerConsumer(data.groupName,clientChannelInfo,consumerType,mesageModel,<span class="function">consumerFromWhere</span><br><span class="line">                <span class="title">subscriptionDataSet</span><span class="params">()</span>)</span>{</span><br><span class="line">                ConcurrentHashMap&lt;String<span class="comment">/* Group */</span>, ConsumerGroupInfo&gt; consumerTable</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        -&gt; ProducerData data:hearbeatData.producerdataset{</span><br><span class="line">            ProducerManager.registerProducer(groupName, clientChannelInfo){</span><br><span class="line">                -&gt; groupChannelLock.tryLock</span><br><span class="line">                -&gt;&#x3000;HashMap&lt;String <span class="comment">/* group name */</span>, HashMap&lt;Channel, ClientChannelInfo&gt;&gt; groupChannelTable</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">SendMessageProcessor{</span><br><span class="line">    -&gt; request.code</span><br><span class="line">        consumer_send_msg_back</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>{</span><br><span class="line">            -&gt; sendMessage(ctx, request, SendMessageContext, SendMessageRequestHeader)</span><br><span class="line">        }</span><br><span class="line">    sendMessage(){</span><br><span class="line">        -&gt; queueIdInt...</span><br><span class="line">        -&gt; PutMessageResult putMessageResult = messageStore.putMessage(msgInner)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Namesrv</span><br><span class="line">DefaultRequestProcessor{</span><br><span class="line">    <span class="comment">//GET_ROUTEINTO_BY_TOPIC</span></span><br><span class="line">    getRouteInfoByTopic(){</span><br><span class="line">        -&gt; routeInfoManager().pickupTopicRouteData(topic){</span><br><span class="line">            -&gt; TopciRouteData create</span><br><span class="line">            -&gt; lock</span><br><span class="line">            -&gt; List&lt;QueueData&gt; queueDataList = topicQueueTable.get(topic)</span><br><span class="line">            -&gt; <span class="keyword">if</span> not found <span class="keyword">return</span> <span class="keyword">null</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">MQClientAPIImpl{</span><br><span class="line">    <span class="comment">//SEND_MESSAGE_V2</span></span><br><span class="line">    sendMessage(){}</span><br><span class="line">    sendMessageSync{</span><br><span class="line">        -&gt; remotingClient.invokeSync</span><br><span class="line">        -&gt; processSendResponse(){</span><br><span class="line">            -&gt; SendResult</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h2 id="Producer-Message&#x6D41;&#x7A0B;"><a href="#Producer-Message&#x6D41;&#x7A0B;" class="headerlink" title="Producer Message&#x6D41;&#x7A0B;"></a>Producer Message&#x6D41;&#x7A0B;</h2><h4 id="&#x6D41;&#x7A0B;&#x56FE;"><a href="#&#x6D41;&#x7A0B;&#x56FE;" class="headerlink" title="&#x6D41;&#x7A0B;&#x56FE;"></a>&#x6D41;&#x7A0B;&#x56FE;</h4><p><img src="/2017/01/06/RocketMQ-Producer-Message/Producer.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RocketMQ-简介]]></title>
      <url>https://qiufanghua.github.io/2017/01/06/RocketMQ-%E7%AE%80%E4%BB%8B/</url>
      <content type="html"><![CDATA[<h2 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h2><h3 id="&#x524D;&#x4E16;&#x4ECA;&#x751F;"><a href="#&#x524D;&#x4E16;&#x4ECA;&#x751F;" class="headerlink" title="&#x524D;&#x4E16;&#x4ECA;&#x751F;"></a>&#x524D;&#x4E16;&#x4ECA;&#x751F;</h3><p><strong>RocketMQ</strong> &#x963F;&#x91CC;&#x5F00;&#x6E90;&#x7684;&#x53C8;&#x4E00;&#x5927;&#x4F5C;&#xFF0C;&#x5B9A;&#x4E49;&#x4E3A;&#x5206;&#x5E03;&#x5F0F;&#x6D88;&#x606F;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x9AD8;&#x53EF;&#x7528;&#xFF08;&#x65E0;&#x5355;&#x70B9;&#xFF1A;Namesrv&#x90E8;&#x7F72;&#x591A;&#x4E2A;&#xFF0C;&#x8282;&#x70B9;&#x4E3A;&#x5BF9;&#x7B49;&#x8282;&#x70B9;&#x4E92;&#x76F8;&#x5907;&#x4EFD;&#xFF0C;Broker&#x4E3B;&#x5907;&#x90E8;&#x7F72;&#xFF09;&#xFF0C;&#x9AD8;&#x541E;&#x5410;&#x91CF;&#xFF0C;&#x9AD8;&#x6297;&#x6D88;&#x606F;&#x79EF;&#x538B;&#xFF08;&#x4EBF;&#x7EA7;&#x6D88;&#x606F;&#x5806;&#x79EF;&#x80FD;&#x529B;&#xFF09;&#xFF0C;&#x4F4E;&#x5EF6;&#x65F6;&#xFF0C;&#x53EF;&#x4F38;&#x7F29;&#x6027;&#xFF0C;&#x524D;&#x4E16;&#x662F;MetaQ2.x&#xFF0C;&#x5176;&#x6838;&#x5FC3;&#x601D;&#xFF08;topic&#xFF0C;&#x961F;&#x5217;&#xFF0C;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#xFF0C;&#x6D88;&#x606F;&#x6D88;&#x8D39;&#x65B9;&#x5F0F;&#x2026;&#xFF09;&#x501F;&#x52A9;&#x4E0E;Kafka&#xFF08;LinkedIn&#x516C;&#x53F8;scala&#x8BED;&#x8A00;&#x5F00;&#x53D1;&#x7684;&#x4E00;&#x79CD;&#x9AD8;&#x541E;&#x5410;&#x91CF;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x53D1;&#x5E03;&#x8BA2;&#x9605;&#x6D88;&#x606F;&#x7CFB;&#x7EDF;&#xFF0C;&#x73B0;&#x662F;Apache&#x9876;&#x7EA7;&#x9879;&#x76EE;&#xFF09;&#xFF0C;&#x5DF2;&#x5F00;&#x6E90;&#x7684;&#x7A33;&#x5B9A;&#x7248;&#x672C;&#x4E3A;3.5.8&#xFF0C;&#x73B0;&#x5DF2;&#x662F;Apache&#x7684;&#x4E00;&#x4E2A;&#x5B75;&#x5316;&#x9879;&#x76EE;&#xFF0C;&#x7248;&#x672C;&#x662F;4.0.0&#x3002;&#x6211;&#x540E;&#x7EED;&#x7684;&#x5B66;&#x4E60;&#x90FD;&#x662F;3.5.8&#x7248;&#x672C;&#x3002;</p>
<h3 id="RocketMQ&#x7279;&#x6027;"><a href="#RocketMQ&#x7279;&#x6027;" class="headerlink" title="RocketMQ&#x7279;&#x6027;"></a>RocketMQ&#x7279;&#x6027;</h3><p>&#x76F4;&#x767D;&#x8BF4;&#x6211;&#x4EEC;&#x80FD;&#x7528;RocketMQ&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x4EC0;&#x4E48;&#x573A;&#x666F;&#x7528;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x7528;&#xFF0C;&#x63D0;&#x4F9B;&#x4F9D;&#x636E;</p>
<ol>
<li>&#x9AD8;&#x6027;&#x80FD;&#x3001;&#x9AD8;&#x53EF;&#x9760;&#x3001;&#x9AD8;&#x5B9E;&#x65F6;&#x3001;&#x5206;&#x5E03;&#x5F0F;&#x7279;&#x70B9;</li>
<li>Producer&#x3001;Consumer&#x3001;&#x961F;&#x5217;&#x90FD;&#x53EF;&#x4EE5;&#x5206;&#x5E03;&#x5F0F;&#x3002;</li>
<li>&#x80FD;&#x591F;&#x4FDD;&#x8BC1;&#x4E25;&#x683C;&#x7684;&#x6D88;&#x606F;&#x987A;&#x5E8F;</li>
<li>&#x5B9E;&#x65F6;&#x7684;&#x6D88;&#x606F;&#x8BA2;&#x9605;&#x673A;&#x5236;</li>
<li>&#x4EBF;&#x7EA7;&#x6D88;&#x606F;&#x5806;&#x79EF;&#x80FD;&#x529B;</li>
</ol>
<h3 id="RocketMQ&#x6574;&#x4F53;&#x4ECB;&#x7ECD;"><a href="#RocketMQ&#x6574;&#x4F53;&#x4ECB;&#x7ECD;" class="headerlink" title="RocketMQ&#x6574;&#x4F53;&#x4ECB;&#x7ECD;"></a>RocketMQ&#x6574;&#x4F53;&#x4ECB;&#x7ECD;</h3><h5 id="&#x961F;&#x5217;&#x6D88;&#x606F;&#x6A21;&#x578B;"><a href="#&#x961F;&#x5217;&#x6D88;&#x606F;&#x6A21;&#x578B;" class="headerlink" title="&#x961F;&#x5217;&#x6D88;&#x606F;&#x6A21;&#x578B;"></a>&#x961F;&#x5217;&#x6D88;&#x606F;&#x6A21;&#x578B;</h5><p><img src="/2017/01/06/RocketMQ-&#x7B80;&#x4ECB;/rocketmq_design.png" alt="&#x961F;&#x5217;&#x6A21;&#x578B;&#x6D88;&#x606F;&#x7CFB;&#x7EDF;" title="&#x961F;&#x5217;&#x6A21;&#x578B;&#x6D88;&#x606F;&#x7CFB;&#x7EDF;"></p>
<h5 id="&#x7EC4;&#x4EF6;&#x4EA4;&#x4E92;&#x6D41;&#x7A0B;"><a href="#&#x7EC4;&#x4EF6;&#x4EA4;&#x4E92;&#x6D41;&#x7A0B;" class="headerlink" title="&#x7EC4;&#x4EF6;&#x4EA4;&#x4E92;&#x6D41;&#x7A0B;"></a>&#x7EC4;&#x4EF6;&#x4EA4;&#x4E92;&#x6D41;&#x7A0B;</h5><p><img src="/2017/01/06/RocketMQ-&#x7B80;&#x4ECB;/rokcetmq_core_component.png" alt=""></p>
<ol>
<li>Producer&#x3001;Conusmer&#xFF0C;Queue&#x90FD;&#x53EF;&#x4EE5;&#x5206;&#x5E03;&#x5F0F;</li>
<li>Producer&#x4E0E;Topic&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#xFF0C;Topic&#x5BF9;&#x5E94;n&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x961F;&#x5217;&#x53C8;&#x4E0E;Broker&#x5BF9;&#x5E94;&#xFF1B;Producer&#x5411;Topic&#x4E2D;&#x7684;&#x961F;&#x5217;&#x8F6E;&#x6D41;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;Consumer&#x5982;&#x679C;&#x662F;&#x5E7F;&#x64AD;&#x6D88;&#x8D39;&#x7C7B;&#x578B;&#xFF0C;&#x5219;Consumer&#x5B9E;&#x4F8B;&#xFF08;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x90E8;&#x7F72;&#x591A;&#x4E2A;&#xFF09;&#x6D88;&#x8D39;&#x8FD9;&#x4E2A;Topic&#x5BF9;&#x5E94;&#x7684;&#x6240;&#x6709;&#x961F;&#x5217;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x96C6;&#x7FA4;&#x6D88;&#x8D39;&#xFF0C;&#x5219;&#x591A;&#x4E2A;Consumer&#x5B9E;&#x4F8B;&#x5E73;&#x5747;&#x6D88;&#x8D39;&#x8FD9;&#x4E2A;Topic&#x5BF9;&#x5E94;&#x7684;&#x961F;&#x5217;&#xFF1B;Producer&#x4E0E;Name Server&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF08;&#x968F;&#x673A;&#x9009;&#x62E9;&#xFF09;&#x5EFA;&#x7ACB;&#x957F;&#x8FDE;&#x63A5;&#xFF0C;&#x8FDE;&#x63A5;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#x65F6;&#xFF0C;&#x4F1A;&#x91CD;&#x65B0;&#x9009;&#x62E9;&#x53E6;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5B9A;&#x671F;&#x4ECE;Name Server&#x53D6;Topic&#x8DEF;&#x7531;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5411;&#x63D0;&#x4F9B;Topic &#x670D;&#x52A1;&#x7684;Master&#x5EFA;&#x7ACB;&#x957F;&#x8FDE;&#x63A5;&#xFF0C;&#x4E14;&#x5B9A;&#x65F6;&#x5411;Master&#x53D1;&#x9001;&#x5FC3;&#x8DF3;&#x3002;Producer &#x5B8C;&#x5168;&#x65E0;&#x72B6;&#x6001;&#xFF0C;&#x53EF;&#x96C6;&#x7FA4;&#x90E8;&#x7F72;&#x3002;</li>
<li>Name Server &#x662F;&#x4E00;&#x4E2A;&#x51E0;&#x4E4E;&#x65E0;&#x72B6;&#x6001;&#x8282;&#x70B9;&#xFF08;&#x4E0D;&#x4FDD;&#x5B58;Topic&#x8DEF;&#x7531;&#x4FE1;&#x606F;&#xFF09;&#xFF0C;&#x53EF;&#x96C6;&#x7FA4;&#x90E8;&#x7F72;&#xFF0C;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x65E0;&#x4EFB;&#x4F55;&#x4FE1;&#x606F;&#x540C;&#x6B65;</li>
<li>Broker&#x5206;&#x4E3A;Master&#x4E0E;Slave&#xFF0C;&#x4E00;&#x4E2A;Master&#x53EF;&#x4EE5;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;Slave&#xFF0C;&#x4E00;&#x4E2A;Slave&#x53EA;&#x80FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;Master&#xFF0C;Master&#x4E0E;Slave&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x76F8;&#x540C;&#x7684;BrokerName&#xFF0C;&#x4E0D;&#x540C;&#x7684;BrokerId&#x6765;&#x5B9A;&#x4E49;&#xFF0C;BrokerId=0&#x8868;&#x793A;Master&#xFF0C;&#x975E;0&#x8868;&#x793A;Slave&#x3002;Master&#x4E5F;&#x53EF;&#x4EE5;&#x90E8;&#x7F72;&#x591A;&#x4E2A;&#x3002;&#x6BCF;&#x4E2A;Broker&#x4E0E;Name Server&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x8282;&#x70B9;&#x5EFA;&#x7ACB;&#x957F;&#x8FDE;&#x63A5;&#xFF0C;&#x5B9A;&#x65F6;&#x6CE8;&#x518C;Topic&#x4FE1;&#x606F;&#x5230;&#x6240;&#x6709;Name Server&#x3002;</li>
<li>Consumer&#x901A;&#x8FC7;pull&#x65B9;&#x5F0F;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#xFF0C;&#x867D;&#x7136;&#x4E5F;&#x63D0;&#x4F9B;&#x6D88;&#x606F;&#x76D1;&#x542C;&#xFF0C;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x4E5F;&#x662F;&#x901A;&#x8FC7;&#x8F6E;&#x8BE2;pull&#x6D88;&#x606F;&#x6765;&#x5B9E;&#x73B0;&#xFF1B;Consumer&#x4E0E;Name Server&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF08;&#x968F;&#x673A;&#x9009;&#x62E9;&#xFF09;&#x5EFA;&#x7ACB;&#x957F;&#x8FDE;&#x63A5;&#xFF0C;&#x8FDE;&#x63A5;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#x65F6;&#xFF0C;&#x4F1A;&#x91CD;&#x65B0;&#x9009;&#x62E9;&#x53E6;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5B9A;&#x671F;&#x4ECE;Name Server&#x53D6;Topic &#x8DEF;&#x7531;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5411;&#x63D0;&#x4F9B;Topic&#x670D;&#x52A1;&#x7684;Broker&#xFF08;Master&#x3001;Slave&#xFF09;&#x5EFA;&#x7ACB;&#x957F;&#x8FDE;&#x63A5;&#xFF0C;&#x4E14;&#x5B9A;&#x65F6;&#x5411;Master&#x3001;Slave&#x53D1;&#x9001;&#x5FC3;&#x8DF3;&#x3002;Consumer&#x65E2;&#x53EF;&#x4EE5;&#x4ECE;Master&#x8BA2;&#x9605;&#x6D88;&#x606F;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE;Slave&#x8BA2;&#x9605;&#x6D88;&#x606F;&#xFF0C;&#x8BA2;&#x9605;&#x89C4;&#x5219;&#x7531;Broker&#x914D;&#x7F6E;&#x51B3;&#x5B9A;&#x3002;</li>
</ol>
<h3 id="RocketMQ&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4ECB;&#x7ECD;"><a href="#RocketMQ&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4ECB;&#x7ECD;" class="headerlink" title="RocketMQ&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4ECB;&#x7ECD;"></a>RocketMQ&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4ECB;&#x7ECD;</h3><h4 id="Topic"><a href="#Topic" class="headerlink" title="Topic"></a>Topic</h4><p>&#x961F;&#x5217;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x8868;&#x793A;&#x6D88;&#x606F;&#x7684;&#x7B2C;&#x4E00;&#x7EA7;&#x7C7B;&#x578B;&#xFF0C;Producer,Consumer&#x90FD;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x8BE5;&#x7C7B;&#x578B;&#x3002;</p>
<h4 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h4><p>Tag&#x8868;&#x793A;&#x6D88;&#x606F;&#x7684;&#x7B2C;&#x4E8C;&#x7EA7;&#x7C7B;&#x578B;&#xFF0C;Producer&#x751F;&#x4EA7;&#x6D88;&#x606F;&#x65F6;&#x53EF;&#x4EE5;&#x4E3A;&#x6D88;&#x606F;&#x6253;&#x4E0A;&#x5BF9;&#x5E94;&#x7684;Tag&#xFF0C;Consumer&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x7684;&#x6D88;&#x8D39;&#x611F;&#x5174;&#x8DA3;&#x7684;Tag&#x6D88;&#x606F;&#x3002;</p>
<h4 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h4><p>&#x4E00;&#x4E2A;Topic&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x591A;&#x4E2A;queue(&#x6D88;&#x606F;&#x961F;&#x5217;)&#xFF0C;&#x6BCF;&#x4E2A;&#x961F;&#x5217;&#x53EF;&#x4EE5;&#x5BF9;&#x5E94;&#x5230;&#x4E0D;&#x540C;&#x7684;Broker&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x8981;&#x6307;&#x5B9A;&#x8BE5;&#x6D88;&#x606F;&#x7684;Topic&#xFF0C;RocketMQ&#x4F1A;&#x8F6E;&#x8BE2;&#x8BE5;Topic&#x4E0B;&#x7684;&#x6240;&#x6709;&#x961F;&#x5217;&#xFF0C;&#x5C06;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#x5230;Queue&#x5BF9;&#x5E94;&#x5230;Broker&#xFF0C;&#x8FD9;&#x6837;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#x8D1F;&#x8F7D;&#x5230;&#x4E0D;&#x540C;Broker&#x3002;</p>
<h4 id="Producer-&#x4E0E;-Producer-Group"><a href="#Producer-&#x4E0E;-Producer-Group" class="headerlink" title="Producer &#x4E0E; Producer Group"></a>Producer &#x4E0E; Producer Group</h4><p>Producer&#x8868;&#x793A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x751F;&#x4EA7;&#x8005;&#xFF0C;&#x751F;&#x4EA7;&#x6D88;&#x606F;&#x3002;</p>
<p>Producer Group&#x662F;&#x4E00;&#x7C7B;Producer&#x7684;&#x96C6;&#x5408;&#x540D;&#x79F0;&#xFF0C;&#x8FD9;&#x7C7B;Producer&#x901A;&#x5E38;&#x53D1;&#x9001;&#x4E00;&#x7C7B;&#x6D88;&#x606F;&#xFF0C;&#x4E14;&#x53D1;&#x9001;&#x903B;&#x8F91;&#x4E00;&#x81F4;&#x3002;</p>
<h4 id="Consumer-&#x4E0E;-Consumer-Group"><a href="#Consumer-&#x4E0E;-Consumer-Group" class="headerlink" title="Consumer &#x4E0E; Consumer Group"></a>Consumer &#x4E0E; Consumer Group</h4><p>&#x6D88;&#x606F;&#x6D88;&#x8D39;&#x8005;&#xFF0C;&#x6D88;&#x606F;&#x7CFB;&#x7EDF;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x7C7B;&#x578B;&#x5206;&#x4E24;&#x79CD;&#xFF1A;</p>
<ol>
<li>Consumer pull&#x6D88;&#x606F;,&#x5E94;&#x7528;&#x901A;&#x5E38;&#x4E3B;&#x52A8;&#x8C03;&#x7528; Consumer &#x7684;&#x62C9;&#x6D88;&#x606F;&#x65B9;&#x6CD5;&#x4ECE; Broker &#x62C9;&#x6D88;&#x606F;&#xFF0C;&#x4E3B;&#x52A8;&#x6743;&#x7531;&#x5E94;&#x7528;&#x63A7;&#x5236;&#x3002;</li>
<li>MQ Server push&#x6D88;&#x606F;,&#x5E94;&#x7528;&#x901A;&#x5E38;&#x5411; Consumer &#x5BF9;&#x8C61;&#x6CE8;&#x518C;&#x4E00;&#x4E2A; Listener &#x63A5;&#x53E3;&#xFF0C;&#x4E00;&#x65E6;&#x6536;&#x5230;&#x6D88;&#x606F;&#xFF0C;Consumer &#x5BF9;&#x8C61;&#x7ACB;&#x523B;&#x56DE;&#x8C03; Listener &#x63A5;&#x53E3;&#x65B9;&#x6CD5;</li>
</ol>
<p>RocketMQ &#x91C7;&#x7528;Consumer pull&#x6D88;&#x606F;&#xFF0C;&#x867D;&#x7136;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x6D88;&#x606F;&#x76D1;&#x542C;&#x673A;&#x5236;&#xFF0C;&#x4F46;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x8FD8;&#x662F;&#x901A;&#x8FC7;&#x540E;&#x53F0;&#x5B9A;&#x65F6;Pull&#x6D88;&#x606F;&#x6765;&#x5B9E;&#x73B0;&#x3002;</p>
<p>Consumer Group&#x662F;&#x4E00;&#x7C7B;Consumer&#x7684;&#x96C6;&#x5408;&#x540D;&#x79F0;&#xFF0C;&#x8FD9;&#x7C7B;Consumer&#x901A;&#x5E38;&#x6D88;&#x8D39;&#x4E00;&#x7C7B;&#x6D88;&#x606F;&#xFF0C;&#x4E14;&#x6D88;&#x8D39;&#x903B;&#x8F91;&#x4E00;&#x81F4;&#x3002;</p>
<h4 id="Broker"><a href="#Broker" class="headerlink" title="Broker"></a>Broker</h4><p>&#x6D88;&#x606F;&#x7684;&#x4E2D;&#x8F6C;&#x8005;&#xFF0C;&#x8D1F;&#x8D23;&#x5B58;&#x50A8;&#x548C;&#x8F6C;&#x53D1;&#x6D88;&#x606F;&#x3002;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x6D88;&#x606F;&#x7684;&#x63A5;&#x6536;&#x3001;&#x5B58;&#x50A8;&#x3001;pull&#x670D;&#x52A1;&#x3002;&#x4E3A;&#x4FDD;&#x8BC1;Broker&#x9AD8;&#x53EF;&#x7528;&#xFF0C;Broker&#x5206;&#x4E3A;Master&#x4E0E;Slave&#xFF0C;&#x4E00;&#x4E2A;Master&#x53EF;&#x4EE5;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;Slaves&#xFF0C;Master&#x4E0E;Slave&#x6570;&#x636E;&#x540C;&#x6B65;&#x53EF;&#x4EE5;&#x662F;&#x540C;&#x6B65;&#x4E0E;&#x5F02;&#x6B65;&#x3002;</p>
<h5 id="&#x5E7F;&#x64AD;&#x6D88;&#x8D39;"><a href="#&#x5E7F;&#x64AD;&#x6D88;&#x8D39;" class="headerlink" title="&#x5E7F;&#x64AD;&#x6D88;&#x8D39;"></a>&#x5E7F;&#x64AD;&#x6D88;&#x8D39;</h5><p>&#x4E00;&#x6761;&#x6D88;&#x606F;&#x88AB;&#x591A;&#x4E2A;Consumer&#x6D88;&#x8D39;&#xFF0C;&#x5373;&#x4F7F;&#x8FD9;&#x4E9B;Consumer&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;Consumer Group&#xFF0C;&#x6D88;&#x606F;&#x4E5F;&#x4F1A;&#x88AB;Consumer Group&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;Consumer&#x90FD;&#x6D88;&#x8D39;&#x4E00;&#x6B21;&#x3002;&#x5728;&#x5E7F;&#x64AD;&#x6D88;&#x8D39;&#x4E2D;&#x7684;Consumer Group&#x6982;&#x5FF5;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x5728;&#x6D88;&#x606F;&#x5212;&#x5206;&#x65B9;&#x9762;&#x65E0;&#x610F;&#x4E49;&#xFF08;JMS Topic&#xFF09;&#x3002;</p>
<h5 id="&#x96C6;&#x7FA4;&#x6D88;&#x8D39;"><a href="#&#x96C6;&#x7FA4;&#x6D88;&#x8D39;" class="headerlink" title="&#x96C6;&#x7FA4;&#x6D88;&#x8D39;"></a>&#x96C6;&#x7FA4;&#x6D88;&#x8D39;</h5><p>&#x4E00;&#x4E2A;Consumer Group&#x4E2D;&#x7684;Consumer&#x5B9E;&#x4F8B;&#x5E73;&#x5747;&#x5206;&#x644A;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x3002;&#x4F8B;&#x5982;&#x67D0;&#x4E2A;Topic&#x6709; 9 &#x6761;&#x6D88;&#x606F;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;Consumer Group&#x6709; 3 &#x4E2A;&#x5B9E;&#x4F8B;(&#x53EF;&#x80FD;&#x662F; 3 &#x4E2A;&#x8FDB;&#x7A0B;,&#x6216;&#x8005; 3 &#x53F0;&#x673A;&#x5668;)&#xFF0C;&#x90A3;&#x4E48;&#x6BCF;&#x4E2A;&#x5B9E;&#x4F8B;&#x53EA;&#x6D88;&#x8D39;&#x5176;&#x4E2D;&#x7684; 3 &#x6761;&#x6D88;&#x606F;&#xFF08;P2P&#xFF09;&#x3002;</p>
<h4 id="NameServer"><a href="#NameServer" class="headerlink" title="NameServer"></a>NameServer</h4><p>Namesrv&#xFF0C;&#x540D;&#x79F0;&#x670D;&#x52A1;&#xFF0C;&#x65E0;&#x72B6;&#x6001;&#xFF0C;&#x65E0;&#x5355;&#x70B9;&#xFF0C;&#x53EF;&#x6A2A;&#x5411;&#x6269;&#x5C55;&#xFF0C;&#x53EF;&#x90E8;&#x7F72;&#x591A;&#x4E2A;&#xFF0C;&#x4E00;&#x822C;&#x90E8;&#x7F72;3&#x53F0;&#xFF0C;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x65E0;&#x4EFB;&#x4F55;&#x4FE1;&#x606F;&#x540C;&#x6B65;&#xFF0C;&#x4E3A;&#x5BF9;&#x7B49;&#x8282;&#x70B9;&#x3002;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x529F;&#x80FD;&#x3002;</p>
<ol>
<li>&#x63A5;&#x6536;Broker&#x8BF7;&#x6C42;&#xFF0C;&#x6CE8;&#x518C;Broker&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li>
<li>&#x63A5;&#x6536;Client&#xFF08;Producer&#xFF0C;Consumer&#xFF09;&#x8BF7;&#x6C42;&#xFF0C;&#x6839;&#x636E;Topic&#x83B7;&#x53D6;&#x5230;Brokers&#x7684;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[zk quorum peer start]]></title>
      <url>https://qiufanghua.github.io/2016/05/14/zk-quorum-peer-start/</url>
      <content type="html"><![CDATA[<h1 id="QuorumPeerMain"><a href="#QuorumPeerMain" class="headerlink" title="QuorumPeerMain"></a>QuorumPeerMain</h1><p>Zookeeper&#x96C6;&#x6210;&#x542F;&#x52A8;&#x7C7B;&#xFF0C;</p>
<ol>
<li><p>main&#x65B9;&#x6CD5;&#x542F;&#x52A8;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initializeAndRun</span><span class="params">(String[] args)</span></span><br><span class="line">        <span class="keyword">throws</span> ConfigException, IOException, AdminServerException</span><br><span class="line">    </span>{</span><br><span class="line">        QuorumPeerConfig config = <span class="keyword">new</span> QuorumPeerConfig();</span><br><span class="line">        <span class="keyword">if</span> (args.length == <span class="number">1</span>) {</span><br><span class="line">            config.parse(args[<span class="number">0</span>]);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start and schedule the the purge task</span></span><br><span class="line">        DatadirCleanupManager purgeMgr = <span class="keyword">new</span> DatadirCleanupManager(config</span><br><span class="line">                .getDataDir(), config.getDataLogDir(), config</span><br><span class="line">                .getSnapRetainCount(), config.getPurgeInterval());</span><br><span class="line">        purgeMgr.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (args.length == <span class="number">1</span> &amp;&amp; config.isDistributed()) {</span><br><span class="line">            runFromConfig(config);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            LOG.warn(<span class="string">&quot;Either no config or no quorum defined in config, running &quot;</span></span><br><span class="line">                    + <span class="string">&quot; in standalone mode&quot;</span>);</span><br><span class="line">            <span class="comment">// there is only server in the quorum -- run as standalone</span></span><br><span class="line">            ZooKeeperServerMain.main(args);</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
</li>
<li><p>QuorumPeerConfig&#x89E3;&#x6790;Zookeeper&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br>zooSample.cfg<br> tickTime=2000<br> dataDir=/zookeeper/data/zookeeper1<br> initLimit=5<br> syncLimit=2<br> dynamicConfigFile=/zookeeper/conf/zoo_replicated1.cfg.dynamic<br>&#x4E3B;&#x8981;&#x5C5E;&#x6027;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="keyword">protected</span> InetSocketAddress clientPortAddress;</span><br><span class="line">   <span class="keyword">protected</span> InetSocketAddress secureClientPortAddress;</span><br><span class="line"><span class="comment">// ZK &#x6570;&#x636E;&#x5B58;&#x50A8;&#x76EE;&#x5F55;</span></span><br><span class="line">   <span class="keyword">protected</span> File dataDir;</span><br><span class="line"><span class="comment">// ZK&#x8282;&#x70B9;&#x7F16;&#x8F91;&#x65E5;&#x5FD7;&#x5B58;&#x50A8;&#x76EE;&#x5F55;</span></span><br><span class="line">   <span class="keyword">protected</span> File dataLogDir;</span><br><span class="line">   <span class="keyword">protected</span> String dynamicConfigFileStr = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">protected</span> String configFileStr = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> tickTime = ZooKeeperServer.DEFAULT_TICK_TIME;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> maxClientCnxns = <span class="number">60</span>;</span><br><span class="line">   <span class="comment">/** defaults to -1 if not set explicitly */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> minSessionTimeout = -<span class="number">1</span>;</span><br><span class="line">   <span class="comment">/** defaults to -1 if not set explicitly */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> maxSessionTimeout = -<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">boolean</span> localSessionsEnabled = <span class="keyword">false</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">boolean</span> localSessionsUpgradingEnabled = <span class="keyword">false</span>;</span><br><span class="line"><span class="comment">//&#x94FE;&#x63A5;&#xFF1F;</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> initLimit;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> syncLimit;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> electionAlg = <span class="number">3</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> electionPort = <span class="number">2182</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">boolean</span> quorumListenOnAllIPs = <span class="keyword">false</span>;</span><br><span class="line"><span class="comment">// &#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;ServerId&#xFF0C;myIdFile&#xFF1D;new File(dataDir, &quot;myid&quot;);</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">long</span> serverId = UNSET_SERVERID;</span><br><span class="line"><span class="comment">// Quorum&#x9A8C;&#x8BC1;&#xFF1B;&#x6682;&#x5B58;&#x914D;&#x7F6E;&#x7684;QuorumServer</span></span><br><span class="line">   <span class="keyword">protected</span> QuorumVerifier quorumVerifier = <span class="keyword">null</span>, lastSeenQuorumVerifier = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> snapRetainCount = <span class="number">3</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> purgeInterval = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">boolean</span> syncEnabled = <span class="keyword">true</span>;</span><br><span class="line">	<span class="comment">//&#x8282;&#x70B9;&#x7C7B;&#x578B;</span></span><br><span class="line">   <span class="keyword">protected</span> LearnerType peerType = LearnerType.PARTICIPANT;</span><br></pre></td></tr></table></figure>
</li>
<li><p>&#x89E3;&#x6790;dynamicConfigFileStr&#xFF0C;&#x521B;&#x5EFA;QuorumVerifier<br>dynamicConfigFile<br> server.<positive id=""> = <address1>:<port1>:<port2>[:role];[<client port="" address="">:]<client port=""><br> server.1=125.23.63.23: 2780: 2783: participant;2791<br> server.2=125.23.63.24: 2781: 2784: participant;2792<br> server.3=125.23.63.25: 2782: 2785: participant;2793<br> group.1=1: 2: 3<br> group.2=4: 5: 6<br> group.3=7: 8: 9<br> weight.1=1<br> weight.2=1<br> weight.3=1<br> weight.4=1<br> weight.5=1<br> weight.6=1<br> weight.7=1<br> weight.8=1<br> weight.9=1</client></client></port2></port1></address1></positive></p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> HashMap&lt;Long, Long&gt; serverWeight = <span class="keyword">new</span> HashMap&lt;Long, Long&gt;();</span><br><span class="line">   <span class="keyword">private</span> HashMap&lt;Long, Long&gt; serverGroup = <span class="keyword">new</span> HashMap&lt;Long, Long&gt;();</span><br><span class="line">   <span class="keyword">private</span> HashMap&lt;Long, Long&gt; groupWeight = <span class="keyword">new</span> HashMap&lt;Long, Long&gt;();</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> numGroups = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">   <span class="keyword">private</span> Map&lt;Long, QuorumServer&gt; allMembers = <span class="keyword">new</span> HashMap&lt;Long, QuorumServer&gt;();</span><br><span class="line">   <span class="keyword">private</span> Map&lt;Long, QuorumServer&gt; participatingMembers = <span class="keyword">new</span> HashMap&lt;Long, QuorumServer&gt;();</span><br><span class="line">   <span class="keyword">private</span> Map&lt;Long, QuorumServer&gt; observingMembers = <span class="keyword">new</span> HashMap&lt;Long, QuorumServer&gt;();</span><br></pre></td></tr></table></figure>
</li>
<li></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[zk－quorum-manager]]></title>
      <url>https://qiufanghua.github.io/2016/05/14/zk-quorum-manager/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Datanode Manager]]></title>
      <url>https://qiufanghua.github.io/2016/05/08/Datanode-Manager/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Block Manager]]></title>
      <url>https://qiufanghua.github.io/2016/05/08/Block-Manager/</url>
      <content type="html"><![CDATA[<h1 id="Block-Manager"><a href="#Block-Manager" class="headerlink" title="Block Manager"></a>Block Manager</h1><p>&#x4FDD;&#x5B58;&#x96C6;&#x6210;&#x4E2D;&#x6570;&#x636E;&#x5757;&#x4FE1;&#x606F;</p>
<h2 id="&#x4E3B;&#x8981;&#x4F9D;&#x8D56;"><a href="#&#x4E3B;&#x8981;&#x4F9D;&#x8D56;" class="headerlink" title="&#x4E3B;&#x8981;&#x4F9D;&#x8D56;"></a>&#x4E3B;&#x8981;&#x4F9D;&#x8D56;</h2><p><img src="/2016/05/08/Block-Manager/block_manager_class.png" alt="Block Manager" title="Block Manager"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hadoop name node start]]></title>
      <url>https://qiufanghua.github.io/2016/05/07/hadoop-name-node-start/</url>
      <content type="html"><![CDATA[<h1 id="Hadoop-Namenode-Server-Start"><a href="#Hadoop-Namenode-Server-Start" class="headerlink" title="Hadoop Namenode Server Start"></a>Hadoop Namenode Server Start</h1><p>Namenode &#x547D;&#x540D;&#x8282;&#x70B9;&#x4E3B;&#x8981;&#x7BA1;&#x7406;&#x76EE;&#x5F55;&#x547D;&#x540D;&#x7A7A;&#x95F4;&#xFF0C;&#x4EE5;&#x53CA;&#x6570;&#x636E;&#x5757;&#x4FE1;&#x606F;&#x7BA1;&#x7406;&#xFF1B;&#x540C;&#x65F6;&#x7EF4;&#x62A4;&#x8005;&#x6587;&#x4EF6;&#x540D;&#x5230;&#x5757;&#x5E8F;&#x5217;&#x5173;&#x7CFB;(namespace)&#xFF0C;&#x8FD9;&#x5757;&#x4FE1;&#x606F;&#x4F1A;&#x5B58;&#x5230;&#x78C1;&#x76D8;&#xFF1B;&#x5DF2;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x5757;&#x4E0E;&#x6570;&#x636E;&#x8282;&#x70B9;&#x5230;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#xFF0C;&#x6B64;&#x4FE1;&#x606F;&#x4F1A;&#x5728;namenode &#x542F;&#x52A8;&#x65F6;&#x91CD;&#x5EFA;&#x3002;Namenode&#x5B9E;&#x73B0;ClientProtocol&#x63A5;&#x53E3;&#xFF0C;&#x63D0;&#x4F9B;&#x5BA2;&#x6237;&#x7AEF;&#x64CD;&#x4F5C;DFS services&#xFF1B;&#x4E5F;&#x5B9E;&#x73B0;DataNodeProtocol&#x63A5;&#x53E3;&#xFF0C;&#x63D0;&#x4F9B;DataNode&#x901A;&#x8BAF;&#x7684;&#x63A5;&#x53E3;&#xFF1B;&#x5B9E;&#x73B0;NamenodeProtocol&#xFF0C;&#x63D0;&#x4F9B;Secondary namenodes&#x901A;&#x8BAF;&#x7684;&#x63A5;&#x53E3;&#x3002;<br>&#x6211;&#x4EEC;&#x4ECE;main&#x65B9;&#x6CD5;&#x5F00;&#x59CB;&#x5206;&#x6790;&#xFF1A;</p>
<ol>
<li><p>main&#x542F;&#x52A8;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String argv[])</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    <span class="comment">// help&#x63D0;&#x793A;</span></span><br><span class="line">    <span class="keyword">if</span> (DFSUtil.parseHelpArgument(argv, NameNode.USAGE, System.out, <span class="keyword">true</span>)) {</span><br><span class="line">      System.exit(<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      StringUtils.startupShutdownMessage(NameNode.class, argv, LOG);</span><br><span class="line">	  <span class="comment">// &#x521B;&#x5EFA;NameNode</span></span><br><span class="line">      NameNode namenode = createNameNode(argv, <span class="keyword">null</span>);</span><br><span class="line">	  <span class="comment">// &#x7B49;&#x5F85;NameNode&#x7EBF;&#x7A0B;&#x7ED3;&#x675F;</span></span><br><span class="line">      <span class="keyword">if</span> (namenode != <span class="keyword">null</span>) {</span><br><span class="line">        namenode.join();</span><br><span class="line">      }</span><br><span class="line">    } <span class="keyword">catch</span> (Throwable e) {</span><br><span class="line">      LOG.error(<span class="string">&quot;Failed to start namenode.&quot;</span>, e);</span><br><span class="line">      terminate(<span class="number">1</span>, e);</span><br><span class="line">    }</span><br><span class="line">  }</span><br></pre></td></tr></table></figure>
</li>
<li><p>new NameNode</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="title">NameNode</span><span class="params">(Configuration conf, NamenodeRole role)</span></span><br><span class="line">      <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="keyword">super</span>(conf);</span><br><span class="line">    <span class="keyword">this</span>.tracer = <span class="keyword">new</span> Tracer.Builder(<span class="string">&quot;NameNode&quot;</span>).</span><br><span class="line">        conf(TraceUtils.wrapHadoopConf(NAMENODE_HTRACE_PREFIX, conf)).</span><br><span class="line">        build();</span><br><span class="line">    <span class="keyword">this</span>.tracerConfigurationManager =</span><br><span class="line">        <span class="keyword">new</span> TracerConfigurationManager(NAMENODE_HTRACE_PREFIX, conf);</span><br><span class="line">    <span class="keyword">this</span>.role = role;</span><br><span class="line">    setClientNamenodeAddress(conf);</span><br><span class="line">	<span class="comment">// &#x83B7;&#x53D6;&#x547D;&#x540D;&#x670D;&#x52A1;ID&#xFF0C;&#x8054;&#x90A6;&#x670D;&#x52A1;(&#x6269;&#x5C55;NameNode&#x7BA1;&#x7406;&#x6587;&#x4EF6;&#x5BF9;&#x5E94;&#x5757;&#x4FE1;&#x606F;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x540E;&#x7EED;&#x518D;&#x505A;&#x8FD9;&#x5757;&#x5730;&#x5206;&#x6790;)</span></span><br><span class="line">    String nsId = getNameServiceId(conf);</span><br><span class="line">    String namenodeId = HAUtil.getNameNodeId(conf, nsId);</span><br><span class="line">	<span class="comment">// &#x9AD8;&#x53EF;&#x7528;&#x662F;&#x5426;&#x914D;&#x7F6E;</span></span><br><span class="line">    <span class="keyword">this</span>.haEnabled = HAUtil.isHAEnabled(conf, nsId);</span><br><span class="line">	<span class="comment">// &#x6839;&#x636E;&#x542F;&#x52A8;&#x9879;&#x51B3;&#x5B9A;&#x662F;Master&#x4E0E;StandBy</span></span><br><span class="line">    state = createHAState(getStartupOption(conf));</span><br><span class="line">    <span class="keyword">this</span>.allowStaleStandbyReads = HAUtil.shouldAllowStandbyReads(conf);</span><br><span class="line">	<span class="comment">// &#x521B;&#x5EFA;NameNodeHaContext</span></span><br><span class="line">    <span class="keyword">this</span>.haContext = createHAContext();</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      initializeGenericKeys(conf, nsId, namenodeId);</span><br><span class="line">	  <span class="comment">// &#x521D;&#x59CB;&#x5316;NameNode</span></span><br><span class="line">      initialize(getConf());</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        haContext.writeLock();</span><br><span class="line">        state.prepareToEnterState(haContext);</span><br><span class="line">        state.enterState(haContext);</span><br><span class="line">      } <span class="keyword">finally</span> {</span><br><span class="line">        haContext.writeUnlock();</span><br><span class="line">      }</span><br><span class="line">    } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">      <span class="keyword">this</span>.stopAtException(e);</span><br><span class="line">      <span class="keyword">throw</span> e;</span><br><span class="line">    } <span class="keyword">catch</span> (HadoopIllegalArgumentException e) {</span><br><span class="line">      <span class="keyword">this</span>.stopAtException(e);</span><br><span class="line">      <span class="keyword">throw</span> e;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">this</span>.started.set(<span class="keyword">true</span>);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure>
</li>
<li><p>&#x521B;&#x5EFA;NameNodeHAContext&#x8FC7;&#x7A0B;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4FDD;&#x5B58;&#x72B6;&#x6001;&#x4E0E;&#x9009;&#x62E9;&#x884C;&#x7684;&#x66B4;&#x9732;&#x4E00;&#x4E9B;&#x63A5;&#x53E3;</p>
</li>
<li><p>&#x521D;&#x59CB;&#x5316;NameNode</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(Configuration conf)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="keyword">if</span> (conf.get(HADOOP_USER_GROUP_METRICS_PERCENTILES_INTERVALS) == <span class="keyword">null</span>) {</span><br><span class="line">      String intervals = conf.get(DFS_METRICS_PERCENTILES_INTERVALS_KEY);</span><br><span class="line">      <span class="keyword">if</span> (intervals != <span class="keyword">null</span>) {</span><br><span class="line">        conf.set(HADOOP_USER_GROUP_METRICS_PERCENTILES_INTERVALS,</span><br><span class="line">          intervals);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    UserGroupInformation.setConfiguration(conf);</span><br><span class="line">    loginAsNameNodeUser(conf);</span><br><span class="line"></span><br><span class="line">    NameNode.initMetrics(conf, <span class="keyword">this</span>.getRole());</span><br><span class="line">    StartupProgressMetrics.register(startupProgress);</span><br><span class="line"></span><br><span class="line">    pauseMonitor = <span class="keyword">new</span> JvmPauseMonitor();</span><br><span class="line">    pauseMonitor.init(conf);</span><br><span class="line">    pauseMonitor.start();</span><br><span class="line">    metrics.getJvmMetrics().setPauseMonitor(pauseMonitor);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (NamenodeRole.NAMENODE == role) {</span><br><span class="line">	<span class="comment">// &#x542F;&#x52A8;NameNodeHttpServer&#xFF0C;&#x6B64;&#x8FC7;&#x7A0B;&#x53E6;&#x505A;&#x5206;&#x6790;</span></span><br><span class="line">      startHttpServer(conf);</span><br><span class="line">    }</span><br><span class="line">	<span class="comment">// &#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</span></span><br><span class="line">    loadNamesystem(conf);</span><br><span class="line"></span><br><span class="line">    rpcServer = createRpcServer(conf);</span><br><span class="line"></span><br><span class="line">    initReconfigurableBackoffKey();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (clientNamenodeAddress == <span class="keyword">null</span>) {</span><br><span class="line">      <span class="comment">// This is expected for MiniDFSCluster. Set it now using </span></span><br><span class="line">      <span class="comment">// the RPC server&apos;s bind address.</span></span><br><span class="line">      clientNamenodeAddress = </span><br><span class="line">          NetUtils.getHostPortString(rpcServer.getRpcAddress());</span><br><span class="line">      LOG.info(<span class="string">&quot;Clients are to use &quot;</span> + clientNamenodeAddress + <span class="string">&quot; to access&quot;</span></span><br><span class="line">          + <span class="string">&quot; this namenode/service.&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (NamenodeRole.NAMENODE == role) {</span><br><span class="line">      httpServer.setNameNodeAddress(getNameNodeAddress());</span><br><span class="line">      httpServer.setFSImage(getFSImage());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    startCommonServices(conf);</span><br><span class="line">    startMetricsLogger(conf);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure>
</li>
<li><p>&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#xFF0C;&#x52A0;&#x8F7D;Image&#x4E0E;Edit&#x6587;&#x4EF6;&#xFF0C;&#x521B;&#x5EFA;FsNamesystem</p>
</li>
<li>&#x521B;&#x5EFA;BlockManager</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dubbo service gray deploy]]></title>
      <url>https://qiufanghua.github.io/2016/05/02/dubbo-service-gray-deploy/</url>
      <content type="html"><![CDATA[<h1 id="&#x80CC;&#x666F;"><a href="#&#x80CC;&#x666F;" class="headerlink" title="&#x80CC;&#x666F;"></a>&#x80CC;&#x666F;</h1><p>&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x7684;&#x7070;&#x5EA6;&#x662F;&#x57FA;&#x4E8E;&#x7CFB;&#x7EDF;&#x7EA7;&#x522B;&#xFF0C;&#x662F;&#x5728;FCP&#x7CFB;&#x7EDF;&#x4E0A;&#x5BF9;&#x6240;&#x4EE5;&#x8FC7;&#x6765;&#x7684;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x62E6;&#x622A;&#xFF0C;&#x901A;&#x8FC7;&#x8BF7;&#x6C42;&#x53C2;&#x6570;&#xFF0C;&#x5BA2;&#x670D;&#x7AEF;IP&#x6765;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x80FD;&#x591F;&#x8BBF;&#x95EE;&#x88AB;&#x8BBF;&#x95EE;&#x7684;&#x7CFB;&#x7EDF;&#x3002;&#x8FD9;&#x63A7;&#x5236;&#x7C92;&#x5EA6;&#x592A;&#x5927;&#x4E86;&#xFF0C;&#x6CA1;&#x6CD5;&#x505A;&#x5230;&#x7CFB;&#x7EDF;&#x7684;&#x7070;&#x5EA6;&#x66F4;&#x65B0;&#x4EE5;&#x53CA;&#x670D;&#x52A1;&#x7684;&#x7070;&#x5EA6;&#x53D1;&#x5E03;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x7CFB;&#x7EDF;A&#x5728;&#x673A;&#x5668;s1&#x4E0E;s2&#x4E0A;&#x90E8;&#x7F72;&#x7684;&#x662F;v1&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5728;s3&#x4E0E;s4&#x4E0A;&#x90E8;&#x7F72;&#x7684;&#x662F;&#x66F4;&#x65B0;&#x4E86;&#x670D;&#x52A1;&#x7684;v2&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x4F01;&#x4E1A;A&#x53EA;&#x80FD;&#x8BBF;&#x95EE;v2&#x7684;&#x7248;&#x672C;&#xFF0C;&#x4F01;&#x4E1A;B&#x53EA;&#x80FD;&#x8BBF;&#x95EE;v1&#x7684;&#x7248;&#x672C;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x73B0;&#x6709;&#x7684;&#x7070;&#x5EA6;&#x7CFB;&#x7EDF;&#x662F;&#x65E0;&#x6CD5;&#x5B9E;&#x73B0;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x7684;&#x7070;&#x5EA6;&#x7CFB;&#x7EDF;&#x80FD;&#x591F;&#x63D0;&#x4F9B;&#x57FA;&#x4E8E;&#x5E94;&#x7528;&#x3001;&#x57FA;&#x4E8E;&#x90E8;&#x7F72;&#x5230;&#x673A;&#x5668;&#x3001;&#x57FA;&#x4E8E;&#x670D;&#x52A1;&#x7EA7;&#x522B;&#x7684;&#x7070;&#x5EA6;&#x63A7;&#x5236;&#x3002;</p>
<h1 id="&#x7CFB;&#x7EDF;&#x7ED3;&#x6784;"><a href="#&#x7CFB;&#x7EDF;&#x7ED3;&#x6784;" class="headerlink" title="&#x7CFB;&#x7EDF;&#x7ED3;&#x6784;"></a>&#x7CFB;&#x7EDF;&#x7ED3;&#x6784;</h1><p><img src="/2016/05/02/dubbo-service-gray-deploy/gray_servcie_architect.png" alt="gray architect" title="gray architect "></p>
<h1 id="&#x7CFB;&#x7EDF;&#x6A21;&#x5757;"><a href="#&#x7CFB;&#x7EDF;&#x6A21;&#x5757;" class="headerlink" title="&#x7CFB;&#x7EDF;&#x6A21;&#x5757;"></a>&#x7CFB;&#x7EDF;&#x6A21;&#x5757;</h1><h2 id="&#x7070;&#x5EA6;&#x5BA2;&#x6237;&#x7AEF;"><a href="#&#x7070;&#x5EA6;&#x5BA2;&#x6237;&#x7AEF;" class="headerlink" title="&#x7070;&#x5EA6;&#x5BA2;&#x6237;&#x7AEF;"></a>&#x7070;&#x5EA6;&#x5BA2;&#x6237;&#x7AEF;</h2><p>&#x8D77;&#x521D;&#x6211;&#x4EEC;&#x60F3;&#x901A;&#x8FC7;&#x6269;&#x5C55;Dubbo&#x7684;&#x670D;&#x52A1;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x6DFB;&#x52A0;&#x57FA;&#x4E8E;&#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x7684;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x8FD9;&#x6837;&#x5728;Dubbo&#x670D;&#x52A1;&#x8C03;&#x7528;&#x65F6;&#x52A0;&#x5165;&#x6211;&#x4EEC;&#x7684;&#x7070;&#x5EA6;&#x903B;&#x8F91;&#xFF0C;&#x8FC7;&#x6EE4;&#x4E0D;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x7684;&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#xFF0C;&#x8FBE;&#x5230;&#x670D;&#x52A1;&#x5730;&#x7070;&#x5EA6;&#x53D1;&#x5E03;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x5B9E;&#x73B0;&#x662F;&#x57FA;&#x4E8E;Dubbo&#x670D;&#x52A1;&#x6765;&#x914D;&#x7F6E;&#x8DEF;&#x7531;&#x89C4;&#x5219;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x57FA;&#x4E8E;&#x5E94;&#x7528;&#x7EA7;&#x522B;&#x7684;&#x7070;&#x5EA6;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E3A;&#x8BE5;&#x5E94;&#x7528;&#x66B4;&#x9732;&#x6240;&#x6709;&#x670D;&#x52A1;&#x90FD;&#x6DFB;&#x52A0;&#x8DEF;&#x7531;&#x89C4;&#x5219;&#xFF0C;&#x4EE5;&#x4FBF;&#x6211;&#x4EEC;Dubbo&#x670D;&#x52A1;&#x5F15;&#x7528;&#x8005;&#x80FD;&#x591F;&#x63A5;&#x6536;&#x5230;&#x5BF9;&#x5E94;&#x670D;&#x52A1;&#x7684;&#x8DEF;&#x7531;&#x89C4;&#x5219;&#x3002;&#x8FD9;&#x6709;&#x4E24;&#x4E2A;&#x5F0A;&#x7AEF;&#xFF0C;&#x4E00;&#x662F;&#xFF0C;&#x9891;&#x7E41;&#x7684;&#x8BBE;&#x7F6E;Dubbo&#x670D;&#x52A1;&#x5F71;&#x54CD;&#x6027;&#x80FD;&#xFF1B;&#x4E8C;&#x662F;&#xFF1A;&#x670D;&#x52A1;&#x8DEF;&#x7531;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4F1A;&#x63A8;&#x9001;&#x5230;&#x6240;&#x6709;&#x7684;&#x5BA2;&#x670D;&#x7AEF;&#xFF0C;&#x5373;&#x4F7F;&#x4ED6;&#x6CA1;&#x6709;&#x6DFB;&#x52A0;&#x7070;&#x5EA6;&#x63A7;&#x5236;&#xFF0C;&#x8FD9;&#x6709;&#x4E9B;&#x4E0D;&#x5408;&#x7406;&#x3002;<br>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x91C7;&#x7528;&#x5982;&#x4E0B;&#x65B9;&#x6848;&#xFF1A;<br>&#x5F15;&#x7528;Dubbo&#x670D;&#x52A1;&#x65F6;&#xFF0C;Dubbo&#x8FD4;&#x56DE;Invoker&#x5BF9;&#x8C61;&#x5F15;&#x7528;&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#xFF0C;&#x5728;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x65F6;&#x4F1A;&#x6839;&#x636E;&#x6211;&#x4EEC;Invocation(&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x4FE1;&#x606F;)&#x8C03;&#x7528;Invoker&#x5173;&#x8054;&#x7684;Directory&#x7684;&#x670D;&#x52A1;&#x67E5;&#x627E;&#x65B9;&#x6CD5;&#xFF0C;&#x901A;&#x8FC7;&#x4EE3;&#x7406;Directory&#x7684;&#x670D;&#x52A1;&#x67E5;&#x627E;&#x65B9;&#x6CD5;&#xFF0C;&#x6DFB;&#x52A0;&#x6211;&#x4EEC;&#x7684;&#x7070;&#x5EA6;&#x903B;&#x8F91;&#x3002;</p>
<h3 id="Dubbo&#x670D;&#x52A1;&#x67E5;&#x627E;&#x62E6;&#x622A;"><a href="#Dubbo&#x670D;&#x52A1;&#x67E5;&#x627E;&#x62E6;&#x622A;" class="headerlink" title="Dubbo&#x670D;&#x52A1;&#x67E5;&#x627E;&#x62E6;&#x622A;"></a>Dubbo&#x670D;&#x52A1;&#x67E5;&#x627E;&#x62E6;&#x622A;</h3><ul>
<li>&#x6DFB;&#x52A0;Cluster Wrapper&#x7C7B;&#x3002;&#x6DFB;&#x52A0;&#x6B64;&#x7C7B;&#x63D0;&#x4F9B;&#x4EE3;&#x7406;Directory&#x7684;&#x5165;&#x53E3;&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GrayServiceClusterWrapper</span> <span class="keyword">implements</span> <span class="title">Cluster</span> </span>{</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> Cluster cluster;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// Dubbo will inject properties which have associated setting method by SpringExtenstionFactory,</span></span><br><span class="line">   <span class="comment">// which uses property name lookup bean in spring context.</span></span><br><span class="line">   <span class="keyword">private</span> GrayControlService grayControlService;</span><br><span class="line">    </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">GrayServiceClusterWrapper</span><span class="params">(<span class="keyword">final</span> Cluster cluster)</span> </span>{</span><br><span class="line">       <span class="keyword">if</span> (cluster == <span class="keyword">null</span>) {</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;cluster == null&quot;</span>);</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">this</span>.cluster = cluster;</span><br><span class="line">   }</span><br><span class="line">    </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> &lt;T&gt; <span class="function">Invoker&lt;T&gt; <span class="title">join</span><span class="params">(Directory&lt;T&gt; directory)</span> <span class="keyword">throws</span> RpcException </span>{</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">if</span> (grayControlService == <span class="keyword">null</span>) {</span><br><span class="line">           <span class="keyword">return</span> cluster.join(directory);</span><br><span class="line">       }</span><br><span class="line">    </span><br><span class="line">       <span class="comment">// proxy directory list method and add gray logic</span></span><br><span class="line">       <span class="keyword">return</span> cluster.join(DirectoryProxyFactory.getProxy(directory, grayControlService));</span><br><span class="line">   }</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectoryProxyFactory</span> </span>{</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Class&lt;?&gt;[] interfaces = <span class="keyword">new</span> Class[<span class="number">1</span>];</span><br><span class="line">       <span class="keyword">static</span> {</span><br><span class="line">           interfaces[<span class="number">0</span>] = Directory.class;</span><br><span class="line">       }</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Directory&lt;T&gt; <span class="title">getProxy</span><span class="params">(Directory&lt;T&gt; directory, GrayControlService grayControlService)</span> </span>{</span><br><span class="line">           <span class="keyword">return</span> (Directory&lt;T&gt;) Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), interfaces, <span class="keyword">new</span>  DirectoryInvocationHandler(directory, grayControlService));</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectoryInvocationHandler</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>{</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> Directory&lt;T&gt; directory;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> GrayControlService grayControlService;</span><br><span class="line">    </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">DirectoryInvocationHandler</span><span class="params">(Directory&lt;T&gt; directory, GrayControlService grayControlService)</span> </span>{</span><br><span class="line">           <span class="keyword">this</span>.directory = directory;</span><br><span class="line">           <span class="keyword">this</span>.grayControlService = grayControlService;</span><br><span class="line">       }</span><br><span class="line">    </span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">    </span><br><span class="line">           String methodName = method.getName();</span><br><span class="line">           Class&lt;?&gt;[] parameterTypes = method.getParameterTypes();</span><br><span class="line">    </span><br><span class="line">           <span class="comment">// user proxy object method</span></span><br><span class="line">           <span class="keyword">if</span> (<span class="string">&quot;list&quot;</span>.equals(methodName) &amp;&amp; parameterTypes != <span class="keyword">null</span> &amp;&amp; parameterTypes.length == <span class="number">1</span> &amp;&amp; parameterTypes[<span class="number">0</span>] == Invocation.class) {</span><br><span class="line">    </span><br><span class="line">               Invocation invocation = (Invocation) args[<span class="number">0</span>];</span><br><span class="line">               URL consumerUrl;</span><br><span class="line">               <span class="comment">// first we list all available invokers then we filter it by gray service</span></span><br><span class="line">               <span class="keyword">if</span> (AbstractDirectory.class.isAssignableFrom(directory.getClass())) {</span><br><span class="line">                   AbstractDirectory absDirectory = (AbstractDirectory) directory;</span><br><span class="line">                   consumerUrl = absDirectory.getConsumerUrl();</span><br><span class="line">               } <span class="keyword">else</span> {</span><br><span class="line">                   String interfaceName = directory.getInterface().getName();</span><br><span class="line">                   consumerUrl = <span class="keyword">new</span> URL(Constants.CONSUMER_PROTOCOL, NetUtils.getLocalHost(), <span class="number">0</span>, interfaceName, directory.getUrl().getParameters());</span><br><span class="line">               }</span><br><span class="line">    </span><br><span class="line">               List&lt;Invoker&lt;T&gt;&gt; invokers = directory.list(invocation);</span><br><span class="line">    </span><br><span class="line">               <span class="keyword">return</span> grayControlService.grayFilter(invokers, consumerUrl, invocation);</span><br><span class="line">    </span><br><span class="line">           } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;getUrl&quot;</span>.equals(methodName)) {</span><br><span class="line">               <span class="keyword">return</span> directory.getUrl();</span><br><span class="line">           } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;isAvailable&quot;</span>.equals(methodName)) {</span><br><span class="line">               <span class="keyword">return</span> directory.isAvailable();</span><br><span class="line">           } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;destroy&quot;</span>.equals(methodName)) {</span><br><span class="line">               directory.destroy();</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">           } <span class="keyword">else</span> {</span><br><span class="line">               <span class="keyword">return</span> method.invoke(proxy, args);</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">    </span><br><span class="line">   <span class="function"><span class="keyword">public</span> GrayControlService <span class="title">getGrayControlService</span><span class="params">()</span> </span>{</span><br><span class="line">       <span class="keyword">return</span> grayControlService;</span><br><span class="line">   }</span><br><span class="line">    </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGrayControlService</span><span class="params">(GrayControlService grayControlService)</span> </span>{</span><br><span class="line">       <span class="keyword">this</span>.grayControlService = grayControlService;</span><br><span class="line">   	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<ul>
<li>&#x6DFB;&#x52A0;DirectoryInvocationHandler&#x3002;&#x4EE3;&#x7406;Directory&#x7684;&#x670D;&#x52A1;&#x67E5;&#x627E;&#x65B9;&#x6CD5;&#xFF0C;&#x52A0;&#x5165;&#x7070;&#x5EA6;&#x63A7;&#x5236;&#x903B;&#x8F91;&#x3002;</li>
<li>&#x5B9E;&#x73B0;&#x7070;&#x5EA6;&#x63A7;&#x5236;&#x903B;&#x8F91;</li>
</ul>
<h3 id="&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x76D1;&#x542C;"><a href="#&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x76D1;&#x542C;" class="headerlink" title="&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x76D1;&#x542C;"></a>&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x76D1;&#x542C;</h3><p>&#x5B9E;&#x65F6;&#x7684;&#x63A5;&#x53D7;&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x7070;&#x5EA6;&#x63A7;&#x5236;&#x57FA;&#x4E8E;&#x6B64;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x7070;&#x5EA6;&#x5224;&#x65AD;&#x3002;&#x76D1;&#x542C;&#x76EE;&#x5F55;&#xFF0F;fs_gray</p>
<h2 id="&#x7070;&#x5EA6;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;"><a href="#&#x7070;&#x5EA6;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;" class="headerlink" title="&#x7070;&#x5EA6;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;"></a>&#x7070;&#x5EA6;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;</h2><h3 id="Dubbo&#x670D;&#x52A1;&#x76D1;&#x542C;"><a href="#Dubbo&#x670D;&#x52A1;&#x76D1;&#x542C;" class="headerlink" title="Dubbo&#x670D;&#x52A1;&#x76D1;&#x542C;"></a>Dubbo&#x670D;&#x52A1;&#x76D1;&#x542C;</h3><p>&#x7070;&#x5EA6;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x80FD;&#x591F;&#x53D1;&#x73B0;&#x6211;&#x4EEC;&#x6240;&#x6709;&#x7684;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#xFF0C;Dubbo&#x5E76;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x57FA;&#x4E8E;&#x5E94;&#x7528;&#x6216;&#x8005;&#x65F6;&#x57FA;&#x4E8E;&#x673A;&#x5668;&#x7684;&#x670D;&#x52A1;&#x67E5;&#x627E;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x76D1;&#x542C;&#x6240;&#x6709;&#x670D;&#x52A1;&#xFF0C;&#x4EE5;&#x4FBF;&#x80FD;&#x53D1;&#x73B0;&#x670D;&#x52A1;&#xFF0C;&#x5BF9;&#x6536;&#x5230;&#x7684;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x5C01;&#x88C5;&#x540E;&#xFF0C;&#x4F9B;&#x540E;&#x7EED;&#x7684;&#x670D;&#x52A1;&#x67E5;&#x8BE2;&#x3002;</p>
<h3 id="Dubbo&#x670D;&#x52A1;&#x67E5;&#x8BE2;"><a href="#Dubbo&#x670D;&#x52A1;&#x67E5;&#x8BE2;" class="headerlink" title="Dubbo&#x670D;&#x52A1;&#x67E5;&#x8BE2;"></a>Dubbo&#x670D;&#x52A1;&#x67E5;&#x8BE2;</h3><ol>
<li>&#x6839;&#x636E;&#x5E94;&#x7528;&#x540D;&#x79F0;&#x67E5;&#x8BE2;&#x670D;&#x52A1;&#x5730;&#x5740;&#x5217;&#x8868;&#x3002;</li>
<li>&#x6839;&#x636E;&#x670D;&#x52A1;&#x5730;&#x5740;&#x67E5;&#x8BE2;&#x670D;&#x52A1;&#x5217;&#x8868;&#x3002;</li>
</ol>
<h3 id="&#x7070;&#x5EA6;&#x914D;&#x7F6E;"><a href="#&#x7070;&#x5EA6;&#x914D;&#x7F6E;" class="headerlink" title="&#x7070;&#x5EA6;&#x914D;&#x7F6E;"></a>&#x7070;&#x5EA6;&#x914D;&#x7F6E;</h3><ol>
<li>&#x6839;&#x636E;&#x5E94;&#x7528;&#x914D;&#x7F6E;&#x7070;&#x5EA6;&#x3002;</li>
<li>&#x6839;&#x636E;&#x670D;&#x52A1;&#x5730;&#x5740;&#x914D;&#x7F6E;&#x7070;&#x5EA6;&#x3002;</li>
<li>&#x6839;&#x636E;&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x7070;&#x5EA6;&#x3002;</li>
</ol>
<p><strong>&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x5728;zk&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;</strong></p>
<ol>
<li>&#x5E94;&#x7528;&#x7EA7;&#x522B;&#x7684;&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x76EE;&#x5F55;<br>&#xFF0F;fs_gray/{application_name}</li>
<li>&#x670D;&#x52A1;&#x5730;&#x5740;&#x7EA7;&#x522B;&#x7684;&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x76EE;&#x5F55;<br>/fs_gray/{appliation_name}/{service_address}</li>
<li>&#x670D;&#x52A1;&#x7EA7;&#x522B;&#x7684;&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x76EE;&#x5F55;<br>&#xFF0F;fs_gray/{application_name}/{service_address}/{service_url}</li>
</ol>
<p><strong>&#x7070;&#x5EA6;&#x914D;&#x7F6E;&#x6570;&#x636E;&#x7ED3;&#x6784;</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5BF9;&#x5E94;&#x914D;&#x7F6E;&#x7EA7;&#x522B;&#x662F;&#x5426;&#x53EF;&#x7528;&#x3002;eg&#xFF1A;&#x5728;&#x5E94;&#x7528;&#x7EA7;&#x522B;&#x914D;&#x7F6E;&#x8BE5;&#x5C5E;&#x6027;false&#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x5F15;&#x7528;&#x4E0D;&#x53EF;&#x7528;</span></span><br><span class="line"><span class="keyword">boolean</span> available;</span><br><span class="line"><span class="comment">// &#x8BBF;&#x95EE;&#x8005;&#x767D;&#x540D;&#x5355;&#x5730;&#x5740;</span></span><br><span class="line">List&lt;String&gt; ipWhiteList;</span><br><span class="line">List&lt;String&gt; ipBlackList;</span><br><span class="line">List&lt;String&gt; enterpriseWhiteList;</span><br><span class="line">List&lt;String&gt; enterpriseBlackList;</span><br><span class="line">List&lt;String&gt; userIdWhiteList;</span><br><span class="line">List&lt;String&gt; userIdBlackList;</span><br><span class="line"><span class="comment">// &#x8BBF;&#x95EE;&#x767E;&#x5206;&#x6BD4;</span></span><br><span class="line">Integer percent;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dubbo provider start process analysis]]></title>
      <url>https://qiufanghua.github.io/2016/04/27/dubbo-provider-start-process-analysis/</url>
      <content type="html"><![CDATA[<h1 id="Dubbo&#x7B80;&#x4ECB;"><a href="#Dubbo&#x7B80;&#x4ECB;" class="headerlink" title="Dubbo&#x7B80;&#x4ECB;"></a>Dubbo&#x7B80;&#x4ECB;</h1><h1 id="Dubbo&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5206;&#x6790;"><a href="#Dubbo&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5206;&#x6790;" class="headerlink" title="Dubbo&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5206;&#x6790;"></a>Dubbo&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</h1><p>Dubbo&#x662F;&#x57FA;&#x4E8E;Spring&#x5BB9;&#x5668;&#x914D;&#x7F6E;&#x4E0E;&#x7BA1;&#x7406;Dubbo&#x670D;&#x52A1;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;Dubbo&#x63D0;&#x4F9B;&#x7684;Spring&#x547D;&#x540D;&#x7A7A;&#x95F4;&#x914D;&#x7F6E;Dubbo&#x5E94;&#x7528;&#x4FE1;&#x606F;&#xFF0C;&#x53D1;&#x5E03;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x5F15;&#x7528;&#x7684;&#x670D;&#x52A1;&#x7B49;&#x4FE1;&#x606F;&#xFF0C;&#x901A;&#x8FC7;Spring&#x5BB9;&#x5668;&#x542F;&#x52A8;Dubbo&#x670D;&#x52A1;&#xFF0C;&#x4E0B;&#x9762;&#x4ECE;&#x5206;&#x522B;&#x4ECE;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x8BED;&#x6D88;&#x8D39;&#x7740;&#x8BE6;&#x7EC6;&#x7684;&#x4ECB;&#x7ECD;&#x4E0B;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;</p>
<hr>
<h2 id="Dubbo&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"><a href="#Dubbo&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;" class="headerlink" title="Dubbo&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"></a>Dubbo&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;</h2><ul>
<li>Dubbo&#x914D;&#x7F6E;&#x3002;&#x901A;&#x8FC7;dubbo namespace&#x914D;&#x7F6E;application&#xFF0C;module&#xFF0C;registry&#xFF0C;monitor&#xFF0C;provider&#xFF0C;consumer&#xFF0C;protocol&#xFF0C;service&#xFF0C;reference&#xFF0C;annotation&#x4FE1;&#x606F;&#xFF08;&#x5404;&#x6A21;&#x5757;&#x4FE1;&#x606F;&#x53C2;&#x8003;&#x6A21;&#x5757;&#x5206;&#x6790;&#x7AE0;&#x8282;&#xFF09;&#x3002;</li>
<li>Dubbo&#x7684;jar&#x5305;&#x7684;META-INFO&#x4E0B;sring.handlers&#x4E2D;&#x914D;&#x7F6E;&#x4E86;dubbo scheme&#x7684;&#x89E3;&#x6790;&#x5668;DubboNamespaceHandler&#x3002;</li>
<li><img src="/2016/04/27/dubbo-provider-start-process-analysis/dubbo_scheme_configuration.png" alt="dubbo scheme configuration"></li>
<li>Dubbo&#x547D;&#x540D;&#x7A7A;&#x95F4;&#x5904;&#x7406;&#x3002;DubboNamespaceHandler&#x89E3;&#x6790;&#x914D;&#x7F6E;&#x7684;Dubbo&#x4FE1;&#x606F;&#x5E76;&#x751F;&#x6210;&#x76F8;&#x5BF9;&#x5E94;&#x7684;BeanDefinition&#xFF0C;&#x4ECE;&#x800C;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;Dubbo&#x914D;&#x7F6E;&#x7C7B;&#xFF0C;&#x670D;&#x52A1;Bean&#xFF08;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#xFF09;&#x4EE5;&#x53CA;&#x670D;&#x52A1;Bean&#x5F15;&#x7528;&#xFF08;&#x670D;&#x52A1;&#x6D88;&#x8D39;&#x8005;&#xFF09;&#x3002;&#x6D89;&#x53CA;&#x7684;&#x7C7B;DubboNamespaceHandler&#xFF08;Dubbo&#x547D;&#x540D;&#x7A7A;&#x95F4;&#x5904;&#x7406;&#xFF09;&#xFF0C;DubboBeanDefinitionParser&#xFF08;&#x89E3;&#x6790;Dubbo&#x914D;&#x7F6E;&#x5E76;&#x751F;&#x6210;BeanDefinition&#xFF09;&#x3002;<br><img src="/2016/04/27/dubbo-provider-start-process-analysis/parser_regester.png" alt="Dubbo parser registe"></li>
<li>&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x914D;&#x7F6E;&#x3002;Dubbo&#x63D0;&#x4F9B;<dubbo:service>xml&#x4EE5;&#x53CA;@Service&#x6CE8;&#x89E3;&#x65B9;&#x5F0F;&#x914D;&#x7F6E;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x4FE1;&#x606F;&#xFF0C;&#x7531;DubboBeanDefinitionParser&#x89E3;&#x6790;&#x5E76;&#x751F;&#x6210;&#x670D;&#x52A1;&#x7684;BeanDefinition&#xFF0C;Spring&#x6839;&#x636E;BeanDefinition&#x751F;&#x6210;&#x670D;&#x52A1;&#x7684;ServiceBean&#x3002;<br><img src="/2016/04/27/dubbo-provider-start-process-analysis/bean_parser.png" alt="Dubbo bean definition"></dubbo:service></li>
<li>&#x670D;&#x52A1;&#x53D1;&#x5E03;-&#x5165;&#x53E3;&#x3002;&#x901A;&#x8FC7;&#x524D;&#x9762;&#x7684;&#x6B65;&#x9AA4;&#x914D;&#x7F6E;&#x7684;&#x670D;&#x52A1;&#x90FD;&#x4F1A;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;ServiceBean&#x5B9E;&#x4F8B;&#xFF0C;&#x8BE5;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;InitializingBean&#xFF0C;ApplicationListener&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x6709;2&#x79CD;&#x5165;&#x53E3;&#x53D1;&#x5E03;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x3002;&#x4E00;&#x662F;Spring&#x5BB9;&#x5668;&#x5728;&#x5B8C;&#x6210;&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x540E;&#x8C03;&#x7528;afterPropertiesSet&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x4F1A;&#x6839;&#x636E;&#x662F;&#x5426;&#x914D;&#x7F6E;&#x4E86;&#x670D;&#x52A1;&#x66B4;&#x9732;Delay&#x800C;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x9700;&#x8981;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#xFF08;&#x4E00;&#x822C;&#x6211;&#x4EEC;&#x90FD;&#x4F1A;&#x8BBE;&#x7F6E;delay&#xFF1D;&#xFF0D;1&#xFF0C;&#x4E5F;&#x5373;&#x6682;&#x65F6;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#xFF09;&#xFF1B;&#x4E8C;&#x662F;&#x5728;Spring&#x5BB9;&#x5668;&#x6210;&#x529F;&#x542F;&#x52A8;&#x540E;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#x3002;</li>
</ul>
<p><img src="/2016/04/27/dubbo-provider-start-process-analysis/service_export.png" alt="Dubbo bean definition"></p>
<ul>
<li>&#x670D;&#x52A1;&#x53D1;&#x5E03;-&#x83B7;&#x53D6;&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x7684;&#x6CE8;&#x518C;URL&#x4FE1;&#x606F;&#xFF0C;&#x7B80;&#x5355;&#x8BF4;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x9700;&#x8981;&#x6CE8;&#x518C;&#x6216;&#x8005;&#x8F93;&#x51FA;&#x5230;&#x54EA;&#x91CC;&#xFF0C;&#x7531;&#x8C01;&#x6765;&#x7BA1;&#x7406;&#x670D;&#x52A1;&#x3002;&#x83B7;&#x53D6;&#x7684;url&#x683C;&#x5F0F;&#x5982;&#xFF1A;<strong>registry</strong>://172.31.105.107:4180/com.alibaba.dubbo.registry.RegistryService?application=fs-open-pay_business&amp;check=false&amp;compiler=javassist&amp;dubbo=2.5.3&amp;logger=slf4j&amp;organization=FSOPEN&amp;owner=fs-open-pay_business&amp;pid=5428&amp;registry=zookeeper&amp;timestamp=1461553111445</li>
<li>&#x670D;&#x52A1;&#x53D1;&#x5E03;-&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x5DE5;&#x5382;&#x751F;&#x6210;Invoker&#x670D;&#x52A1;&#x8C03;&#x7528;&#x8005;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;&#x901A;&#x8FC7;javassist&#x52A8;&#x6001;&#x751F;&#x6210;Wrapper&#x7C7B;&#x800C;&#x4E0D;&#x662F;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x6765;&#x8C03;&#x7528;&#x670D;&#x52A1;&#x65B9;&#x6CD5;&#x3002;<br><img src="/2016/04/27/dubbo-provider-start-process-analysis/JavassistProxyFactory.png" alt="JavassistProxyFactory create invoker"><br>&#x751F;&#x6210;&#x7684;wrapper&#x7C7B;&#x4EE3;&#x7801;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wrapper0</span> <span class="keyword">extends</span> <span class="title">Wrapper</span> <span class="keyword">implements</span> <span class="title">DC</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] pns;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map pts;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] mns;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] dmns;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class[] mts0;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class[] mts1;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class[] mts2;</span><br><span class="line">    <span class="keyword">public</span> String[] getPropertyNames() {</span><br><span class="line">        <span class="keyword">return</span> pns;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasProperty</span><span class="params">(String var1)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> pts.containsKey(var1);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Class <span class="title">getPropertyType</span><span class="params">(String var1)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> (Class)pts.get(var1);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> String[] getMethodNames() {</span><br><span class="line">        <span class="keyword">return</span> mns;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> String[] getDeclaredMethodNames() {</span><br><span class="line">        <span class="keyword">return</span> dmns;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPropertyValue</span><span class="params">(Object var1, String var2, Object var3)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            AlarmLogService var4 = (AlarmLogService)var1;</span><br><span class="line">        } <span class="keyword">catch</span> (Throwable var6) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(var6);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchPropertyException(<span class="string">&quot;Not found property \&quot;&quot;</span> + var2 + <span class="string">&quot;\&quot; filed or setter method in class com.facishare.pay.notice.service.AlarmLogService.&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getPropertyValue</span><span class="params">(Object var1, String var2)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            AlarmLogService var3 = (AlarmLogService)var1;</span><br><span class="line">        } <span class="keyword">catch</span> (Throwable var5) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(var5);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchPropertyException(<span class="string">&quot;Not found property \&quot;&quot;</span> + var2 + <span class="string">&quot;\&quot; filed or setter method in class com.facishare.pay.notice.service.AlarmLogService.&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invokeMethod</span><span class="params">(Object var1, String var2, Class[] var3, Object[] var4)</span> <span class="keyword">throws</span> InvocationTargetException </span>{</span><br><span class="line">        AlarmLogService var5;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            var5 = (AlarmLogService)var1;</span><br><span class="line">        } <span class="keyword">catch</span> (Throwable var8) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(var8);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;notifyError&quot;</span>.equals(var2) &amp;&amp; var3.length == <span class="number">6</span>) {</span><br><span class="line">                <span class="keyword">return</span> var5.notifyError((String)var4[<span class="number">0</span>], (LevelType)var4[<span class="number">1</span>], (TransTypeEnum)var4[<span class="number">2</span>], (String)var4[<span class="number">3</span>], (String)var4[<span class="number">4</span>], (Calendar)var4[<span class="number">5</span>]);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;queryAlarmLog&quot;</span>.equals(var2) &amp;&amp; var3.length == <span class="number">2</span>) {</span><br><span class="line">                <span class="keyword">return</span> var5.queryAlarmLog((Pager)var4[<span class="number">0</span>], (AlarmLogVO)var4[<span class="number">1</span>]);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;updateAlarmLogStatus&quot;</span>.equals(var2) &amp;&amp; var3.length == <span class="number">2</span>) {</span><br><span class="line">                <span class="keyword">return</span> var5.updateAlarmLogStatus((Long)var4[<span class="number">0</span>], (AlarmStatus)var4[<span class="number">1</span>]);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (Throwable var9) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvocationTargetException(var9);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchMethodException(<span class="string">&quot;Not found method \&quot;&quot;</span> + var2 + <span class="string">&quot;\&quot; in class com.facishare.pay.notice.service.AlarmLogService.&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Wrapper0</span><span class="params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<ul>
<li>&#x670D;&#x52A1;&#x53D1;&#x5E03;-RegistryProtocol&#x8F93;&#x51FA;Invoker&#xFF0C;RegistryProtocol&#x8C03;&#x7528;&#x7531;javasist&#x751F;&#x6210;&#x7684;ProtocolAdaptiveProtocol.export(Invoker invoker)&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x6839;&#x636E;invoker&#x4E2D;&#x7684;URL&#x7684;protocol&#x534F;&#x8BAE;&#x503C;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;(&#x9ED8;&#x8BA4;&#x662F;dubbo&#xFF0C;&#x5BF9;&#x5E94;&#x5B9E;&#x73B0;&#x7C7B;&#x662F;DubboProtocol&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x901A;&#x8FC7;<dubbo.protocol>&#x7684;name&#x5C5E;&#x6027;&#x914D;&#x7F6E;&#x5176;&#x4ED6;&#x5B9E;&#x73B0;&#x7C7B;)&#x8F93;&#x51FA;Invoker&#x3002;</dubbo.protocol></li>
</ul>
<p>serviceKey&#x7EC4;&#x6210;&#x89C4;&#x5219;&#xFF1A;serviceGroup/serviceName: version:port</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="function">Exporter&lt;T&gt; <span class="title">export</span><span class="params">(Invoker&lt;T&gt; invoker)</span> <span class="keyword">throws</span> RpcException </span>{</span><br><span class="line">        URL url = invoker.getUrl();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// export service.</span></span><br><span class="line">        String key = serviceKey(url);</span><br><span class="line">        DubboExporter&lt;T&gt; exporter = <span class="keyword">new</span> DubboExporter&lt;T&gt;(invoker, key, exporterMap);</span><br><span class="line">        exporterMap.put(key, exporter);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//export an stub service for dispaching event</span></span><br><span class="line">        Boolean isStubSupportEvent = url.getParameter(Constants.STUB_EVENT_KEY,Constants.DEFAULT_STUB_EVENT);</span><br><span class="line">        Boolean isCallbackservice = url.getParameter(Constants.IS_CALLBACK_SERVICE, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (isStubSupportEvent &amp;&amp; !isCallbackservice){</span><br><span class="line">            String stubServiceMethods = url.getParameter(Constants.STUB_EVENT_METHODS_KEY);</span><br><span class="line">            <span class="keyword">if</span> (stubServiceMethods == <span class="keyword">null</span> || stubServiceMethods.length() == <span class="number">0</span> ){</span><br><span class="line">                <span class="keyword">if</span> (logger.isWarnEnabled()){</span><br><span class="line">                    logger.warn(<span class="keyword">new</span> IllegalStateException(<span class="string">&quot;consumer [&quot;</span> +url.getParameter(Constants.INTERFACE_KEY) +</span><br><span class="line">                            <span class="string">&quot;], has set stubproxy support event ,but no stub methods founded.&quot;</span>));</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                stubServiceMethodsMap.put(url.getServiceKey(), stubServiceMethods);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        openServer(url);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> exporter;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
<p>&#x65B0;&#x5EFA;&#x5E76;&#x6839;&#x636E;&#x670D;&#x52A1;&#x5730;&#x5740;&#x4E0E;&#x7AEF;&#x53E3;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x5DF2;&#x5373;&#x5BF9;&#x5E94;&#x6211;&#x4EEC;&#x7684;SocketServer<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">openServer</span><span class="params">(URL url)</span> </span>{</span><br><span class="line">        <span class="comment">// find server.</span></span><br><span class="line">        String key = url.getAddress();</span><br><span class="line">        <span class="comment">//client &#x4E5F;&#x53EF;&#x4EE5;&#x66B4;&#x9732;&#x4E00;&#x4E2A;&#x53EA;&#x6709;server&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x7684;&#x670D;&#x52A1;&#x3002;</span></span><br><span class="line">        <span class="keyword">boolean</span> isServer = url.getParameter(Constants.IS_SERVER_KEY,<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (isServer) {</span><br><span class="line">        	ExchangeServer server = serverMap.get(key);</span><br><span class="line">        	<span class="keyword">if</span> (server == <span class="keyword">null</span>) {</span><br><span class="line">        		serverMap.put(key, createServer(url));</span><br><span class="line">        	} <span class="keyword">else</span> {</span><br><span class="line">        		<span class="comment">//server&#x652F;&#x6301;reset,&#x914D;&#x5408;override&#x529F;&#x80FD;&#x4F7F;&#x7528;</span></span><br><span class="line">        		server.reset(url);</span><br><span class="line">        	}</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x521B;&#x5EFA;&#x670D;&#x52A1;&#x7AEF;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ExchangeServer <span class="title">createServer</span><span class="params">(URL url)</span> </span>{</span><br><span class="line">        <span class="comment">//&#x9ED8;&#x8BA4;&#x5F00;&#x542F;server&#x5173;&#x95ED;&#x65F6;&#x53D1;&#x9001;readonly&#x4E8B;&#x4EF6;</span></span><br><span class="line">        url = url.addParameterIfAbsent(Constants.CHANNEL_READONLYEVENT_SENT_KEY, Boolean.TRUE.toString());</span><br><span class="line">        <span class="comment">//&#x9ED8;&#x8BA4;&#x5F00;&#x542F;heartbeat</span></span><br><span class="line">        url = url.addParameterIfAbsent(Constants.HEARTBEAT_KEY, String.valueOf(Constants.DEFAULT_HEARTBEAT));</span><br><span class="line">        String str = url.getParameter(Constants.SERVER_KEY, Constants.DEFAULT_REMOTING_SERVER);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (str != <span class="keyword">null</span> &amp;&amp; str.length() &gt; <span class="number">0</span> &amp;&amp; ! ExtensionLoader.getExtensionLoader(Transporter.class).hasExtension(str))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Unsupported server type: &quot;</span> + str + <span class="string">&quot;, url: &quot;</span> + url);</span><br><span class="line"></span><br><span class="line">        url = url.addParameter(Constants.CODEC_KEY, Version.isCompatibleVersion() ? COMPATIBLE_CODEC_NAME : DubboCodec.NAME);</span><br><span class="line">        ExchangeServer server;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            server = Exchangers.bind(url, requestHandler);</span><br><span class="line">        } <span class="keyword">catch</span> (RemotingException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Fail to start server(url: &quot;</span> + url + <span class="string">&quot;) &quot;</span> + e.getMessage(), e);</span><br><span class="line">        }</span><br><span class="line">        str = url.getParameter(Constants.CLIENT_KEY);</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="keyword">null</span> &amp;&amp; str.length() &gt; <span class="number">0</span>) {</span><br><span class="line">            Set&lt;String&gt; supportedTypes = ExtensionLoader.getExtensionLoader(Transporter.class).getSupportedExtensions();</span><br><span class="line">            <span class="keyword">if</span> (!supportedTypes.contains(str)) {</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Unsupported client type: &quot;</span> + str);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> server;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x521B;&#x5EFA;HeaderExchangeServer&#xFF0C;&#x5E76;&#x521B;&#x5EFA;Timer&#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x5FC3;&#x8DF3;&#x6D88;&#x606F;&#x7ED9;&#x5DF2;&#x8FDE;&#x63A5;&#x7684;&#x901A;&#x9053;&#x4E5F;&#x5373;&#x5BA2;&#x6237;&#x7AEF;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeaderExchanger</span> <span class="keyword">implements</span> <span class="title">Exchanger</span> </span>{</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = <span class="string">&quot;header&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ExchangeServer <span class="title">bind</span><span class="params">(URL url, ExchangeHandler handler)</span> <span class="keyword">throws</span> RemotingException </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> HeaderExchangeServer(Transporters.bind(url, <span class="keyword">new</span> DecodeHandler(<span class="keyword">new</span> HeaderExchangeHandler(handler))));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x9ED8;&#x8BA4;&#x901A;&#x8FC7;NettyTransporter&#x521B;&#x5EFA;NettyServer<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Transporters</span> </span>{</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Server <span class="title">bind</span><span class="params">(URL url, ChannelHandler... handlers)</span> <span class="keyword">throws</span> RemotingException </span>{</span><br><span class="line">        <span class="keyword">if</span> (url == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;url == null&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (handlers == <span class="keyword">null</span> || handlers.length == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;handlers == null&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        ChannelHandler handler;</span><br><span class="line">        <span class="keyword">if</span> (handlers.length == <span class="number">1</span>) {</span><br><span class="line">            handler = handlers[<span class="number">0</span>];</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            handler = <span class="keyword">new</span> ChannelHandlerDispatcher(handlers);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> getTransporter().bind(url, handler);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// &#x901A;&#x8FC7;&#x6269;&#x5C55;&#x6A21;&#x5757;&#x83B7;&#x53D6;Transport&#x9002;&#x914D;&#x5668;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x65B9;&#x6CD5;&#x4F20;&#x5165;&#x7684;URL&#x7684;transporter&#x53C2;&#x6570;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;Transporter&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5177;&#x4F53;&#x8FC7;&#x7A0B;&#x53C2;&#x8003;Dubbo&#x6269;&#x5C55;&#x6A21;&#x5757;</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Transporter <span class="title">getTransporter</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> ExtensionLoader.getExtensionLoader(Transporter.class).getAdaptiveExtension();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x521B;&#x5EFA;NettyServer&#xFF0C;&#x521B;&#x5EFA;&#x76D1;&#x542C;&#xFF0C;&#x7ED1;&#x5B9A;&#x7AEF;&#x53E3;<br><img src="/2016/04/27/dubbo-provider-start-process-analysis/netty_server.png" alt="netty_server"></p>
<ul>
<li>&#x670D;&#x52A1;&#x53D1;&#x5E03;-RegistryProtocol&#x6CE8;&#x518C;&#x670D;&#x52A1;&#xFF0C;&#x540C;&#x6837;&#x662F;&#x8C03;&#x7528;RegistryFactory&#x7684;Adaptive&#x7C7B;&#x7684;getRegistry&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x83B7;&#x53D6;URL&#x7684;registry&#x53C2;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x8BE5;&#x503C;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x8C03;&#x7528;&#x5B9E;&#x73B0;&#x7C7B;&#x7684;register&#x65B9;&#x6CD5;&#x3002;&#x4F8B;&#x5B50;&#x4E2D;&#x7ED9;&#x7684;&#x662F;zookeeper&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x6CE8;&#x518C;&#x5668;&#x5B9E;&#x73B0;&#x7C7B;&#x662F;ZookeeperRegistry&#xFF0C;ZookeeperRegistry&#x7EE7;&#x627F;&#x4E0E;FailbackRegistry&#xFF0C;&#x4EE5;&#x4E0B;&#x662F;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x8FC7;&#x7A0B;</li>
</ul>
<p>&#x8C03;&#x7528;zookeeper&#x5BA2;&#x6237;&#x7AEF;&#x521B;&#x5EFA;&#x670D;&#x52A1;Node&#xFF0C;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x7EC4;&#x6210;&#x5F62;&#x5F0F;&#xFF1A; /group/seviceInterfacePath/providers/urlFullPath<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doRegister</span><span class="params">(URL url)</span> </span>{</span><br><span class="line">       <span class="keyword">try</span> {</span><br><span class="line">       	zkClient.create(toUrlPath(url), url.getParameter(Constants.DYNAMIC_KEY, <span class="keyword">true</span>));</span><br><span class="line">       } <span class="keyword">catch</span> (Throwable e) {</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Failed to register &quot;</span> + url + <span class="string">&quot; to zookeeper &quot;</span> + getUrl() + <span class="string">&quot;, cause: &quot;</span> + e.getMessage(), e);</span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>&#x670D;&#x52A1;&#x53D1;&#x5E03;-ProtocolFilterWrapper<br>Dubbo ExtentionLoader&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;Extension Wrapper&#x529F;&#x80FD;&#xFF0C;&#x901A;&#x4FD7;&#x6765;&#x8BF4;Dubbo&#x5148;&#x521B;&#x5EFA;Extension&#x7C7B;&#xFF0C;&#x521B;&#x5EFA;&#x5176;Wrapper&#x7C7B;&#x5E76;&#x6CE8;&#x5165;&#x88AB;&#x5305;&#x88C5;&#x7684;&#x7C7B;&#xFF08;&#x5982;&#x679C;&#x5176;&#x6709;Wrapper&#x7C7B;&#xFF0C;&#x5982;&#x6709;&#x591A;&#x4E2A;Wrapper&#x7C7B;&#xFF0C;&#x4F1A;&#x4F9D;&#x6B21;&#x521B;&#x5EFA;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6700;&#x540E;&#x521B;&#x5EFA;&#x7684;Wrapper&#x7C7B;&#xFF09;&#xFF1B;ProtocolFilterWrapper&#x5C31;&#x662F;Protocol&#x7684;&#x4E00;&#x4E2A;Wrapper&#x7C7B;&#xFF0C;&#x8BE5;&#x7C7B;&#x662F;&#x7ED9;&#x670D;&#x52A1;&#x8C03;&#x7528;&#x6DFB;&#x52A0;Filter&#x529F;&#x80FD;&#xFF0C;AccessLogFilter(&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x4FE1;&#x606F;&#x6253;&#x5370;)&#x3001;ActiveLimitFilter(&#x670D;&#x52A1;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x6570;&#x9650;&#x5236;Filter)&#x7B49;&#x7B49;&#xFF0C;&#x5177;&#x4F53;&#x53C2;&#x8003;&#x6A21;&#x5757;&#x5206;&#x6790;&#x3002;</p>
</li>
<li><p>&#x670D;&#x52A1;&#x53D1;&#x5E03;-ProtocolListenerWrapper<br>ProtocolListenerWrapper&#x662F;Protocol&#x7684;Wrapper&#x7C7B;&#xFF0C;&#x7ED9;&#x670D;&#x52A1;&#x7684;&#x6CE8;&#x518C;&#x4E8E;&#x5378;&#x8F7D;&#x6DFB;&#x52A0;&#x76D1;&#x542C;&#x3002;</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ExporterListener</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * The exporter exported.</span><br><span class="line">     * </span><br><span class="line">     * <span class="doctag">@see</span> com.alibaba.dubbo.rpc.Protocol#export(Invoker)</span><br><span class="line">     * <span class="doctag">@param</span> exporter</span><br><span class="line">     * <span class="doctag">@throws</span> RpcException</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">exported</span><span class="params">(Exporter&lt;?&gt; exporter)</span> <span class="keyword">throws</span> RpcException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * The exporter unexported.</span><br><span class="line">     * </span><br><span class="line">     * <span class="doctag">@see</span> com.alibaba.dubbo.rpc.Exporter#unexport()</span><br><span class="line">     * <span class="doctag">@param</span> exporter</span><br><span class="line">     * <span class="doctag">@throws</span> RpcException</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unexported</span><span class="params">(Exporter&lt;?&gt; exporter)</span></span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h2 id="Dubbo&#x6D88;&#x8D39;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"><a href="#Dubbo&#x6D88;&#x8D39;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;" class="headerlink" title="Dubbo&#x6D88;&#x8D39;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"></a>Dubbo&#x6D88;&#x8D39;&#x8005;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;</h2><ul>
<li>&#x914D;&#x7F6E;&#x5BA2;&#x6237;&#x7AEF;Registry&#x4FE1;&#x606F;</li>
<li>&#x914D;&#x7F6E;Consumer&#x4FE1;&#x606F;</li>
<li>&#x914D;&#x7F6E;Application&#x4FE1;&#x606F;</li>
<li>&#x914D;&#x7F6E;Module&#x4FE1;&#x606F;</li>
<li>&#x914D;&#x7F6E;Monitor&#x4FE1;&#x606F;</li>
<li><p>Dubbo&#x6D88;&#x8D39;&#x8005;Bean&#x5BF9;&#x5E94;&#x4E8E;ReferenceBean&#xFF0C;&#x8BE5;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;Spring&#x7684;FactoryBean&#xFF0C;&#x5728;&#x83B7;&#x53D6;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5E94;&#x7528;&#x65F6;&#x4F1A;&#x8C03;&#x7528;&#x7684;getObject&#x65B9;&#x6CD5;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> T <span class="title">get</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (destroyed){</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;Already destroyed!&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">    	<span class="keyword">if</span> (ref == <span class="keyword">null</span>) {</span><br><span class="line">    		init();</span><br><span class="line">    	}</span><br><span class="line">    	<span class="keyword">return</span> ref;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
</li>
<li><p>&#x8C03;&#x7528;&#x521D;&#x59CB;&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7406;&#xFF0C;&#x5F15;&#x7528;&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#x3002;URL&#x683C;&#x5F0F;&#x5982;&#xFF1A;<br><strong>registry</strong>://172.31.105.107:4180/com.alibaba.dubbo.registry.RegistryService?application=fs-open-pay_business&amp;check=false&amp;compiler=javassist&amp;dubbo=2.5.3&amp;logger=slf4j&amp;organization=FSOPEN&amp;owner=fs-open-pay_business&amp;pid=14936&amp;refer=application%3Dfs-open-pay_business%26check%3Dfalse%26compiler%3Djavassist%26default.check%3Dfalse%26default.init%3Dfalse%26default.retries%3D0%26default.timeout%3D3000%26dubbo%3D2.5.3%26init%3Dtrue%26interface%3D<br><strong>com.facishare.pay.order.service.OrderService</strong>%26logger%3Dslf4j%26methods%3DqueryOrder%2CgetOrderByOrderNo%2CaddOrder%2CupdateOrder%2CupdateOrderStatus%26organization%3DFSOPEN%26owner%3Dfs-open-pay_business%26pid%3D14936%26revision%3D0.0.2-SNAPSHOT%26side%3Dconsumer%26timeout%3D3000%26timestamp%3D1461650714943%26version%3D1.0&amp;registry=zookeeper&amp;timestamp=1461650715005</p>
</li>
</ul>
<p>com.alibaba.dubbo.registry.integration.RegistryProtocol<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="function">Invoker&lt;T&gt; <span class="title">refer</span><span class="params">(Class&lt;T&gt; type, URL url)</span> <span class="keyword">throws</span> RpcException </span>{</span><br><span class="line">        url = url.setProtocol(url.getParameter(Constants.REGISTRY_KEY, Constants.DEFAULT_REGISTRY)).removeParameter(Constants.REGISTRY_KEY);</span><br><span class="line">        Registry registry = registryFactory.getRegistry(url);</span><br><span class="line">        <span class="keyword">if</span> (RegistryService.class.equals(type)) {</span><br><span class="line">        	<span class="keyword">return</span> proxyFactory.getInvoker((T) registry, type, url);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// group=&quot;a,b&quot; or group=&quot;*&quot;</span></span><br><span class="line">        Map&lt;String, String&gt; qs = StringUtils.parseQueryString(url.getParameterAndDecoded(Constants.REFER_KEY));</span><br><span class="line">        String group = qs.get(Constants.GROUP_KEY);</span><br><span class="line">        <span class="keyword">if</span> (group != <span class="keyword">null</span> &amp;&amp; group.length() &gt; <span class="number">0</span> ) {</span><br><span class="line">            <span class="keyword">if</span> ( ( Constants.COMMA_SPLIT_PATTERN.split( group ) ).length &gt; <span class="number">1</span></span><br><span class="line">                    || <span class="string">&quot;*&quot;</span>.equals( group ) ) {</span><br><span class="line">                <span class="keyword">return</span> doRefer( getMergeableCluster(), registry, type, url );</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> doRefer(cluster, registry, type, url);</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<ul>
<li>&#x6CE8;&#x518C;consumer&#x5230;zookeeper&#xFF0C;&#x521B;&#x5EFA;&#x7684;&#x76EE;&#x5F55;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;<br><strong>/dubbo/com.facishare.pay.order.service.OrderService/consumers/consumer</strong>%3A%2F%2F10.22.0.78%2Fcom.facishare.pay.order.service.OrderService%3Fapplication%3Dfs-open-pay_business%26category%3Dconsumers%26check%3Dfalse%26compiler%3Djavassist%26default.check%3Dfalse%26default.init%3Dfalse%26default.retries%3D0%26default.timeout%3D3000%26dubbo%3D2.5.3%26init%3Dtrue%26interface%3Dcom.facishare.pay.order.service.OrderService%26logger%3Dslf4j%26methods%3DqueryOrder%2CgetOrderByOrderNo%2CaddOrder%2CupdateOrder%2CupdateOrderStatus%26organization%3DFSOPEN%26owner%3Dfs-open-pay_business%26pid%3D14936%26revision%3D0.0.2-SNAPSHOT%26side%3Dconsumer%26timeout%3D3000%26timestamp%3D1461650714943%26version%3D1.0</li>
</ul>
<p>&#x5E76;&#x8BA2;&#x9605;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x7684;&#x5DF2;&#x6CE8;&#x518C;&#x6570;&#x636E;&#xFF0C;&#x5F53;&#x6709;&#x6CE8;&#x518C;&#x6570;&#x636E;&#x53D8;&#x66F4;&#x65F6;&#x81EA;&#x52A8;&#x63A8;&#x9001;<br>URL&#x4E2D;&#x6DFB;&#x52A0;&#x53C2;&#x6570;&#xFF0C;category=providers,configurators,routers<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> &lt;T&gt; <span class="function">Invoker&lt;T&gt; <span class="title">doRefer</span><span class="params">(Cluster cluster, Registry registry, Class&lt;T&gt; type, URL url)</span> </span>{</span><br><span class="line">        RegistryDirectory&lt;T&gt; directory = <span class="keyword">new</span> RegistryDirectory&lt;T&gt;(type, url);</span><br><span class="line">        directory.setRegistry(registry);</span><br><span class="line">        directory.setProtocol(protocol);</span><br><span class="line">        URL subscribeUrl = <span class="keyword">new</span> URL(Constants.CONSUMER_PROTOCOL, NetUtils.getLocalHost(), <span class="number">0</span>, type.getName(), directory.getUrl().getParameters());</span><br><span class="line">        <span class="keyword">if</span> (! Constants.ANY_VALUE.equals(url.getServiceInterface())</span><br><span class="line">                &amp;&amp; url.getParameter(Constants.REGISTER_KEY, <span class="keyword">true</span>)) {</span><br><span class="line">			<span class="comment">// &#x6CE8;&#x518C;consumer</span></span><br><span class="line">            registry.register(subscribeUrl.addParameters(Constants.CATEGORY_KEY, Constants.CONSUMERS_CATEGORY,</span><br><span class="line">                    Constants.CHECK_KEY, String.valueOf(<span class="keyword">false</span>)));</span><br><span class="line">        }</span><br><span class="line">		<span class="comment">// &#x8BA2;&#x9605;&#x5DF2;&#x6CE8;&#x518C;&#x6570;&#x636E;</span></span><br><span class="line">        directory.subscribe(subscribeUrl.addParameter(Constants.CATEGORY_KEY, </span><br><span class="line">                Constants.PROVIDERS_CATEGORY </span><br><span class="line">                + <span class="string">&quot;,&quot;</span> + Constants.CONFIGURATORS_CATEGORY </span><br><span class="line">                + <span class="string">&quot;,&quot;</span> + Constants.ROUTERS_CATEGORY));</span><br><span class="line">        <span class="keyword">return</span> cluster.join(directory);</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<ul>
<li>&#x8C03;&#x7528;ZookeeperRegistry.doSubscribe&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x5982;&#x4E0B;&#x76EE;&#x5F55;&#x5E76;&#x6DFB;&#x52A0;&#x76EE;&#x5F55;&#x53D8;&#x5316;&#x76D1;&#x542C;&#xFF0C;&#x5982;&#x679C;&#x76EE;&#x5F55;&#x6709;&#x53D8;&#x5316;&#x5219;&#x56DE;&#x8C03;ZookeeperRegistry.this.notify&#x65B9;&#x6CD5;<br>/dubbo/com.facishare.pay.order.service.OrderService/<strong>providers</strong><br>/dubbo/com.facishare.pay.order.service.OrderService/<strong>configurators</strong><br>/dubbo/com.facishare.pay.order.service.OrderService/<strong>routers</strong></li>
</ul>
<p><img src="/2016/04/27/dubbo-provider-start-process-analysis/dubbo_servcie_zk_directory.png" alt="dubbo_servcie_zk_directory"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doSubscribe</span><span class="params">(<span class="keyword">final</span> URL url, <span class="keyword">final</span> NotifyListener listener)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            ...</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                List&lt;URL&gt; urls = <span class="keyword">new</span> ArrayList&lt;URL&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String path : toCategoriesPath(url)) {</span><br><span class="line">                    ConcurrentMap&lt;NotifyListener, ChildListener&gt; listeners = zkListeners.get(url);</span><br><span class="line">                    <span class="keyword">if</span> (listeners == <span class="keyword">null</span>) {</span><br><span class="line">                        zkListeners.putIfAbsent(url, <span class="keyword">new</span> ConcurrentHashMap&lt;NotifyListener, ChildListener&gt;());</span><br><span class="line">                        listeners = zkListeners.get(url);</span><br><span class="line">                    }</span><br><span class="line">                    ChildListener zkListener = listeners.get(listener);</span><br><span class="line">                    <span class="keyword">if</span> (zkListener == <span class="keyword">null</span>) {</span><br><span class="line">                        listeners.putIfAbsent(listener, <span class="keyword">new</span> ChildListener() {</span><br><span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">childChanged</span><span class="params">(String parentPath, List&lt;String&gt; currentChilds)</span> </span>{</span><br><span class="line">                            	ZookeeperRegistry.<span class="keyword">this</span>.notify(url, listener, toUrlsWithEmpty(url, parentPath, currentChilds));</span><br><span class="line">                            }</span><br><span class="line">                        });</span><br><span class="line">                        zkListener = listeners.get(listener);</span><br><span class="line">                    }</span><br><span class="line">                    zkClient.create(path, <span class="keyword">false</span>);</span><br><span class="line">                    List&lt;String&gt; children = zkClient.addChildListener(path, zkListener);</span><br><span class="line">                    <span class="keyword">if</span> (children != <span class="keyword">null</span>) {</span><br><span class="line">                    	urls.addAll(toUrlsWithEmpty(url, path, children));</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                notify(url, listener, urls);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (Throwable e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Failed to subscribe &quot;</span> + url + <span class="string">&quot; to zookeeper &quot;</span> + getUrl() + <span class="string">&quot;, cause: &quot;</span> + e.getMessage(), e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x76EE;&#x5F55;&#x4E0B;URl<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; children = zkClient.addChildListener(path, zkListener);</span><br><span class="line">                    <span class="keyword">if</span> (children != <span class="keyword">null</span>) {</span><br><span class="line">                    	urls.addAll(toUrlsWithEmpty(url, path, children));</span><br><span class="line">                    }</span><br></pre></td></tr></table></figure></p>
<ul>
<li>&#x5F53;&#x76D1;&#x542C;&#x5230;&#x5DF2;&#x4E0A;&#x8282;&#x70B9;&#x6709;&#x53D8;&#x5316;&#x65F6;&#x8C03;&#x7528;com.alibaba.dubbo.registry.integration.RegistryDirectory.notify&#x66F4;&#x65B0;&#x5BA2;&#x6237;&#x7AEF;Invoker&#x4FE1;&#x606F;&#x4E5F;&#x5373;&#x670D;&#x52A1;&#x5E94;&#x7528;<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(List&lt;URL&gt; urls)</span> </span>{</span><br><span class="line">        List&lt;URL&gt; invokerUrls = <span class="keyword">new</span> ArrayList&lt;URL&gt;();</span><br><span class="line">        List&lt;URL&gt; routerUrls = <span class="keyword">new</span> ArrayList&lt;URL&gt;();</span><br><span class="line">        List&lt;URL&gt; configuratorUrls = <span class="keyword">new</span> ArrayList&lt;URL&gt;();</span><br><span class="line">        <span class="keyword">for</span> (URL url : urls) {</span><br><span class="line">            String protocol = url.getProtocol();</span><br><span class="line">            String category = url.getParameter(Constants.CATEGORY_KEY, Constants.DEFAULT_CATEGORY);</span><br><span class="line">            <span class="keyword">if</span> (Constants.ROUTERS_CATEGORY.equals(category) </span><br><span class="line">                    || Constants.ROUTE_PROTOCOL.equals(protocol)) {</span><br><span class="line">                routerUrls.add(url);</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (Constants.CONFIGURATORS_CATEGORY.equals(category) </span><br><span class="line">                    || Constants.OVERRIDE_PROTOCOL.equals(protocol)) {</span><br><span class="line">                configuratorUrls.add(url);</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (Constants.PROVIDERS_CATEGORY.equals(category)) {</span><br><span class="line">                invokerUrls.add(url);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                logger.warn(<span class="string">&quot;Unsupported category &quot;</span> + category + <span class="string">&quot; in notified url: &quot;</span> + url + <span class="string">&quot; from registry &quot;</span> + getUrl().getAddress() + <span class="string">&quot; to consumer &quot;</span> + NetUtils.getLocalHost());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// configurators </span></span><br><span class="line">        <span class="keyword">if</span> (configuratorUrls != <span class="keyword">null</span> &amp;&amp; configuratorUrls.size() &gt;<span class="number">0</span> ){</span><br><span class="line">            <span class="keyword">this</span>.configurators = toConfigurators(configuratorUrls);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// routers</span></span><br><span class="line">        <span class="keyword">if</span> (routerUrls != <span class="keyword">null</span> &amp;&amp; routerUrls.size() &gt;<span class="number">0</span> ){</span><br><span class="line">            List&lt;Router&gt; routers = toRouters(routerUrls);</span><br><span class="line">            <span class="keyword">if</span>(routers != <span class="keyword">null</span>){ <span class="comment">// null - do nothing</span></span><br><span class="line">                setRouters(routers);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        List&lt;Configurator&gt; localConfigurators = <span class="keyword">this</span>.configurators; <span class="comment">// local reference</span></span><br><span class="line">        <span class="comment">// &#x5408;&#x5E76;override&#x53C2;&#x6570;</span></span><br><span class="line">        <span class="keyword">this</span>.overrideDirectoryUrl = directoryUrl;</span><br><span class="line">        <span class="keyword">if</span> (localConfigurators != <span class="keyword">null</span> &amp;&amp; localConfigurators.size() &gt; <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">for</span> (Configurator configurator : localConfigurators) {</span><br><span class="line">                <span class="keyword">this</span>.overrideDirectoryUrl = configurator.configure(overrideDirectoryUrl);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// providers</span></span><br><span class="line">        refreshInvoker(invokerUrls);</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>&#x6839;&#x636E;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#x6700;&#x65B0;&#x5730;&#x5740;&#x5217;&#x8868;&#xFF0C;&#x66F4;&#x65B0;&#x672C;&#x5730;&#x5E94;&#x7528;&#x7684;&#x76EE;&#x5F55;&#x670D;&#x52A1;&#x5217;&#x8868;<br>urls&#x5982;&#xFF1A;<br><strong>dubbo</strong>%3A%2F%2F172.31.105.110%3A29201%2Fcom.facishare.open.msg.service.SendMessageService%3Fanyhost%3Dtrue%26application%3Dfs-open-msg%26compiler%3Djavassist%26default.cluster%3Dfailover%26default.delay%3D-1%26default.loadbalance%3Dleastactive%26default.proxy%3Djavassist%26default.retries%3D2%26default.serialization%3Dhessian2%26default.timeout%3D3000%26delay%3D-1%26dubbo%3D2.5.3%26interface%3Dcom.facishare.open.msg.service.SendMessageService%26logger%3Dslf4j%26methods%3DsendTextMessage%2CsendTemplateMessage%2CsendOfficeMessage%26organization%3DFSOPEN%26owner%3Dfs-open-msg%26pid%3D11197%26retries%3D2%26revision%3D0.0.5-SNAPSHOT%26side%3Dprovider%26timestamp%3D1461745941653%26version%3D1.0<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Map&lt;String, Invoker&lt;T&gt;&gt; toInvokers(List&lt;URL&gt; urls) {</span><br><span class="line">        Map&lt;String, Invoker&lt;T&gt;&gt; newUrlInvokerMap = <span class="keyword">new</span> HashMap&lt;String, Invoker&lt;T&gt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(urls == <span class="keyword">null</span> || urls.size() == <span class="number">0</span>){</span><br><span class="line">            <span class="keyword">return</span> newUrlInvokerMap;</span><br><span class="line">        }</span><br><span class="line">        Set&lt;String&gt; keys = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        String queryProtocols = <span class="keyword">this</span>.queryMap.get(Constants.PROTOCOL_KEY);</span><br><span class="line">        <span class="keyword">for</span> (URL providerUrl : urls) {</span><br><span class="line">        	<span class="comment">//&#x5982;&#x679C;reference&#x7AEF;&#x914D;&#x7F6E;&#x4E86;protocol&#xFF0C;&#x5219;&#x53EA;&#x9009;&#x62E9;&#x5339;&#x914D;&#x7684;protocol</span></span><br><span class="line">        	<span class="keyword">if</span> (queryProtocols != <span class="keyword">null</span> &amp;&amp; queryProtocols.length() &gt;<span class="number">0</span>) {</span><br><span class="line">        		<span class="keyword">boolean</span> accept = <span class="keyword">false</span>;</span><br><span class="line">        		String[] acceptProtocols = queryProtocols.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        		<span class="keyword">for</span> (String acceptProtocol : acceptProtocols) {</span><br><span class="line">        			<span class="keyword">if</span> (providerUrl.getProtocol().equals(acceptProtocol)) {</span><br><span class="line">        				accept = <span class="keyword">true</span>;</span><br><span class="line">        				<span class="keyword">break</span>;</span><br><span class="line">        			}</span><br><span class="line">        		}</span><br><span class="line">        		<span class="keyword">if</span> (!accept) {</span><br><span class="line">        			<span class="keyword">continue</span>;</span><br><span class="line">        		}</span><br><span class="line">        	}</span><br><span class="line">            <span class="keyword">if</span> (Constants.EMPTY_PROTOCOL.equals(providerUrl.getProtocol())) {</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (! ExtensionLoader.getExtensionLoader(Protocol.class).hasExtension(providerUrl.getProtocol())) {</span><br><span class="line">                logger.error(<span class="keyword">new</span> IllegalStateException(<span class="string">&quot;Unsupported protocol &quot;</span> + providerUrl.getProtocol() + <span class="string">&quot; in notified url: &quot;</span> + providerUrl + <span class="string">&quot; from registry &quot;</span> + getUrl().getAddress() + <span class="string">&quot; to consumer &quot;</span> + NetUtils.getLocalHost() </span><br><span class="line">                        + <span class="string">&quot;, supported protocol: &quot;</span>+ExtensionLoader.getExtensionLoader(Protocol.class).getSupportedExtensions()));</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            URL url = mergeUrl(providerUrl);</span><br><span class="line">            </span><br><span class="line">            String key = url.toFullString(); <span class="comment">// URL&#x53C2;&#x6570;&#x662F;&#x6392;&#x5E8F;&#x7684;</span></span><br><span class="line">            <span class="keyword">if</span> (keys.contains(key)) { <span class="comment">// &#x91CD;&#x590D;URL</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            keys.add(key);</span><br><span class="line">            <span class="comment">// &#x7F13;&#x5B58;key&#x4E3A;&#x6CA1;&#x6709;&#x5408;&#x5E76;&#x6D88;&#x8D39;&#x7AEF;&#x53C2;&#x6570;&#x7684;URL&#xFF0C;&#x4E0D;&#x7BA1;&#x6D88;&#x8D39;&#x7AEF;&#x5982;&#x4F55;&#x5408;&#x5E76;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x670D;&#x52A1;&#x7AEF;URL&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5219;&#x91CD;&#x65B0;refer</span></span><br><span class="line">            Map&lt;String, Invoker&lt;T&gt;&gt; localUrlInvokerMap = <span class="keyword">this</span>.urlInvokerMap; <span class="comment">// local reference</span></span><br><span class="line">            Invoker&lt;T&gt; invoker = localUrlInvokerMap == <span class="keyword">null</span> ? <span class="keyword">null</span> : localUrlInvokerMap.get(key);</span><br><span class="line">            <span class="keyword">if</span> (invoker == <span class="keyword">null</span>) { <span class="comment">// &#x7F13;&#x5B58;&#x4E2D;&#x6CA1;&#x6709;&#xFF0C;&#x91CD;&#x65B0;refer</span></span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                	<span class="keyword">boolean</span> enabled = <span class="keyword">true</span>;</span><br><span class="line">                	<span class="keyword">if</span> (url.hasParameter(Constants.DISABLED_KEY)) {</span><br><span class="line">                		enabled = ! url.getParameter(Constants.DISABLED_KEY, <span class="keyword">false</span>);</span><br><span class="line">                	} <span class="keyword">else</span> {</span><br><span class="line">                		enabled = url.getParameter(Constants.ENABLED_KEY, <span class="keyword">true</span>);</span><br><span class="line">                	}</span><br><span class="line">                	<span class="keyword">if</span> (enabled) {</span><br><span class="line">                		invoker = <span class="keyword">new</span> InvokerDelegete&lt;T&gt;(protocol.refer(serviceType, url), url, providerUrl);</span><br><span class="line">                	}</span><br><span class="line">                } <span class="keyword">catch</span> (Throwable t) {</span><br><span class="line">                    logger.error(<span class="string">&quot;Failed to refer invoker for interface:&quot;</span>+serviceType+<span class="string">&quot;,url:(&quot;</span>+url+<span class="string">&quot;)&quot;</span> + t.getMessage(), t);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (invoker != <span class="keyword">null</span>) { <span class="comment">// &#x5C06;&#x65B0;&#x7684;&#x5F15;&#x7528;&#x653E;&#x5165;&#x7F13;&#x5B58;</span></span><br><span class="line">                    newUrlInvokerMap.put(key, invoker);</span><br><span class="line">                }</span><br><span class="line">            }<span class="keyword">else</span> {</span><br><span class="line">                newUrlInvokerMap.put(key, invoker);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        keys.clear();</span><br><span class="line">        <span class="keyword">return</span> newUrlInvokerMap;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x4F8B;&#x4E2D;&#x534F;&#x8BAE;&#x4E3A;dubbo&#xFF0C;&#x56E0;&#x6B64;&#x8C03;&#x7528;DubboProtocol&#x7684;refer&#x65B9;&#x6CD5;&#xFF0C;&#x521B;&#x5EFA;DubboInoker<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="function">Invoker&lt;T&gt; <span class="title">refer</span><span class="params">(Class&lt;T&gt; serviceType, URL url)</span> <span class="keyword">throws</span> RpcException </span>{</span><br><span class="line">        <span class="comment">// create rpc invoker.</span></span><br><span class="line">        DubboInvoker&lt;T&gt; invoker = <span class="keyword">new</span> DubboInvoker&lt;T&gt;(serviceType, url, getClients(url), invokers);</span><br><span class="line">        invokers.add(invoker);</span><br><span class="line">        <span class="keyword">return</span> invoker;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x83B7;&#x53D6;&#x5BA2;&#x6237;&#x7AEF;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ExchangeClient[] getClients(URL url){</span><br><span class="line">        <span class="comment">//&#x662F;&#x5426;&#x5171;&#x4EAB;&#x8FDE;&#x63A5;</span></span><br><span class="line">        <span class="keyword">boolean</span> service_share_connect = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> connections = url.getParameter(Constants.CONNECTIONS_KEY, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//&#x5982;&#x679C;connections&#x4E0D;&#x914D;&#x7F6E;&#xFF0C;&#x5219;&#x5171;&#x4EAB;&#x8FDE;&#x63A5;&#xFF0C;&#x5426;&#x5219;&#x6BCF;&#x670D;&#x52A1;&#x6BCF;&#x8FDE;&#x63A5;</span></span><br><span class="line">        <span class="keyword">if</span> (connections == <span class="number">0</span>){</span><br><span class="line">            service_share_connect = <span class="keyword">true</span>;</span><br><span class="line">            connections = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        ExchangeClient[] clients = <span class="keyword">new</span> ExchangeClient[connections];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; clients.length; i++) {</span><br><span class="line">            <span class="keyword">if</span> (service_share_connect){</span><br><span class="line">                clients[i] = getSharedClient(url);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                clients[i] = initClient(url);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> clients;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x6839;&#x636E;URL&#x521B;&#x5EFA;&#x5BF9;&#x5E94;&#x7684;ExchangeClient<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">     * &#x521B;&#x5EFA;&#x65B0;&#x8FDE;&#x63A5;.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ExchangeClient <span class="title">initClient</span><span class="params">(URL url)</span> </span>{</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// client type setting.</span></span><br><span class="line">        String str = url.getParameter(Constants.CLIENT_KEY, url.getParameter(Constants.SERVER_KEY, Constants.DEFAULT_REMOTING_CLIENT));</span><br><span class="line"></span><br><span class="line">        String version = url.getParameter(Constants.DUBBO_VERSION_KEY);</span><br><span class="line">        <span class="keyword">boolean</span> compatible = (version != <span class="keyword">null</span> &amp;&amp; version.startsWith(<span class="string">&quot;1.0.&quot;</span>));</span><br><span class="line">        url = url.addParameter(Constants.CODEC_KEY, Version.isCompatibleVersion() &amp;&amp; compatible ? COMPATIBLE_CODEC_NAME : DubboCodec.NAME);</span><br><span class="line">        <span class="comment">//&#x9ED8;&#x8BA4;&#x5F00;&#x542F;heartbeat</span></span><br><span class="line">        url = url.addParameterIfAbsent(Constants.HEARTBEAT_KEY, String.valueOf(Constants.DEFAULT_HEARTBEAT));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// BIO&#x5B58;&#x5728;&#x4E25;&#x91CD;&#x6027;&#x80FD;&#x95EE;&#x9898;&#xFF0C;&#x6682;&#x65F6;&#x4E0D;&#x5141;&#x8BB8;&#x4F7F;&#x7528;</span></span><br><span class="line">        <span class="keyword">if</span> (str != <span class="keyword">null</span> &amp;&amp; str.length() &gt; <span class="number">0</span> &amp;&amp; ! ExtensionLoader.getExtensionLoader(Transporter.class).hasExtension(str)) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Unsupported client type: &quot;</span> + str + <span class="string">&quot;,&quot;</span> +</span><br><span class="line">                    <span class="string">&quot; supported client type is &quot;</span> + StringUtils.join(ExtensionLoader.getExtensionLoader(Transporter.class).getSupportedExtensions(), <span class="string">&quot; &quot;</span>));</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        ExchangeClient client ;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//&#x8BBE;&#x7F6E;&#x8FDE;&#x63A5;&#x5E94;&#x8BE5;&#x662F;lazy&#x7684; </span></span><br><span class="line">            <span class="keyword">if</span> (url.getParameter(Constants.LAZY_CONNECT_KEY, <span class="keyword">false</span>)){</span><br><span class="line">                client = <span class="keyword">new</span> LazyConnectExchangeClient(url ,requestHandler);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                client = Exchangers.connect(url ,requestHandler);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (RemotingException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(<span class="string">&quot;Fail to create remoting client for service(&quot;</span> + url</span><br><span class="line">                    + <span class="string">&quot;): &quot;</span> + e.getMessage(), e);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<p>&#x6839;&#x636E;URL&#x4E2D;client&#x53C2;&#x6570;&#x9009;&#x62E9;&#x5BF9;&#x5E94;&#x7684;Transport&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;NettyTransporter&#xFF0C;&#x901A;&#x8FC7;Transport&#x521B;&#x5EFA;&#x5BF9;&#x5E94;NettyClient<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyTransporter</span> <span class="keyword">implements</span> <span class="title">Transporter</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = <span class="string">&quot;netty&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Server <span class="title">bind</span><span class="params">(URL url, ChannelHandler listener)</span> <span class="keyword">throws</span> RemotingException </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> NettyServer(url, listener);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Client <span class="title">connect</span><span class="params">(URL url, ChannelHandler listener)</span> <span class="keyword">throws</span> RemotingException </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> NettyClient(url, listener);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x5BA2;&#x6237;&#x7AEF;&#x8C03;&#x7528;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#xFF0C;&#x6267;&#x884C;DubboInoker&#x7684;doInvoke&#x65B9;&#x6CD5;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Result <span class="title">doInvoke</span><span class="params">(<span class="keyword">final</span> Invocation invocation)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        RpcInvocation inv = (RpcInvocation) invocation;</span><br><span class="line">        <span class="keyword">final</span> String methodName = RpcUtils.getMethodName(invocation);</span><br><span class="line">        inv.setAttachment(Constants.PATH_KEY, getUrl().getPath());</span><br><span class="line">        inv.setAttachment(Constants.VERSION_KEY, version);</span><br><span class="line">        </span><br><span class="line">        ExchangeClient currentClient;</span><br><span class="line">        <span class="keyword">if</span> (clients.length == <span class="number">1</span>) {</span><br><span class="line">            currentClient = clients[<span class="number">0</span>];</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            currentClient = clients[index.getAndIncrement() % clients.length];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">boolean</span> isAsync = RpcUtils.isAsync(getUrl(), invocation);</span><br><span class="line">            <span class="keyword">boolean</span> isOneway = RpcUtils.isOneway(getUrl(), invocation);</span><br><span class="line">            <span class="keyword">int</span> timeout = getUrl().getMethodParameter(methodName, Constants.TIMEOUT_KEY,Constants.DEFAULT_TIMEOUT);</span><br><span class="line">            <span class="keyword">if</span> (isOneway) {</span><br><span class="line">            	<span class="keyword">boolean</span> isSent = getUrl().getMethodParameter(methodName, Constants.SENT_KEY, <span class="keyword">false</span>);</span><br><span class="line">                currentClient.send(inv, isSent);</span><br><span class="line">                RpcContext.getContext().setFuture(<span class="keyword">null</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> RpcResult();</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (isAsync) {</span><br><span class="line">            	ResponseFuture future = currentClient.request(inv, timeout) ;</span><br><span class="line">                RpcContext.getContext().setFuture(<span class="keyword">new</span> FutureAdapter&lt;Object&gt;(future));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> RpcResult();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">            	RpcContext.getContext().setFuture(<span class="keyword">null</span>);</span><br><span class="line">                <span class="keyword">return</span> (Result) currentClient.request(inv, timeout).get();</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (TimeoutException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(RpcException.TIMEOUT_EXCEPTION, <span class="string">&quot;Invoke remote method timeout. method: &quot;</span> + invocation.getMethodName() + <span class="string">&quot;, provider: &quot;</span> + getUrl() + <span class="string">&quot;, cause: &quot;</span> + e.getMessage(), e);</span><br><span class="line">        } <span class="keyword">catch</span> (RemotingException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RpcException(RpcException.NETWORK_EXCEPTION, <span class="string">&quot;Failed to invoke remote method: &quot;</span> + invocation.getMethodName() + <span class="string">&quot;, provider: &quot;</span> + getUrl() + <span class="string">&quot;, cause: &quot;</span> + e.getMessage(), e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></p>
<h1 id="Dubbo&#x4E3B;&#x8981;&#x6A21;&#x5757;&#x5206;&#x6790;"><a href="#Dubbo&#x4E3B;&#x8981;&#x6A21;&#x5757;&#x5206;&#x6790;" class="headerlink" title="Dubbo&#x4E3B;&#x8981;&#x6A21;&#x5757;&#x5206;&#x6790;"></a>Dubbo&#x4E3B;&#x8981;&#x6A21;&#x5757;&#x5206;&#x6790;</h1><h2 id="Dubbo&#x6269;&#x5C55;&#x6A21;&#x5757;"><a href="#Dubbo&#x6269;&#x5C55;&#x6A21;&#x5757;" class="headerlink" title="Dubbo&#x6269;&#x5C55;&#x6A21;&#x5757;"></a>Dubbo&#x6269;&#x5C55;&#x6A21;&#x5757;</h2><h2 id="Dubbo&#x5F88;&#x591A;&#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;Dubbo&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x5BF9;&#x5E94;&#x7684;&#x5C5E;&#x6027;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5728;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#x65F6;Dubbo&#x4F1A;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x7684;&#x503C;&#x5728;URL&#x4E2D;&#x6DFB;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x7684;Adaptive&#x4F1A;&#x6839;&#x636E;URL&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x503C;&#x9009;&#x62E9;&#x76F8;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF08;&#x5982;&#x679C;&#x6A21;&#x5757;&#x5B9E;&#x73B0;&#x7C7B;&#x6CA1;&#x6709;Adaptive&#x6CE8;&#x89E3;&#xFF0C;Dubbo&#x4F1A;&#x52A8;&#x6001;&#x7684;&#x521B;&#x5EFA;&#x8BE5;&#x6A21;&#x5757;&#x7684;Adaptive&#x5B9E;&#x73B0;&#x7C7B;&#xFF09;&#x3002;"><a href="#Dubbo&#x5F88;&#x591A;&#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;Dubbo&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x5BF9;&#x5E94;&#x7684;&#x5C5E;&#x6027;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5728;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#x65F6;Dubbo&#x4F1A;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x7684;&#x503C;&#x5728;URL&#x4E2D;&#x6DFB;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x7684;Adaptive&#x4F1A;&#x6839;&#x636E;URL&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x503C;&#x9009;&#x62E9;&#x76F8;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF08;&#x5982;&#x679C;&#x6A21;&#x5757;&#x5B9E;&#x73B0;&#x7C7B;&#x6CA1;&#x6709;Adaptive&#x6CE8;&#x89E3;&#xFF0C;Dubbo&#x4F1A;&#x52A8;&#x6001;&#x7684;&#x521B;&#x5EFA;&#x8BE5;&#x6A21;&#x5757;&#x7684;Adaptive&#x5B9E;&#x73B0;&#x7C7B;&#xFF09;&#x3002;" class="headerlink" title="Dubbo&#x5F88;&#x591A;&#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;Dubbo&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x5BF9;&#x5E94;&#x7684;&#x5C5E;&#x6027;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5728;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#x65F6;Dubbo&#x4F1A;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x7684;&#x503C;&#x5728;URL&#x4E2D;&#x6DFB;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x7684;Adaptive&#x4F1A;&#x6839;&#x636E;URL&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x503C;&#x9009;&#x62E9;&#x76F8;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF08;&#x5982;&#x679C;&#x6A21;&#x5757;&#x5B9E;&#x73B0;&#x7C7B;&#x6CA1;&#x6709;Adaptive&#x6CE8;&#x89E3;&#xFF0C;Dubbo&#x4F1A;&#x52A8;&#x6001;&#x7684;&#x521B;&#x5EFA;&#x8BE5;&#x6A21;&#x5757;&#x7684;Adaptive&#x5B9E;&#x73B0;&#x7C7B;&#xFF09;&#x3002;"></a>Dubbo&#x5F88;&#x591A;&#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;Dubbo&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x5BF9;&#x5E94;&#x7684;&#x5C5E;&#x6027;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5728;&#x53D1;&#x5E03;&#x670D;&#x52A1;&#x65F6;Dubbo&#x4F1A;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x7684;&#x503C;&#x5728;URL&#x4E2D;&#x6DFB;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x7684;Adaptive&#x4F1A;&#x6839;&#x636E;URL&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x503C;&#x9009;&#x62E9;&#x76F8;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF08;&#x5982;&#x679C;&#x6A21;&#x5757;&#x5B9E;&#x73B0;&#x7C7B;&#x6CA1;&#x6709;Adaptive&#x6CE8;&#x89E3;&#xFF0C;Dubbo&#x4F1A;&#x52A8;&#x6001;&#x7684;&#x521B;&#x5EFA;&#x8BE5;&#x6A21;&#x5757;&#x7684;Adaptive&#x5B9E;&#x73B0;&#x7C7B;&#xFF09;&#x3002;</h2><h3 id="&#x4E3B;&#x8981;&#x7C7B;&#x56FE;"><a href="#&#x4E3B;&#x8981;&#x7C7B;&#x56FE;" class="headerlink" title="&#x4E3B;&#x8981;&#x7C7B;&#x56FE;"></a>&#x4E3B;&#x8981;&#x7C7B;&#x56FE;</h3><p><img src="/2016/04/27/dubbo-provider-start-process-analysis/extension_module_frame.png" alt="extension_module_frame"></p>
<ul>
<li>Active&#x6CE8;&#x89E3;&#xFF0C;&#x7C7B;&#x6CE8;&#x89E3;&#xFF0C;&#x5BF9;&#x4E8E;&#x53EF;&#x4EE5;&#x88AB;&#x6846;&#x67B6;&#x4E2D;&#x81EA;&#x52A8;&#x6FC0;&#x6D3B;&#x52A0;&#x8F7D;&#x6269;&#x5C55;&#xFF0C;&#x6B64;Annotation&#x7528;&#x4E8E;&#x914D;&#x7F6E;&#x6269;&#x5C55;&#x88AB;&#x81EA;&#x52A8;&#x6FC0;&#x6D3B;&#x52A0;&#x8F7D;&#x6761;&#x4EF6;&#x3002;</li>
</ul>
<h3 id="&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;"><a href="#&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;" class="headerlink" title="&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;"></a>&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;</h3><h2 id="Registry"><a href="#Registry" class="headerlink" title="Registry"></a>Registry</h2><h2 id="Dubbo&#x670D;&#x52A1;&#x7AEF;"><a href="#Dubbo&#x670D;&#x52A1;&#x7AEF;" class="headerlink" title="Dubbo&#x670D;&#x52A1;&#x7AEF;"></a>Dubbo&#x670D;&#x52A1;&#x7AEF;</h2><h2 id="Dubbo&#x5BA2;&#x6237;&#x7AEF;"><a href="#Dubbo&#x5BA2;&#x6237;&#x7AEF;" class="headerlink" title="Dubbo&#x5BA2;&#x6237;&#x7AEF;"></a>Dubbo&#x5BA2;&#x6237;&#x7AEF;</h2><h2 id="Dubbo-Filter"><a href="#Dubbo-Filter" class="headerlink" title="Dubbo Filter"></a>Dubbo Filter</h2><h2 id="Dubbo-Transport"><a href="#Dubbo-Transport" class="headerlink" title="Dubbo Transport"></a>Dubbo Transport</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mybatis and spring integrate analyze]]></title>
      <url>https://qiufanghua.github.io/2016/04/27/mybatis-and-spring-integrate-analyze/</url>
      <content type="html"><![CDATA[<h1 id="Mybatis&#x4E0E;Spring&#x96C6;&#x6210;"><a href="#Mybatis&#x4E0E;Spring&#x96C6;&#x6210;" class="headerlink" title="Mybatis&#x4E0E;Spring&#x96C6;&#x6210;"></a>Mybatis&#x4E0E;Spring&#x96C6;&#x6210;</h1><ul>
<li>Spring&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;SqlSessionFactoryBean&#xFF0C;&#x542F;&#x52A8;Mybatis&#x3002;&#x5305;&#x62EC;Mybatis&#x53C2;&#x6570;&#x914D;&#x7F6E;&#x4EE5;&#x53CA;Mybatis statement&#x89E3;&#x6790;&#x3002;<br><img src="/2016/04/27/mybatis-and-spring-integrate-analyze/sqlsessionfactorybean.png" alt="sqlsessionfactorybean"></li>
<li>&#x914D;&#x7F6E;MapperScannerConfigurer&#xFF0C;&#x914D;&#x7F6E;&#x7684;MapperScanConfigurer&#x5728;Spring&#x542F;&#x52A8;&#x65F6;&#x8C03;&#x7528;ClassPathMapperScanner&#x626B;&#x63CF;basePackage&#x5305;&#x4E0B;&#x7684;&#x63A5;&#x53E3;Mapper&#xFF0C;&#x751F;&#x6210;BeanDefinition&#xFF0C;&#x8BBE;&#x7F6E;mapperInterface&#x4E3A;&#x6211;&#x4EEC;&#x7684;Mapper&#x63A5;&#x53E3;&#xFF0C;&#x8BBE;&#x7F6E;BeanClass&#x4E3A;MapperFactoryBean&#x3002;<br><img src="/2016/04/27/mybatis-and-spring-integrate-analyze/mapper_scan_configurer.png" alt="mapper_scan_configurer"></li>
<li>Spring&#x81EA;&#x52A8;&#x6CE8;&#x5165;&#x63A5;&#x53E3;Mapper&#x65F6;&#x4F1A;&#x8C03;&#x7528;&#x4E0A;&#x4E00;&#x6B65;&#x521B;&#x5EFA;MapperFactoryBean&#x7684;getObject&#x65B9;&#x6CD5;&#xFF0C;MapperFactoryBean&#x521B;&#x5EFA;MapperProxy&#xFF0C;&#x7531;&#x6539;&#x5BF9;&#x8C61;&#x4EE3;&#x7406;&#x6211;&#x4EEC;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x3002;</li>
</ul>
<h2 id="Spring&#x6CE8;&#x5165;&#x63A5;&#x53E3;Mapper&#x5BF9;&#x8C61;&#x8FC7;&#x7A0B;"><a href="#Spring&#x6CE8;&#x5165;&#x63A5;&#x53E3;Mapper&#x5BF9;&#x8C61;&#x8FC7;&#x7A0B;" class="headerlink" title="Spring&#x6CE8;&#x5165;&#x63A5;&#x53E3;Mapper&#x5BF9;&#x8C61;&#x8FC7;&#x7A0B;"></a>Spring&#x6CE8;&#x5165;&#x63A5;&#x53E3;Mapper&#x5BF9;&#x8C61;&#x8FC7;&#x7A0B;</h2><p><img src="/2016/04/27/mybatis-and-spring-integrate-analyze/mapper_sequence.png" alt="mapper_sequence"></p>
<ul>
<li>MapperScannerConfigurer&#xFF0C;Spring&#x5BB9;&#x5668;&#x8C03;&#x7528;&#x8BE5;&#x7C7B;postProcessBeanDefinitionRegistry&#x65B9;&#x6CD5;&#xFF0C;&#x521B;&#x5EFA;ClassPathMapperScanner&#x5B9E;&#x4F8B;&#xFF0C;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x8BBE;&#x7F6E;&#x8BE5;&#x5B9E;&#x4F8B;&#xFF0C;&#x8C03;&#x7528;ClassPathMapperScanner scan&#x65B9;&#x6CD5;</li>
<li>ClassPathMapperScanner&#x626B;&#x63CF;basePackage&#x5305;&#x4E0B;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x751F;&#x6210;BeanDefinition&#xFF0C;&#x8BBE;&#x7F6E;BeanClass&#x4E3A;MapperFactoryBean&#xFF0C;&#x5E76;&#x81EA;&#x52A8;&#x6CE8;&#x5165;SqlSessionFactory&#x5B9E;&#x4F8B;&#xFF0C;&#x5728;&#x6CE8;&#x5165;SqlSessionFactory&#x5B9E;&#x4F8B;&#x65F6;&#x521B;&#x5EFA;SqlSessionTemplate&#x5B9E;&#x4F8B;&#x3002;</li>
<li>Spring&#x6CE8;&#x5165;&#x63A5;&#x53E3;Mapper&#x65F6;&#xFF0C;&#x5219;&#x8C03;&#x7528;&#x4E0A;&#x4E00;&#x6B65;&#x521B;&#x5EFA;MapperFactoryBean&#x7684;getObject&#x65B9;&#x6CD5;&#x3002;</li>
<li>&#x8C03;&#x7528;SqlSessionTemplate&#x7684;getMapper&#x65B9;&#x6CD5;&#x3002;</li>
<li>&#x8C03;&#x7528;Mybatis&#x7684;MapperRegistry&#x7684;getMapper&#x65B9;&#x6CD5;&#x3002;</li>
<li>&#x521B;&#x5EFA;MapperProxy&#x4EE3;&#x7406;&#x7C7B;&#x5B9E;&#x4F8B;&#xFF0C;&#x8FD4;&#x56DE;&#x8BE5;&#x5B9E;&#x4F8B;</li>
</ul>
<h1 id="&#x63A5;&#x53E3;Mapper&#x67E5;&#x8BE2;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x8FC7;&#x7A0B;"><a href="#&#x63A5;&#x53E3;Mapper&#x67E5;&#x8BE2;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x63A5;&#x53E3;Mapper&#x67E5;&#x8BE2;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x8FC7;&#x7A0B;"></a>&#x63A5;&#x53E3;Mapper&#x67E5;&#x8BE2;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x8FC7;&#x7A0B;</h1><p>&#x6211;&#x4EEC;&#x4EE5;selectByExample&#x4E3A;&#x4F8B;<br><img src="/2016/04/27/mybatis-and-spring-integrate-analyze/mapper_selectByExample.png" alt="mapper_selectByExample"></p>
<ul>
<li>&#x8C03;&#x7528;&#x6211;&#x4EEC;Mapper&#x63A5;&#x53E3;select&#x65B9;&#x6CD5;&#xFF08;&#x65B9;&#x6CD5;&#x540D;&#x5BF9;&#x5E94;&#x6211;&#x4EEC;&#x7684;SQL Mapper&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;id&#xFF09;</li>
<li>MapperProxy&#x5BF9;&#x8C61;&#x4EE3;&#x7406;&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x521B;&#x5EFA;MapperMethod</li>
<li>MapperMethod&#x4E2D;&#x751F;&#x6210;SqlCommand&#x4FDD;&#x5B58;SQL&#x547D;&#x4EE4;&#x7C7B;&#x578B;&#x4E0E;MappedStatement&#x7C7B;&#x578B;&#xFF0C;MethodSignature&#x4FDD;&#x5B58;&#x65B9;&#x6CD5;&#x7B7E;&#x540D;&#x4FE1;&#x606F;&#x3002;</li>
<li>&#x8C03;&#x7528;SqlSessionTemplate&#x6267;&#x884C;selectList&#x65B9;&#x6CD5;&#xFF0C;&#x6539;&#x65B9;&#x6CD5;&#x4F1A;&#x5148;&#x6839;&#x636E;&#x662F;&#x5426;&#x914D;&#x7F6E;&#x6709;&#x4E8B;&#x52A1;&#x83B7;&#x53D6;&#x6216;&#x521B;&#x5EFA;Mybatis SQLSession</li>
</ul>
<p>DefaultSqlSession selectList<br><img src="/2016/04/27/mybatis-and-spring-integrate-analyze/defaultSqlSession_selectList.png" alt="defaultSqlSession_selectList"></p>
<ul>
<li>&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x6267;&#x884C;&#x7C7B;&#x578B;&#x521B;&#x5EFA;&#x6267;&#x884C;&#x5668;&#xFF0C;eg&#xFF1A;Batch&#x3001;Simple&#x4EE5;&#x53CA;Reuse&#x6267;&#x884C;&#x5668;</li>
<li>&#x521B;&#x5EFA;RoutingStatementHander&#x8BED;&#x53E5;&#x5904;&#x7406;&#x5668;</li>
<li>&#x521B;&#x5EFA;DefaultParameterHandler&#x8BBE;&#x7F6E;&#x6267;&#x884C;&#x7684;sql&#x53C2;&#x6570;</li>
<li>&#x521B;&#x5EFA;DefaultResultSetHandler&#x5904;&#x7406;JDBC&#x67E5;&#x8BE2;&#x7684;&#x7ED3;&#x679C;&#x96C6;</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Netty Resource Leak Detector]]></title>
      <url>https://qiufanghua.github.io/2016/04/27/Netty-Resource-Leak-Detector/</url>
      <content type="html"><![CDATA[<h1 id="Netty-Resources&#x6CC4;&#x6F0F;&#x68C0;&#x6D4B;"><a href="#Netty-Resources&#x6CC4;&#x6F0F;&#x68C0;&#x6D4B;" class="headerlink" title="Netty Resources&#x6CC4;&#x6F0F;&#x68C0;&#x6D4B;"></a>Netty Resources&#x6CC4;&#x6F0F;&#x68C0;&#x6D4B;</h1><p>&#x65E9;&#x524D;&#x6709;&#x770B;&#x5230;&#x6587;&#x7AE0;&#x4ECB;&#x7ECD;Java PhantomReferences(&#x865A;&#x5F15;&#x7528;)&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x68C0;&#x6D4B;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x6CC4;&#x6F0F;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5B9E;&#x9645;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6700;&#x8FD1;&#x770B;&#x5230;Netty&#x6E90;&#x7801;&#x65F6;&#x53D1;&#x73B0;&#x6709;&#x7528;&#x5230;&#x4ED6;&#x68C0;&#x6D4B;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x6CC4;&#x6F0F;&#xFF0C;&#x521A;&#x597D;&#x6700;&#x8FD1;&#x4E5F;&#x5728;&#x5F3A;&#x8FEB;&#x81EA;&#x5DF1;&#x5199;&#x535A;&#x5BA2;&#xFF0C;&#x5E0C;&#x671B;&#x8FD9;&#x53EA;&#x662F;&#x4E2A;&#x5F00;&#x59CB;&#x3002;&#x4E0B;&#x9762;&#x6211;&#x6309;&#x4E09;&#x4E2A;&#x65B9;&#x9762;&#x6765;&#x8FDB;&#x884C;&#x9610;&#x8FF0;&#x3002;</p>
<h2 id="&#x603B;&#x4F53;&#x63CF;&#x53D9;"><a href="#&#x603B;&#x4F53;&#x63CF;&#x53D9;" class="headerlink" title="&#x603B;&#x4F53;&#x63CF;&#x53D9;"></a>&#x603B;&#x4F53;&#x63CF;&#x53D9;</h2><p><img src="/2016/04/27/Netty-Resource-Leak-Detector/resource_leak_class_diagram.png" alt="resources leak detector"></p>
<p>Netty DefaultResourceLeak&#x901A;&#x8FC7;&#x7EE7;&#x627F;Java PhantomReference&#x63D0;&#x4F9B;&#x989D;&#x5916;&#x63A5;&#x53E3;record()&#x8BB0;&#x5F55;&#x8BBF;&#x95EE;&#x8D44;&#x6E90;&#x7684;&#x5806;&#x6808;&#x4FE1;&#x606F;&#x4EE5;&#x53CA;&#x63D0;&#x4F9B;close()&#x8BBE;&#x7F6E;&#x5F15;&#x7528;&#x7684;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x91CA;&#x653E;&#xFF0C;&#x5728;&#x8D44;&#x6E90;&#x6CA1;&#x6709;&#x5F3A;&#x5F15;&#x7528;&#x65F6;&#x8BE5;&#x5BF9;&#x8C61;&#xFF0C;&#x7531;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5668;&#x51B3;&#x5B9A;&#x4F55;&#x65F6;&#x6DFB;&#x52A0;&#x8BE5;&#x8D44;&#x6E90;&#x5F15;&#x7528;&#x5230;&#x5F15;&#x7528;&#x961F;&#x5217;&#xFF0C;&#x901A;&#x8FC7;&#x904D;&#x5386;&#x5F15;&#x7528;&#x961F;&#x5217;&#xFF0C;&#x5224;&#x65AD;&#x5F15;&#x7528;&#x7684;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x91CA;&#x653E;&#x3002;</p>
<h3 id="ResourceLeak"><a href="#ResourceLeak" class="headerlink" title="ResourceLeak"></a>ResourceLeak</h3><p>&#x63D0;&#x4F9B;&#x65B9;&#x6CD5;record()&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x65B9;&#x6CD5;&#x5806;&#x6808;&#x4FE1;&#x606F;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8BBF;&#x95EE;&#x8D44;&#x6E90;&#x524D;&#x8C03;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x5806;&#x6808;&#x4FE1;&#x606F;&#xFF0C;&#x901A;&#x8FC7;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x8D44;&#x6E90;&#x65F6;&#xFF0C;&#x83B7;&#x53D6;&#x5230;&#x7684;&#x662F;&#x8BE5;&#x8D44;&#x6E90;&#x7684;&#x5305;&#x88C5;&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x5305;&#x88C5;&#x5BF9;&#x8C61;&#x4E2D;&#x6709;&#x9009;&#x62E9;&#x7684;&#x8C03;&#x7528;ResourceLeak&#x5BF9;&#x8C61;&#x7684;record&#x65B9;&#x6CD5;&#xFF1B;&#x5728;&#x8D44;&#x6E90;&#x91CA;&#x653E;&#x65F6;&#x8C03;&#x7528;close()&#x65B9;&#x6CD5;&#xFF0C;&#x505C;&#x6B62;&#x5BF9;&#x8BE5;&#x8D44;&#x6E90;&#x7684;&#x76D1;&#x63A7;&#x3002;</p>
<h3 id="DefaultResourceLeak"><a href="#DefaultResourceLeak" class="headerlink" title="DefaultResourceLeak"></a>DefaultResourceLeak</h3><p>ResourceLeak&#x7684;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x7EE7;&#x627F;&#x4E86;Java PhantomReference&#x3002;&#x8BE5;&#x5BF9;&#x8C61;&#x5BF9;&#x5E94;&#x4E8E;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5305;&#x542B;&#x524D;&#x3001;&#x540E;&#x8282;&#x70B9;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x68C0;&#x6D4B;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x91CA;&#x653E;&#x6807;&#x8BC6;freed&#x4EE5;&#x53CA;&#x6700;&#x8FD1;&#x8BB0;&#x5F55;&#x7684;&#x68C0;&#x6D4B;&#x8D44;&#x6E90;&#x7684;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x5806;&#x6808;&#x4FE1;&#x606F;&#x3002;</p>
<h3 id="ResourceLeakDetector"><a href="#ResourceLeakDetector" class="headerlink" title="ResourceLeakDetector"></a>ResourceLeakDetector</h3><p>&#x8D44;&#x6E90;&#x6CC4;&#x6F0F;&#x68C0;&#x6D4B;&#xFF0C;&#x7EF4;&#x62A4;&#x4E86;ResourceLeak&#x7684;&#x53CC;&#x5411;&#x94FE;&#x8868;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x5BF9;&#x8C61;open(T obj)&#x65B9;&#x6CD5;&#x65B0;&#x589E;DefaultResourceLeak&#x5BF9;&#x8C61;&#x8DDF;&#x8E2A;&#x4F20;&#x5165;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x540C;&#x65F6;&#x904D;&#x5386;&#x5F15;&#x7528;&#x961F;&#x5217;ReferenceQueue<object> refQueue&#x83B7;&#x53D6;DefaultResourceLeak&#x5BF9;&#x8C61;&#x68C0;&#x6D4B;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x91CA;&#x653E;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x91CA;&#x653E;&#x6253;&#x5370;&#x8D44;&#x6E90;&#x6CC4;&#x6F0F;&#x65E5;&#x5FD7;&#x5E76;&#x7F6E;ConcurrentMap<string, boolean=""> reportedLeaks&#x6807;&#x8BC6;</string,></object></p>
<h2 id="&#x6D41;&#x7A0B;&#x63CF;&#x53D9;"><a href="#&#x6D41;&#x7A0B;&#x63CF;&#x53D9;" class="headerlink" title="&#x6D41;&#x7A0B;&#x63CF;&#x53D9;"></a>&#x6D41;&#x7A0B;&#x63CF;&#x53D9;</h2><h2 id="&#x5B9E;&#x73B0;&#x7EC6;&#x8282;"><a href="#&#x5B9E;&#x73B0;&#x7EC6;&#x8282;" class="headerlink" title="&#x5B9E;&#x73B0;&#x7EC6;&#x8282;"></a>&#x5B9E;&#x73B0;&#x7EC6;&#x8282;</h2><h2 id="&#x6613;&#x5FFD;&#x7565;&#x70B9;"><a href="#&#x6613;&#x5FFD;&#x7565;&#x70B9;" class="headerlink" title="&#x6613;&#x5FFD;&#x7565;&#x70B9;"></a>&#x6613;&#x5FFD;&#x7565;&#x70B9;</h2><ol>
<li>&#x5F53;&#x5BF9;&#x8C61;&#x6CA1;&#x6709;&#x5F3A;&#x5F15;&#x7528;&#x65F6;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x5BF9;&#x8C61;Reference&#x4F1A;&#x6DFB;&#x52A0;&#x5230;&#x5F15;&#x7528;&#x961F;&#x5217;&#xFF0C;&#x5F15;&#x7528;&#x5BF9;&#x8C61;Reference&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x662F;&#x7531;&#x521B;&#x5EFA;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x65F6;&#x51B3;&#x5B9A;&#x7684;eg : new DefaultResourceLeak(obj);&#x904D;&#x5386;&#x5F15;&#x7528;&#x961F;&#x5217;&#x65F6;&#x5219;&#x8FD4;&#x56DE;&#x7684;&#x7C7B;&#x578B;&#x662F;DefaultResourceLeak&#x5BF9;&#x8C61;</li>
<li>DefaultResourceLeak(Object referent)&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x6709;&#x5224;&#x65AD;referent&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x4E3A;&#x7A7A;&#x5219;&#x4E0D;&#x4F1A;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x5F15;&#x7528;&#x961F;&#x5217;&#xFF1A;super(referent, referent != null? refQueue : null);</li>
<li>&#x4F55;&#x65F6;&#x6765;&#x62A5;&#x9053;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x6709;&#x6CC4;&#x6F0F;&#x3002;&#x8C03;&#x7528;ResourceLeakDetector open(T obj)&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x904D;&#x5386;&#x5F15;&#x7528;&#x961F;&#x5217;&#x3002;</li>
<li>&#x4F55;&#x65F6;&#x4ECE;&#x5F15;&#x7528;&#x961F;&#x5217;&#x4E2D;&#x5220;&#x9664;&#x5F15;&#x7528;&#x3002;&#x8D44;&#x6E90;&#x91CA;&#x653E;&#x65F6;&#x4F1A;&#x8C03;&#x7528;DefaultResourceLeak close()&#x65B9;&#x6CD5;&#xFF0C;&#x4F1A;&#x4ECE;&#x94FE;&#x8868;&#x4E2D;&#x5220;&#x9664;&#x8BE5;&#x8282;&#x70B9;&#x3002;<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">close</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (freed.compareAndSet(<span class="keyword">false</span>, <span class="keyword">true</span>)) {</span><br><span class="line">        <span class="keyword">synchronized</span> (head) {</span><br><span class="line">            active --;</span><br><span class="line">            prev.next = next;</span><br><span class="line">            next.prev = prev;</span><br><span class="line">            prev = <span class="keyword">null</span>;</span><br><span class="line">            next = <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://qiufanghua.github.io/2016/04/24/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
